{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{supabase}from'../supabaseClient.ts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthCallback=()=>{const[error,setError]=useState(null);const navigate=useNavigate();useEffect(()=>{// Handle the OAuth or magic link callback\nconst handleAuthCallback=async()=>{try{// Get the auth code and session from URL\nconst hashParams=new URLSearchParams(window.location.hash.substring(1));const queryParams=new URLSearchParams(window.location.search);// For OAuth flows, handle the session\nif(hashParams.get('access_token')){var _data$session;// Supabase will automatically handle this through getSession()\nconst{data,error}=await supabase.auth.getSession();if(error)throw error;if(data!==null&&data!==void 0&&(_data$session=data.session)!==null&&_data$session!==void 0&&_data$session.user){// Check if profile exists, if not create one\nconst{data:profile,error:profileError}=await supabase.from('profiles').select('*').eq('id',data.session.user.id).single();if(profileError&&profileError.message.includes('No rows found')){// Create a profile for the user\nconst{error:insertError}=await supabase.from('profiles').insert([{id:data.session.user.id,username:data.session.user.user_metadata.username||`user${Date.now().toString().slice(-6)}`,email:data.session.user.email,role:'user'}]);if(insertError)console.error('Error creating profile:',insertError);}// Redirect to dashboard\nnavigate('/dashboard');}}// For email link (OTP) flow\nelse if(queryParams.get('type')==='recovery'||queryParams.get('type')==='signup'){// Get token from query params\nconst token=queryParams.get('token');if(!token)throw new Error('No token found in URL');// Handle password recovery flow\nif(queryParams.get('type')==='recovery'){navigate('/reset-password',{state:{token}});}// Handle signup confirmation\nelse if(queryParams.get('type')==='signup'){// Confirm the signup if needed\nconst{error}=await supabase.auth.verifyOtp({token_hash:token,type:'signup'});if(error)throw error;// Redirect to login after successful confirmation\nnavigate('/login',{state:{message:'Email confirmed! You can now log in.'}});}}else{// Fallback - go to dashboard if logged in, otherwise to login\nconst{data}=await supabase.auth.getSession();navigate(data.session?'/dashboard':'/login');}}catch(err){console.error('Auth callback error:',err);setError(err.message||'An error occurred during authentication');}};handleAuthCallback();},[navigate]);if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"auth-callback-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-callback-error\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-error\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Authentication Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>navigate('/login'),children:\"Back to Login\"})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"auth-callback-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-callback-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Completing authentication...\"})]})});};export default AuthCallback;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","supabase","jsx","_jsx","jsxs","_jsxs","AuthCallback","error","setError","navigate","handleAuthCallback","hashParams","URLSearchParams","window","location","hash","substring","queryParams","search","get","_data$session","data","auth","getSession","session","user","profile","profileError","from","select","eq","id","single","message","includes","insertError","insert","username","user_metadata","Date","now","toString","slice","email","role","console","token","Error","state","verifyOtp","token_hash","type","err","className","children","onClick"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/AuthCallback.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient.ts';\n\nconst AuthCallback: React.FC = () => {\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Handle the OAuth or magic link callback\n    const handleAuthCallback = async () => {\n      try {\n        // Get the auth code and session from URL\n        const hashParams = new URLSearchParams(window.location.hash.substring(1));\n        const queryParams = new URLSearchParams(window.location.search);\n\n        // For OAuth flows, handle the session\n        if (hashParams.get('access_token')) {\n          // Supabase will automatically handle this through getSession()\n          const { data, error } = await supabase.auth.getSession();\n          \n          if (error) throw error;\n          \n          if (data?.session?.user) {\n            // Check if profile exists, if not create one\n            const { data: profile, error: profileError } = await supabase\n              .from('profiles')\n              .select('*')\n              .eq('id', data.session.user.id)\n              .single();\n            \n            if (profileError && profileError.message.includes('No rows found')) {\n              // Create a profile for the user\n              const { error: insertError } = await supabase\n                .from('profiles')\n                .insert([\n                  {\n                    id: data.session.user.id,\n                    username: data.session.user.user_metadata.username || `user${Date.now().toString().slice(-6)}`,\n                    email: data.session.user.email,\n                    role: 'user',\n                  }\n                ]);\n                \n              if (insertError) console.error('Error creating profile:', insertError);\n            }\n            \n            // Redirect to dashboard\n            navigate('/dashboard');\n          }\n        }\n        // For email link (OTP) flow\n        else if (queryParams.get('type') === 'recovery' || queryParams.get('type') === 'signup') {\n          // Get token from query params\n          const token = queryParams.get('token');\n          \n          if (!token) throw new Error('No token found in URL');\n          \n          // Handle password recovery flow\n          if (queryParams.get('type') === 'recovery') {\n            navigate('/reset-password', { state: { token } });\n          } \n          // Handle signup confirmation\n          else if (queryParams.get('type') === 'signup') {\n            // Confirm the signup if needed\n            const { error } = await supabase.auth.verifyOtp({\n              token_hash: token,\n              type: 'signup',\n            });\n            \n            if (error) throw error;\n            \n            // Redirect to login after successful confirmation\n            navigate('/login', { \n              state: { message: 'Email confirmed! You can now log in.' } \n            });\n          }\n        } else {\n          // Fallback - go to dashboard if logged in, otherwise to login\n          const { data } = await supabase.auth.getSession();\n          navigate(data.session ? '/dashboard' : '/login');\n        }\n      } catch (err: any) {\n        console.error('Auth callback error:', err);\n        setError(err.message || 'An error occurred during authentication');\n      }\n    };\n\n    handleAuthCallback();\n  }, [navigate]);\n\n  if (error) {\n    return (\n      <div className=\"auth-callback-container\">\n        <div className=\"auth-callback-error\">\n          <i className=\"icon-error\"></i>\n          <h2>Authentication Error</h2>\n          <p>{error}</p>\n          <button className=\"btn btn-primary\" onClick={() => navigate('/login')}>\n            Back to Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-callback-container\">\n      <div className=\"auth-callback-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Completing authentication...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthCallback;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
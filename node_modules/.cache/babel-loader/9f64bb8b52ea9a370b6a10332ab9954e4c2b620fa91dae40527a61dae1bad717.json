{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart_Pet_Feeder/src/pages/Profile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport '../styles/Profile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _userProfile$username, _userProfile$username2;\n  const [loading, setLoading] = useState(true);\n  const [userProfile, setUserProfile] = useState(null);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Edit profile form state\n  const [isEditing, setIsEditing] = useState(false);\n  const [fullName, setFullName] = useState('');\n  const [username, setUsername] = useState('');\n\n  // Avatar upload state\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  const [avatarFile, setAvatarFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploading, setUploading] = useState(false);\n\n  // Admin request state\n  const [showAdminRequest, setShowAdminRequest] = useState(false);\n  const [adminRequestReason, setAdminRequestReason] = useState('');\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n\n  // Fetch user profile\n  const fetchProfile = async () => {\n    try {\n      setLoading(true);\n\n      // Get current user\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Fetch profile data\n      const {\n        data,\n        error\n      } = await supabase.from('profiles').select('*').eq('id', user.id).single();\n      if (error) throw error;\n      if (data) {\n        setUserProfile(data);\n        setFullName(data.full_name || '');\n        setUsername(data.username || '');\n        setAvatarUrl(data.avatar_url || null);\n      }\n    } catch (err) {\n      console.error('Error fetching profile:', err);\n      setError('Failed to load profile. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update profile\n  const handleUpdateProfile = async e => {\n    e.preventDefault();\n    if (!userProfile) return;\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Validate username\n      if (!username.trim()) {\n        setError('Username cannot be empty');\n        setLoading(false);\n        return;\n      }\n\n      // Check if username already exists (excluding current user)\n      const {\n        data: usernameCheck,\n        error: usernameError\n      } = await supabase.from('profiles').select('id').eq('username', username).neq('id', userProfile.id);\n      if (usernameError) throw usernameError;\n      if (usernameCheck && usernameCheck.length > 0) {\n        setError('This username is already taken');\n        setLoading(false);\n        return;\n      }\n\n      // Update profile\n      const updates = {\n        username,\n        full_name: fullName,\n        updated_at: new Date().toISOString()\n      };\n      const {\n        error\n      } = await supabase.from('profiles').update(updates).eq('id', userProfile.id);\n      if (error) throw error;\n\n      // Upload avatar if changed\n      if (avatarFile) {\n        await uploadAvatar();\n      }\n      setSuccess('Profile updated successfully');\n\n      // Refresh profile data\n      await fetchProfile();\n      setIsEditing(false);\n    } catch (err) {\n      console.error('Error updating profile:', err);\n      setError(err.message || 'Failed to update profile');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle avatar selection\n  const handleAvatarChange = e => {\n    if (!e.target.files || e.target.files.length === 0) {\n      return;\n    }\n    const file = e.target.files[0];\n    if (file.size > 2 * 1024 * 1024) {\n      // 2MB max\n      setError('Image is too large. Please select an image under 2MB.');\n      return;\n    }\n\n    // Preview image\n    const reader = new FileReader();\n    reader.onload = e => {\n      var _e$target;\n      if ((_e$target = e.target) !== null && _e$target !== void 0 && _e$target.result) {\n        setAvatarUrl(e.target.result);\n      }\n    };\n    reader.readAsDataURL(file);\n    setAvatarFile(file);\n  };\n\n  // Upload avatar to storage\n  const uploadAvatar = async () => {\n    if (!avatarFile || !userProfile) return;\n    try {\n      setUploading(true);\n\n      // Generate a unique file name\n      const fileExt = avatarFile.name.split('.').pop();\n      const fileName = `${userProfile.id}-${Math.random().toString(36).substring(2)}.${fileExt}`;\n      const filePath = `avatars/${fileName}`;\n\n      // Upload file\n      const {\n        error: uploadError\n      } = await supabase.storage.from('user-avatars').upload(filePath, avatarFile, {\n        cacheControl: '3600',\n        upsert: true\n      });\n      if (uploadError) throw uploadError;\n\n      // Get public URL\n      const {\n        data\n      } = supabase.storage.from('user-avatars').getPublicUrl(filePath);\n\n      // Update profile with new avatar URL\n      const {\n        error: updateError\n      } = await supabase.from('profiles').update({\n        avatar_url: data.publicUrl\n      }).eq('id', userProfile.id);\n      if (updateError) throw updateError;\n      setAvatarUrl(data.publicUrl);\n    } catch (err) {\n      console.error('Error uploading avatar:', err);\n      setError('Failed to upload avatar. Please try again.');\n    } finally {\n      setUploading(false);\n      setAvatarFile(null);\n    }\n  };\n\n  // Send request for admin role\n  const handleAdminRequest = async e => {\n    e.preventDefault();\n    if (!userProfile) return;\n    try {\n      setLoading(true);\n      setError(null);\n      if (!adminRequestReason.trim()) {\n        setError('Please provide a reason for your request');\n        return;\n      }\n\n      // In a real app, this would send an email or create a support ticket\n      // Here we'll simulate it with a console log and a success message\n      console.log('Admin request submitted:', {\n        userId: userProfile.id,\n        username: userProfile.username,\n        email: userProfile.email,\n        reason: adminRequestReason\n      });\n      setSuccess('Admin role request submitted successfully. You will be contacted soon.');\n      setShowAdminRequest(false);\n      setAdminRequestReason('');\n    } catch (err) {\n      console.error('Error submitting admin request:', err);\n      setError(err.message || 'Failed to submit admin request');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date for display\n  const formatDate = dateString => {\n    if (!dateString) return 'Unknown';\n    return new Date(dateString).toLocaleDateString();\n  };\n  if (loading && !userProfile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading profile...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"error-close\",\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon-check-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"success-close\",\n        onClick: () => setSuccess(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-container\",\n            children: [avatarUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: avatarUrl,\n              alt: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.username) || 'User',\n              className: \"avatar-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-placeholder\",\n              children: (userProfile === null || userProfile === void 0 ? void 0 : (_userProfile$username = userProfile.username) === null || _userProfile$username === void 0 ? void 0 : (_userProfile$username2 = _userProfile$username[0]) === null || _userProfile$username2 === void 0 ? void 0 : _userProfile$username2.toUpperCase()) || 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"avatar-input\",\n                className: \"upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Change\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"avatar-input\",\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleAvatarChange,\n                className: \"upload-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), !isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"profile-name\",\n              children: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.full_name) || (userProfile === null || userProfile === void 0 ? void 0 : userProfile.username) || 'User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meta-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-calendar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), \"Joined \", formatDate(userProfile === null || userProfile === void 0 ? void 0 : userProfile.created_at)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meta-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), \"@\", userProfile === null || userProfile === void 0 ? void 0 : userProfile.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-edit-profile\",\n              onClick: () => setIsEditing(true),\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details\",\n          children: isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"edit-profile-form\",\n            onSubmit: handleUpdateProfile,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"username\",\n                type: \"text\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                maxLength: 20,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-hint\",\n                children: \"This will be your public @username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"full-name\",\n                children: \"Full Name (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"full-name\",\n                type: \"text\",\n                value: fullName,\n                onChange: e => setFullName(e.target.value),\n                maxLength: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"email\",\n                type: \"email\",\n                value: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.email) || '',\n                disabled: true,\n                className: \"readonly-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-hint\",\n                children: \"Email cannot be changed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline\",\n                onClick: () => {\n                  setIsEditing(false);\n                  setFullName((userProfile === null || userProfile === void 0 ? void 0 : userProfile.full_name) || '');\n                  setUsername((userProfile === null || userProfile === void 0 ? void 0 : userProfile.username) || '');\n                  setAvatarUrl((userProfile === null || userProfile === void 0 ? void 0 : userProfile.avatar_url) || null);\n                  setAvatarFile(null);\n                  setError(null);\n                },\n                disabled: loading,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                disabled: loading,\n                children: loading ? 'Saving...' : 'Save Changes'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Account Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-label\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-value\",\n                children: userProfile === null || userProfile === void 0 ? void 0 : userProfile.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-label\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-value\",\n                children: [\"@\", userProfile === null || userProfile === void 0 ? void 0 : userProfile.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), (userProfile === null || userProfile === void 0 ? void 0 : userProfile.full_name) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-label\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-value\",\n                children: userProfile.full_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-label\",\n                children: \"Account Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-value account-type\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `role-badge ${userProfile === null || userProfile === void 0 ? void 0 : userProfile.role}`,\n                  children: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.role) === 'admin' ? 'Administrator' : 'Standard User'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this), (userProfile === null || userProfile === void 0 ? void 0 : userProfile.role) !== 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-text\",\n                  onClick: () => setShowAdminRequest(true),\n                  children: \"Request Admin Access\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-label\",\n                children: \"Joined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-value\",\n                children: formatDate(userProfile === null || userProfile === void 0 ? void 0 : userProfile.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Account Security\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"security-links\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/settings\",\n                className: \"security-link\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-lock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"link-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"link-title\",\n                    children: \"Security Settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"link-description\",\n                    children: \"Change password, enable 2FA, manage sessions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-arrow-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/settings#notifications\",\n                className: \"security-link\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-bell\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"link-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"link-title\",\n                    children: \"Notification Preferences\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"link-description\",\n                    children: \"Manage your notification settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-arrow-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), showAdminRequest && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Request Admin Access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowAdminRequest(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAdminRequest,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"admin-request-info\",\n              children: \"Admin access provides additional privileges to manage users, system settings, and access to advanced features. Please explain why you need admin access:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"admin-reason\",\n                children: \"Reason for Request\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"admin-reason\",\n                value: adminRequestReason,\n                onChange: e => setAdminRequestReason(e.target.value),\n                rows: 5,\n                placeholder: \"Please explain why you need admin access...\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-outline\",\n              onClick: () => setShowAdminRequest(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: loading,\n              children: \"Submit Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"4zsl+2JvNw2YqLnMdkgDeGHvOcY=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","_userProfile$username","_userProfile$username2","loading","setLoading","userProfile","setUserProfile","error","setError","success","setSuccess","isEditing","setIsEditing","fullName","setFullName","username","setUsername","avatarUrl","setAvatarUrl","avatarFile","setAvatarFile","uploadProgress","setUploadProgress","uploading","setUploading","showAdminRequest","setShowAdminRequest","adminRequestReason","setAdminRequestReason","fetchProfile","data","user","auth","getUser","Error","from","select","eq","id","single","full_name","avatar_url","err","console","handleUpdateProfile","e","preventDefault","trim","usernameCheck","usernameError","neq","length","updates","updated_at","Date","toISOString","update","uploadAvatar","message","handleAvatarChange","target","files","file","size","reader","FileReader","onload","_e$target","result","readAsDataURL","fileExt","name","split","pop","fileName","Math","random","toString","substring","filePath","uploadError","storage","upload","cacheControl","upsert","getPublicUrl","updateError","publicUrl","handleAdminRequest","log","userId","email","reason","formatDate","dateString","toLocaleDateString","className","children","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","toUpperCase","htmlFor","type","accept","onChange","created_at","onSubmit","value","maxLength","required","disabled","role","href","rows","placeholder","_c","$RefreshReg$"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/Profile.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport { UserProfile } from '../types';\nimport '../styles/Profile.css';\n\nconst Profile: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  // Edit profile form state\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [fullName, setFullName] = useState<string>('');\n  const [username, setUsername] = useState<string>('');\n  \n  // Avatar upload state\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(null);\n  const [avatarFile, setAvatarFile] = useState<File | null>(null);\n  const [uploadProgress, setUploadProgress] = useState<number>(0);\n  const [uploading, setUploading] = useState<boolean>(false);\n  \n  // Admin request state\n  const [showAdminRequest, setShowAdminRequest] = useState<boolean>(false);\n  const [adminRequestReason, setAdminRequestReason] = useState<string>('');\n\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n\n  // Fetch user profile\n  const fetchProfile = async () => {\n    try {\n      setLoading(true);\n      \n      // Get current user\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      // Fetch profile data\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n        \n      if (error) throw error;\n      \n      if (data) {\n        setUserProfile(data);\n        setFullName(data.full_name || '');\n        setUsername(data.username || '');\n        setAvatarUrl(data.avatar_url || null);\n      }\n    } catch (err: any) {\n      console.error('Error fetching profile:', err);\n      setError('Failed to load profile. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update profile\n  const handleUpdateProfile = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!userProfile) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Validate username\n      if (!username.trim()) {\n        setError('Username cannot be empty');\n        setLoading(false);\n        return;\n      }\n      \n      // Check if username already exists (excluding current user)\n      const { data: usernameCheck, error: usernameError } = await supabase\n        .from('profiles')\n        .select('id')\n        .eq('username', username)\n        .neq('id', userProfile.id);\n        \n      if (usernameError) throw usernameError;\n      \n      if (usernameCheck && usernameCheck.length > 0) {\n        setError('This username is already taken');\n        setLoading(false);\n        return;\n      }\n      \n      // Update profile\n      const updates = {\n        username,\n        full_name: fullName,\n        updated_at: new Date().toISOString()\n      };\n      \n      const { error } = await supabase\n        .from('profiles')\n        .update(updates)\n        .eq('id', userProfile.id);\n        \n      if (error) throw error;\n      \n      // Upload avatar if changed\n      if (avatarFile) {\n        await uploadAvatar();\n      }\n      \n      setSuccess('Profile updated successfully');\n      \n      // Refresh profile data\n      await fetchProfile();\n      setIsEditing(false);\n    } catch (err: any) {\n      console.error('Error updating profile:', err);\n      setError(err.message || 'Failed to update profile');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle avatar selection\n  const handleAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files || e.target.files.length === 0) {\n      return;\n    }\n    \n    const file = e.target.files[0];\n    if (file.size > 2 * 1024 * 1024) { // 2MB max\n      setError('Image is too large. Please select an image under 2MB.');\n      return;\n    }\n    \n    // Preview image\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      if (e.target?.result) {\n        setAvatarUrl(e.target.result as string);\n      }\n    };\n    reader.readAsDataURL(file);\n    \n    setAvatarFile(file);\n  };\n\n  // Upload avatar to storage\n  const uploadAvatar = async () => {\n    if (!avatarFile || !userProfile) return;\n    \n    try {\n      setUploading(true);\n      \n      // Generate a unique file name\n      const fileExt = avatarFile.name.split('.').pop();\n      const fileName = `${userProfile.id}-${Math.random().toString(36).substring(2)}.${fileExt}`;\n      const filePath = `avatars/${fileName}`;\n      \n      // Upload file\n      const { error: uploadError } = await supabase.storage\n        .from('user-avatars')\n        .upload(filePath, avatarFile, {\n          cacheControl: '3600',\n          upsert: true\n        });\n        \n      if (uploadError) throw uploadError;\n      \n      // Get public URL\n      const { data } = supabase.storage\n        .from('user-avatars')\n        .getPublicUrl(filePath);\n        \n      // Update profile with new avatar URL\n      const { error: updateError } = await supabase\n        .from('profiles')\n        .update({\n          avatar_url: data.publicUrl\n        })\n        .eq('id', userProfile.id);\n        \n      if (updateError) throw updateError;\n      \n      setAvatarUrl(data.publicUrl);\n    } catch (err: any) {\n      console.error('Error uploading avatar:', err);\n      setError('Failed to upload avatar. Please try again.');\n    } finally {\n      setUploading(false);\n      setAvatarFile(null);\n    }\n  };\n\n  // Send request for admin role\n  const handleAdminRequest = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!userProfile) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      if (!adminRequestReason.trim()) {\n        setError('Please provide a reason for your request');\n        return;\n      }\n      \n      // In a real app, this would send an email or create a support ticket\n      // Here we'll simulate it with a console log and a success message\n      console.log('Admin request submitted:', {\n        userId: userProfile.id,\n        username: userProfile.username,\n        email: userProfile.email,\n        reason: adminRequestReason\n      });\n      \n      setSuccess('Admin role request submitted successfully. You will be contacted soon.');\n      setShowAdminRequest(false);\n      setAdminRequestReason('');\n    } catch (err: any) {\n      console.error('Error submitting admin request:', err);\n      setError(err.message || 'Failed to submit admin request');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date for display\n  const formatDate = (dateString: string | undefined) => {\n    if (!dateString) return 'Unknown';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  if (loading && !userProfile) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading profile...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <h1>My Profile</h1>\n      </div>\n      \n      {error && (\n        <div className=\"error-alert\">\n          <i className=\"icon-warning\"></i>\n          <p>{error}</p>\n          <button \n            className=\"error-close\" \n            onClick={() => setError(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"success-alert\">\n          <i className=\"icon-check-circle\"></i>\n          <p>{success}</p>\n          <button \n            className=\"success-close\" \n            onClick={() => setSuccess(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      <div className=\"profile-content\">\n        <div className=\"profile-card\">\n          <div className=\"profile-sidebar\">\n            <div className=\"avatar-container\">\n              {avatarUrl ? (\n                <img \n                  src={avatarUrl} \n                  alt={userProfile?.username || 'User'}\n                  className=\"avatar-image\" \n                />\n              ) : (\n                <div className=\"avatar-placeholder\">\n                  {userProfile?.username?.[0]?.toUpperCase() || 'U'}\n                </div>\n              )}\n              \n              {isEditing && (\n                <div className=\"avatar-upload\">\n                  <label htmlFor=\"avatar-input\" className=\"upload-label\">\n                    <i className=\"icon-camera\"></i>\n                    <span>Change</span>\n                  </label>\n                  <input \n                    id=\"avatar-input\" \n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleAvatarChange}\n                    className=\"upload-input\" \n                  />\n                </div>\n              )}\n            </div>\n            \n            {!isEditing && (\n              <>\n                <h2 className=\"profile-name\">\n                  {userProfile?.full_name || userProfile?.username || 'User'}\n                </h2>\n                \n                <div className=\"profile-meta\">\n                  <div className=\"meta-item\">\n                    <i className=\"icon-calendar\"></i>\n                    Joined {formatDate(userProfile?.created_at)}\n                  </div>\n                  \n                  <div className=\"meta-item\">\n                    <i className=\"icon-user\"></i>\n                    @{userProfile?.username}\n                  </div>\n                </div>\n                \n                <button \n                  className=\"btn btn-primary btn-edit-profile\"\n                  onClick={() => setIsEditing(true)}\n                >\n                  Edit Profile\n                </button>\n              </>\n            )}\n          </div>\n          \n          <div className=\"profile-details\">\n            {isEditing ? (\n              <form className=\"edit-profile-form\" onSubmit={handleUpdateProfile}>\n                <h2>Edit Profile</h2>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    id=\"username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    maxLength={20}\n                    required\n                  />\n                  <small className=\"form-hint\">This will be your public @username</small>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"full-name\">Full Name (Optional)</label>\n                  <input\n                    id=\"full-name\"\n                    type=\"text\"\n                    value={fullName}\n                    onChange={(e) => setFullName(e.target.value)}\n                    maxLength={50}\n                  />\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    id=\"email\"\n                    type=\"email\"\n                    value={userProfile?.email || ''}\n                    disabled\n                    className=\"readonly-input\"\n                  />\n                  <small className=\"form-hint\">Email cannot be changed</small>\n                </div>\n                \n                <div className=\"form-actions\">\n                  <button \n                    type=\"button\"\n                    className=\"btn btn-outline\" \n                    onClick={() => {\n                      setIsEditing(false);\n                      setFullName(userProfile?.full_name || '');\n                      setUsername(userProfile?.username || '');\n                      setAvatarUrl(userProfile?.avatar_url || null);\n                      setAvatarFile(null);\n                      setError(null);\n                    }}\n                    disabled={loading}\n                  >\n                    Cancel\n                  </button>\n                  <button \n                    type=\"submit\"\n                    className=\"btn btn-primary\" \n                    disabled={loading}\n                  >\n                    {loading ? 'Saving...' : 'Save Changes'}\n                  </button>\n                </div>\n              </form>\n            ) : (\n              <>\n                <h2>Account Information</h2>\n                \n                <div className=\"info-group\">\n                  <div className=\"info-label\">Email</div>\n                  <div className=\"info-value\">{userProfile?.email}</div>\n                </div>\n                \n                <div className=\"info-group\">\n                  <div className=\"info-label\">Username</div>\n                  <div className=\"info-value\">@{userProfile?.username}</div>\n                </div>\n                \n                {userProfile?.full_name && (\n                  <div className=\"info-group\">\n                    <div className=\"info-label\">Full Name</div>\n                    <div className=\"info-value\">{userProfile.full_name}</div>\n                  </div>\n                )}\n                \n                <div className=\"info-group\">\n                  <div className=\"info-label\">Account Type</div>\n                  <div className=\"info-value account-type\">\n                    <span className={`role-badge ${userProfile?.role}`}>\n                      {userProfile?.role === 'admin' ? 'Administrator' : 'Standard User'}\n                    </span>\n                    \n                    {userProfile?.role !== 'admin' && (\n                      <button \n                        className=\"btn btn-text\"\n                        onClick={() => setShowAdminRequest(true)}\n                      >\n                        Request Admin Access\n                      </button>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"info-group\">\n                  <div className=\"info-label\">Joined</div>\n                  <div className=\"info-value\">{formatDate(userProfile?.created_at)}</div>\n                </div>\n                \n                <h3>Account Security</h3>\n                <div className=\"security-links\">\n                  <a href=\"/settings\" className=\"security-link\">\n                    <i className=\"icon-lock\"></i>\n                    <div className=\"link-content\">\n                      <span className=\"link-title\">Security Settings</span>\n                      <span className=\"link-description\">Change password, enable 2FA, manage sessions</span>\n                    </div>\n                    <i className=\"icon-arrow-right\"></i>\n                  </a>\n                  \n                  <a href=\"/settings#notifications\" className=\"security-link\">\n                    <i className=\"icon-bell\"></i>\n                    <div className=\"link-content\">\n                      <span className=\"link-title\">Notification Preferences</span>\n                      <span className=\"link-description\">Manage your notification settings</span>\n                    </div>\n                    <i className=\"icon-arrow-right\"></i>\n                  </a>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* Admin Request Modal */}\n      {showAdminRequest && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Request Admin Access</h2>\n              <button \n                className=\"modal-close\" \n                onClick={() => setShowAdminRequest(false)}\n              >\n                &times;\n              </button>\n            </div>\n            \n            <form onSubmit={handleAdminRequest}>\n              <div className=\"modal-body\">\n                <p className=\"admin-request-info\">\n                  Admin access provides additional privileges to manage users, \n                  system settings, and access to advanced features. Please explain \n                  why you need admin access:\n                </p>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"admin-reason\">Reason for Request</label>\n                  <textarea\n                    id=\"admin-reason\"\n                    value={adminRequestReason}\n                    onChange={(e) => setAdminRequestReason(e.target.value)}\n                    rows={5}\n                    placeholder=\"Please explain why you need admin access...\"\n                    required\n                  ></textarea>\n                </div>\n              </div>\n              \n              <div className=\"modal-footer\">\n                <button \n                  type=\"button\" \n                  className=\"btn btn-outline\" \n                  onClick={() => setShowAdminRequest(false)}\n                >\n                  Cancel\n                </button>\n                <button \n                  type=\"submit\" \n                  className=\"btn btn-primary\"\n                  disabled={loading}\n                >\n                  Submit Request\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
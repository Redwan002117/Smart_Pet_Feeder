{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart_Pet_Feeder/src/pages/History.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport '../styles/History.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = () => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  useEffect(() => {\n    const fetchHistory = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('feeding_history').select('*').order('time', {\n        ascending: false\n      });\n      if (error) {\n        console.error('Error fetching history:', error);\n      } else {\n        setHistory(data || []);\n      }\n    };\n    fetchHistory();\n  }, []);\n  const filteredHistory = history.filter(item => item.device_id.toLowerCase().includes(searchTerm.toLowerCase()));\n  const paginatedHistory = filteredHistory.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const totalPages = Math.ceil(filteredHistory.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feeding History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by device ID\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"history-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Device ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount (g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paginatedHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.device_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(item.time).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }, (_, i) => i + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page),\n        className: page === currentPage ? 'active' : '',\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"nAIyB4VjbPz38STsXXP9nPPHMME=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","History","_s","history","setHistory","searchTerm","setSearchTerm","currentPage","setCurrentPage","itemsPerPage","fetchHistory","data","error","from","select","order","ascending","console","filteredHistory","filter","item","device_id","toLowerCase","includes","paginatedHistory","slice","totalPages","Math","ceil","length","handlePageChange","page","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","index","Date","time","toLocaleString","amount","Array","_","i","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/History.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport '../styles/History.css';\n\nconst History: React.FC = () => {\n  const [history, setHistory] = useState<any[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchHistory = async () => {\n      const { data, error } = await supabase\n        .from('feeding_history')\n        .select('*')\n        .order('time', { ascending: false });\n\n      if (error) {\n        console.error('Error fetching history:', error);\n      } else {\n        setHistory(data || []);\n      }\n    };\n\n    fetchHistory();\n  }, []);\n\n  const filteredHistory = history.filter(item =>\n    item.device_id.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const paginatedHistory = filteredHistory.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const totalPages = Math.ceil(filteredHistory.length / itemsPerPage);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"history-container\">\n      <h1>Feeding History</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search by device ID\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        className=\"search-bar\"\n      />\n\n      <table className=\"history-table\">\n        <thead>\n          <tr>\n            <th>Device ID</th>\n            <th>Time</th>\n            <th>Amount (g)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {paginatedHistory.map((item, index) => (\n            <tr key={index}>\n              <td>{item.device_id}</td>\n              <td>{new Date(item.time).toLocaleString()}</td>\n              <td>{item.amount}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n          <button\n            key={page}\n            onClick={() => handlePageChange(page)}\n            className={page === currentPage ? 'active' : ''}\n          >\n            {page}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default History;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"version":3,"file":"static/js/588.4dcfb992.chunk.js","mappings":"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","sources":["pages/Schedule.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport { Schedule } from '../types';\n\nconst SchedulePage: React.FC = () => {\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n  const [newSchedule, setNewSchedule] = useState({ time: '', amount: 0, device_id: '' });\n  const [showForm, setShowForm] = useState(false);\n\n  useEffect(() => {\n    const fetchSchedules = async () => {\n      const { data, error } = await supabase\n        .from('schedules')\n        .select('*')\n        .eq('user_id', supabase.auth.user()?.id);\n\n      if (error) {\n        console.error('Error fetching schedules:', error);\n      } else {\n        setSchedules(data);\n      }\n    };\n\n    fetchSchedules();\n  }, []);\n\n  const handleAddSchedule = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const { data, error } = await supabase\n      .from('schedules')\n      .insert([{ ...newSchedule, user_id: supabase.auth.user()?.id }]);\n\n    if (error) {\n      console.error('Error adding schedule:', error);\n    } else {\n      setSchedules([...schedules, data[0]]);\n      setShowForm(false);\n      setNewSchedule({ time: '', amount: 0, device_id: '' });\n    }\n  };\n\n  return (\n    <div className=\"schedule-page\">\n      <h1>Schedules</h1>\n      <button className=\"btn btn-primary\" onClick={() => setShowForm(true)}>\n        Add Schedule\n      </button>\n      <ul className=\"schedule-list\">\n        {schedules.map(schedule => (\n          <li key={schedule.schedule_id} className=\"schedule-item\">\n            <div className=\"schedule-info\">\n              <p>Time: {schedule.time}</p>\n              <p>Amount: {schedule.amount}</p>\n              <p>Device ID: {schedule.device_id}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      {showForm && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Add Schedule</h2>\n            </div>\n            <form onSubmit={handleAddSchedule}>\n              <div className=\"modal-body\">\n                <label>\n                  Time:\n                  <input\n                    type=\"datetime-local\"\n                    value={newSchedule.time}\n                    onChange={e => setNewSchedule({ ...newSchedule, time: e.target.value })}\n                    required\n                  />\n                </label>\n                <label>\n                  Amount:\n                  <input\n                    type=\"number\"\n                    value={newSchedule.amount}\n                    onChange={e => setNewSchedule({ ...newSchedule, amount: parseInt(e.target.value) })}\n                    required\n                  />\n                </label>\n                <label>\n                  Device ID:\n                  <input\n                    type=\"text\"\n                    value={newSchedule.device_id}\n                    onChange={e => setNewSchedule({ ...newSchedule, device_id: e.target.value })}\n                    required\n                  />\n                </label>\n              </div>\n              <div className=\"modal-footer\">\n                <button className=\"btn btn-outline\" onClick={() => setShowForm(false)}>\n                  Cancel\n                </button>\n                <button className=\"btn btn-primary\" type=\"submit\">\n                  Add Schedule\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SchedulePage;"],"names":["SchedulePage","schedules","setSchedules","useState","newSchedule","setNewSchedule","time","amount","device_id","showForm","setShowForm","useEffect","async","_supabase$auth$user","data","error","supabase","from","select","eq","auth","user","id","console","fetchSchedules","_jsxs","className","children","_jsx","onClick","map","schedule","schedule_id","onSubmit","_supabase$auth$user2","e","preventDefault","insert","user_id","type","value","onChange","target","required","parseInt"],"sourceRoot":""}
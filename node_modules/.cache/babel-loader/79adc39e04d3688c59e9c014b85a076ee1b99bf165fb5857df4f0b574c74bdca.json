{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'../supabaseClient.ts';import'../styles/Pets.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Pets=()=>{const[pets,setPets]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[showAddModal,setShowAddModal]=useState(false);const[editingPet,setEditingPet]=useState(null);const[deleteConfirm,setDeleteConfirm]=useState(null);// Form state\nconst[petName,setPetName]=useState('');const[petWeight,setPetWeight]=useState(0);const[petAge,setPetAge]=useState(0);const[petBreed,setPetBreed]=useState('');const[petActivityLevel,setPetActivityLevel]=useState('medium');const[petDietary,setPetDietary]=useState('');useEffect(()=>{fetchPets();// Set up realtime subscription\nconst subscription=supabase.channel('pets-changes').on('postgres_changes',{event:'*',schema:'public',table:'pets'},handlePetUpdate).subscribe();return()=>{subscription.unsubscribe();};},[]);// Fetch user's pets\nconst fetchPets=async()=>{try{setLoading(true);// Get current user\nconst{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');// Fetch pets\nconst{data,error}=await supabase.from('pets').select('*').eq('user_id',user.id).order('name');if(error)throw error;setPets(data||[]);}catch(err){console.error('Error fetching pets:',err);setError(err.message||'Failed to load pets');}finally{setLoading(false);}};// Handle realtime pet updates\nconst handlePetUpdate=payload=>{const{eventType,new:newPet,old:oldPet}=payload;if(eventType==='INSERT'){setPets(prev=>[...prev,newPet].sort((a,b)=>a.name.localeCompare(b.name)));}else if(eventType==='UPDATE'){setPets(prev=>prev.map(pet=>pet.pet_id===newPet.pet_id?newPet:pet));}else if(eventType==='DELETE'){setPets(prev=>prev.filter(pet=>pet.pet_id!==oldPet.pet_id));}};// Reset form fields\nconst resetForm=()=>{setPetName('');setPetWeight(0);setPetAge(0);setPetBreed('');setPetActivityLevel('medium');setPetDietary('');};// Open edit modal with pet data\nconst handleEditClick=pet=>{setEditingPet(pet);setPetName(pet.name);setPetWeight(pet.health_data.weight);setPetAge(pet.health_data.age);setPetBreed(pet.health_data.breed||'');setPetActivityLevel(pet.health_data.activity_level||'medium');setPetDietary((pet.health_data.dietary_restrictions||[]).join(', '));setShowAddModal(true);};// Submit the form (create or update pet)\nconst handleSubmit=async e=>{e.preventDefault();try{// Get current user\nconst{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');// Validate form\nif(!petName.trim()){setError('Pet name is required');return;}// Parse dietary restrictions into array\nconst dietaryRestrictions=petDietary.split(',').map(item=>item.trim()).filter(item=>item.length>0);// Create health data object\nconst healthData={weight:petWeight,age:petAge,breed:petBreed.trim(),activity_level:petActivityLevel,dietary_restrictions:dietaryRestrictions};if(editingPet){// Update existing pet\nconst{error}=await supabase.from('pets').update({name:petName.trim(),health_data:healthData}).eq('pet_id',editingPet.pet_id);if(error)throw error;}else{// Create new pet\nconst{error}=await supabase.from('pets').insert([{user_id:user.id,name:petName.trim(),health_data:healthData}]);if(error)throw error;}// Close modal and reset form\nsetShowAddModal(false);resetForm();setEditingPet(null);}catch(err){console.error('Error saving pet:',err);setError(err.message||'Failed to save pet');}};// Delete a pet\nconst handleDelete=async petId=>{try{const{error}=await supabase.from('pets').delete().eq('pet_id',petId);if(error)throw error;setDeleteConfirm(null);}catch(err){console.error('Error deleting pet:',err);setError(`Failed to delete pet: ${err.message}`);}};// Calculate recommended food amount based on pet data\nconst calculateFoodRecommendation=pet=>{// This is a simplified calculation - in a real app, this would be more sophisticated\nconst{weight,age,activity_level}=pet.health_data;// Base amount in grams\nlet baseAmount=weight*20;// Adjust for age\nif(age<1){baseAmount*=1.2;// Puppies/kittens need more food\n}else if(age>7){baseAmount*=0.8;// Senior pets often need less food\n}// Adjust for activity level\nswitch(activity_level){case'low':baseAmount*=0.8;break;case'high':baseAmount*=1.2;break;default:// Medium is baseline\nbreak;}// Round to nearest 5g\nconst roundedAmount=Math.round(baseAmount/5)*5;// Daily recommendation\nreturn`${roundedAmount}g per day`;};// Calculate how to divide food throughout the day\nconst getFeedingSchedule=pet=>{const{age}=pet.health_data;if(age<1){return\"3-4 times per day\";}else if(age<7){return\"2 times per day\";}else{return\"2-3 smaller meals per day\";}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading pet profiles...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pets-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pets-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Pets\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:()=>{resetForm();setEditingPet(null);setShowAddModal(true);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-plus\"}),\" Add Pet\"]})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-alert\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-warning\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"error-close\",onClick:()=>setError(null),children:\"\\xD7\"})]}),pets.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-pets\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"no-pets-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-paw\"})}),/*#__PURE__*/_jsx(\"h2\",{children:\"No pets added yet\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add your pets to track their feeding schedules and health data.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>{resetForm();setShowAddModal(true);},children:\"Add Your First Pet\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"pets-grid\",children:pets.map(pet=>/*#__PURE__*/_jsxs(\"div\",{className:\"pet-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pet-card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:pet.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"pet-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-icon\",onClick:()=>handleEditClick(pet),title:\"Edit Pet\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-edit\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-icon btn-danger\",onClick:()=>setDeleteConfirm(pet.pet_id),title:\"Delete Pet\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-trash\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pet-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pet-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Weight:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"detail-value\",children:[pet.health_data.weight,\" kg\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pet-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Age:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"detail-value\",children:[pet.health_data.age,\" \",pet.health_data.age===1?'year':'years']})]}),pet.health_data.breed&&/*#__PURE__*/_jsxs(\"div\",{className:\"pet-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Breed:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value\",children:pet.health_data.breed})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pet-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Activity Level:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value pet-activity\",children:pet.health_data.activity_level||'Medium'})]}),pet.health_data.dietary_restrictions&&pet.health_data.dietary_restrictions.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"pet-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Dietary Restrictions:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dietary-tags\",children:pet.health_data.dietary_restrictions.map((item,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"dietary-tag\",children:item},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pet-recommendations\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Feeding Recommendations\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-bowl\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"recommendation-label\",children:\"Daily Amount\"}),/*#__PURE__*/_jsx(\"span\",{className:\"recommendation-value\",children:calculateFoodRecommendation(pet)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-clock\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"recommendation-label\",children:\"Schedule\"}),/*#__PURE__*/_jsx(\"span\",{className:\"recommendation-value\",children:getFeedingSchedule(pet)})]})]})]})]},pet.pet_id))}),showAddModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingPet?`Edit ${editingPet.name}`:'Add New Pet'}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowAddModal(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pet-name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"pet-name\",type:\"text\",value:petName,onChange:e=>setPetName(e.target.value),placeholder:\"Pet name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pet-weight\",children:\"Weight (kg)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"pet-weight\",type:\"number\",min:\"0.1\",step:\"0.1\",value:petWeight,onChange:e=>setPetWeight(parseFloat(e.target.value)||0),placeholder:\"Weight\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pet-age\",children:\"Age (years)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"pet-age\",type:\"number\",min:\"0.1\",step:\"0.1\",value:petAge,onChange:e=>setPetAge(parseFloat(e.target.value)||0),placeholder:\"Age\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pet-breed\",children:\"Breed (optional)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"pet-breed\",type:\"text\",value:petBreed,onChange:e=>setPetBreed(e.target.value),placeholder:\"Breed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pet-activity\",children:\"Activity Level\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"pet-activity\",value:petActivityLevel,onChange:e=>setPetActivityLevel(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"low\",children:\"Low\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"high\",children:\"High\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pet-dietary\",children:\"Dietary Restrictions (comma-separated, optional)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"pet-dietary\",type:\"text\",value:petDietary,onChange:e=>setPetDietary(e.target.value),placeholder:\"e.g., grain-free, low-fat\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-note\",children:\"Separate multiple restrictions with commas\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline\",onClick:()=>setShowAddModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:editingPet?'Save Changes':'Add Pet'})]})]})]})}),deleteConfirm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Delete Pet\"}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setDeleteConfirm(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsx(\"p\",{className:\"confirm-message\",children:\"Are you sure you want to delete this pet? This action cannot be undone.\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline\",onClick:()=>setDeleteConfirm(null),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>handleDelete(deleteConfirm),children:\"Delete Pet\"})]})]})})]});};export default Pets;","map":{"version":3,"names":["React","useState","useEffect","supabase","jsx","_jsx","jsxs","_jsxs","Pets","pets","setPets","loading","setLoading","error","setError","showAddModal","setShowAddModal","editingPet","setEditingPet","deleteConfirm","setDeleteConfirm","petName","setPetName","petWeight","setPetWeight","petAge","setPetAge","petBreed","setPetBreed","petActivityLevel","setPetActivityLevel","petDietary","setPetDietary","fetchPets","subscription","channel","on","event","schema","table","handlePetUpdate","subscribe","unsubscribe","data","user","auth","getUser","Error","from","select","eq","id","order","err","console","message","payload","eventType","new","newPet","old","oldPet","prev","sort","a","b","name","localeCompare","map","pet","pet_id","filter","resetForm","handleEditClick","health_data","weight","age","breed","activity_level","dietary_restrictions","join","handleSubmit","e","preventDefault","trim","dietaryRestrictions","split","item","length","healthData","update","insert","user_id","handleDelete","petId","delete","calculateFoodRecommendation","baseAmount","roundedAmount","Math","round","getFeedingSchedule","className","children","onClick","title","index","onSubmit","htmlFor","type","value","onChange","target","placeholder","required","min","step","parseFloat"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/Pets.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport { Pet } from '../types';\nimport '../styles/Pets.css';\n\nconst Pets: React.FC = () => {\n  const [pets, setPets] = useState<Pet[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showAddModal, setShowAddModal] = useState<boolean>(false);\n  const [editingPet, setEditingPet] = useState<Pet | null>(null);\n  const [deleteConfirm, setDeleteConfirm] = useState<string | null>(null);\n  \n  // Form state\n  const [petName, setPetName] = useState<string>('');\n  const [petWeight, setPetWeight] = useState<number>(0);\n  const [petAge, setPetAge] = useState<number>(0);\n  const [petBreed, setPetBreed] = useState<string>('');\n  const [petActivityLevel, setPetActivityLevel] = useState<'low' | 'medium' | 'high'>('medium');\n  const [petDietary, setPetDietary] = useState<string>('');\n\n  useEffect(() => {\n    fetchPets();\n    \n    // Set up realtime subscription\n    const subscription = supabase\n      .channel('pets-changes')\n      .on('postgres_changes', \n        { event: '*', schema: 'public', table: 'pets' },\n        handlePetUpdate\n      )\n      .subscribe();\n      \n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Fetch user's pets\n  const fetchPets = async () => {\n    try {\n      setLoading(true);\n      \n      // Get current user\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      // Fetch pets\n      const { data, error } = await supabase\n        .from('pets')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('name');\n        \n      if (error) throw error;\n      \n      setPets(data || []);\n    } catch (err: any) {\n      console.error('Error fetching pets:', err);\n      setError(err.message || 'Failed to load pets');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle realtime pet updates\n  const handlePetUpdate = (payload: any) => {\n    const { eventType, new: newPet, old: oldPet } = payload;\n    \n    if (eventType === 'INSERT') {\n      setPets(prev => [...prev, newPet].sort((a, b) => a.name.localeCompare(b.name)));\n    } else if (eventType === 'UPDATE') {\n      setPets(prev => \n        prev.map(pet => \n          pet.pet_id === newPet.pet_id ? newPet : pet\n        )\n      );\n    } else if (eventType === 'DELETE') {\n      setPets(prev => \n        prev.filter(pet => pet.pet_id !== oldPet.pet_id)\n      );\n    }\n  };\n\n  // Reset form fields\n  const resetForm = () => {\n    setPetName('');\n    setPetWeight(0);\n    setPetAge(0);\n    setPetBreed('');\n    setPetActivityLevel('medium');\n    setPetDietary('');\n  };\n\n  // Open edit modal with pet data\n  const handleEditClick = (pet: Pet) => {\n    setEditingPet(pet);\n    setPetName(pet.name);\n    setPetWeight(pet.health_data.weight);\n    setPetAge(pet.health_data.age);\n    setPetBreed(pet.health_data.breed || '');\n    setPetActivityLevel(pet.health_data.activity_level || 'medium');\n    setPetDietary((pet.health_data.dietary_restrictions || []).join(', '));\n    setShowAddModal(true);\n  };\n\n  // Submit the form (create or update pet)\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      // Get current user\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      // Validate form\n      if (!petName.trim()) {\n        setError('Pet name is required');\n        return;\n      }\n      \n      // Parse dietary restrictions into array\n      const dietaryRestrictions = petDietary\n        .split(',')\n        .map(item => item.trim())\n        .filter(item => item.length > 0);\n      \n      // Create health data object\n      const healthData = {\n        weight: petWeight,\n        age: petAge,\n        breed: petBreed.trim(),\n        activity_level: petActivityLevel,\n        dietary_restrictions: dietaryRestrictions\n      };\n      \n      if (editingPet) {\n        // Update existing pet\n        const { error } = await supabase\n          .from('pets')\n          .update({\n            name: petName.trim(),\n            health_data: healthData\n          })\n          .eq('pet_id', editingPet.pet_id);\n          \n        if (error) throw error;\n      } else {\n        // Create new pet\n        const { error } = await supabase\n          .from('pets')\n          .insert([{\n            user_id: user.id,\n            name: petName.trim(),\n            health_data: healthData\n          }]);\n          \n        if (error) throw error;\n      }\n      \n      // Close modal and reset form\n      setShowAddModal(false);\n      resetForm();\n      setEditingPet(null);\n      \n    } catch (err: any) {\n      console.error('Error saving pet:', err);\n      setError(err.message || 'Failed to save pet');\n    }\n  };\n\n  // Delete a pet\n  const handleDelete = async (petId: string) => {\n    try {\n      const { error } = await supabase\n        .from('pets')\n        .delete()\n        .eq('pet_id', petId);\n        \n      if (error) throw error;\n      \n      setDeleteConfirm(null);\n    } catch (err: any) {\n      console.error('Error deleting pet:', err);\n      setError(`Failed to delete pet: ${err.message}`);\n    }\n  };\n\n  // Calculate recommended food amount based on pet data\n  const calculateFoodRecommendation = (pet: Pet): string => {\n    // This is a simplified calculation - in a real app, this would be more sophisticated\n    const { weight, age, activity_level } = pet.health_data;\n    \n    // Base amount in grams\n    let baseAmount = weight * 20;\n    \n    // Adjust for age\n    if (age < 1) {\n      baseAmount *= 1.2; // Puppies/kittens need more food\n    } else if (age > 7) {\n      baseAmount *= 0.8; // Senior pets often need less food\n    }\n    \n    // Adjust for activity level\n    switch (activity_level) {\n      case 'low':\n        baseAmount *= 0.8;\n        break;\n      case 'high':\n        baseAmount *= 1.2;\n        break;\n      default:\n        // Medium is baseline\n        break;\n    }\n    \n    // Round to nearest 5g\n    const roundedAmount = Math.round(baseAmount / 5) * 5;\n    \n    // Daily recommendation\n    return `${roundedAmount}g per day`;\n  };\n\n  // Calculate how to divide food throughout the day\n  const getFeedingSchedule = (pet: Pet): string => {\n    const { age } = pet.health_data;\n    \n    if (age < 1) {\n      return \"3-4 times per day\";\n    } else if (age < 7) {\n      return \"2 times per day\";\n    } else {\n      return \"2-3 smaller meals per day\";\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading pet profiles...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pets-container\">\n      <div className=\"pets-header\">\n        <h1>My Pets</h1>\n        <button \n          className=\"btn btn-primary\" \n          onClick={() => {\n            resetForm();\n            setEditingPet(null);\n            setShowAddModal(true);\n          }}\n        >\n          <i className=\"icon-plus\"></i> Add Pet\n        </button>\n      </div>\n      \n      {error && (\n        <div className=\"error-alert\">\n          <i className=\"icon-warning\"></i>\n          <p>{error}</p>\n          <button \n            className=\"error-close\" \n            onClick={() => setError(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      {pets.length === 0 ? (\n        <div className=\"no-pets\">\n          <div className=\"no-pets-icon\">\n            <i className=\"icon-paw\"></i>\n          </div>\n          <h2>No pets added yet</h2>\n          <p>Add your pets to track their feeding schedules and health data.</p>\n          <button \n            className=\"btn btn-primary\"\n            onClick={() => {\n              resetForm();\n              setShowAddModal(true);\n            }}\n          >\n            Add Your First Pet\n          </button>\n        </div>\n      ) : (\n        <div className=\"pets-grid\">\n          {pets.map((pet) => (\n            <div key={pet.pet_id} className=\"pet-card\">\n              <div className=\"pet-card-header\">\n                <h3>{pet.name}</h3>\n                <div className=\"pet-actions\">\n                  <button \n                    className=\"btn btn-icon\" \n                    onClick={() => handleEditClick(pet)}\n                    title=\"Edit Pet\"\n                  >\n                    <i className=\"icon-edit\"></i>\n                  </button>\n                  <button \n                    className=\"btn btn-icon btn-danger\" \n                    onClick={() => setDeleteConfirm(pet.pet_id)}\n                    title=\"Delete Pet\"\n                  >\n                    <i className=\"icon-trash\"></i>\n                  </button>\n                </div>\n              </div>\n              \n              <div className=\"pet-info\">\n                <div className=\"pet-detail\">\n                  <span className=\"detail-label\">Weight:</span>\n                  <span className=\"detail-value\">{pet.health_data.weight} kg</span>\n                </div>\n                <div className=\"pet-detail\">\n                  <span className=\"detail-label\">Age:</span>\n                  <span className=\"detail-value\">{pet.health_data.age} {pet.health_data.age === 1 ? 'year' : 'years'}</span>\n                </div>\n                {pet.health_data.breed && (\n                  <div className=\"pet-detail\">\n                    <span className=\"detail-label\">Breed:</span>\n                    <span className=\"detail-value\">{pet.health_data.breed}</span>\n                  </div>\n                )}\n                <div className=\"pet-detail\">\n                  <span className=\"detail-label\">Activity Level:</span>\n                  <span className=\"detail-value pet-activity\">\n                    {pet.health_data.activity_level || 'Medium'}\n                  </span>\n                </div>\n                {pet.health_data.dietary_restrictions && pet.health_data.dietary_restrictions.length > 0 && (\n                  <div className=\"pet-detail\">\n                    <span className=\"detail-label\">Dietary Restrictions:</span>\n                    <div className=\"dietary-tags\">\n                      {pet.health_data.dietary_restrictions.map((item, index) => (\n                        <span key={index} className=\"dietary-tag\">{item}</span>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"pet-recommendations\">\n                <h4>Feeding Recommendations</h4>\n                <div className=\"recommendation-item\">\n                  <i className=\"icon-bowl\"></i>\n                  <div className=\"recommendation-content\">\n                    <span className=\"recommendation-label\">Daily Amount</span>\n                    <span className=\"recommendation-value\">{calculateFoodRecommendation(pet)}</span>\n                  </div>\n                </div>\n                <div className=\"recommendation-item\">\n                  <i className=\"icon-clock\"></i>\n                  <div className=\"recommendation-content\">\n                    <span className=\"recommendation-label\">Schedule</span>\n                    <span className=\"recommendation-value\">{getFeedingSchedule(pet)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      {/* Add/Edit Pet Modal */}\n      {showAddModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>{editingPet ? `Edit ${editingPet.name}` : 'Add New Pet'}</h2>\n              <button \n                className=\"modal-close\" \n                onClick={() => setShowAddModal(false)}\n              >\n                &times;\n              </button>\n            </div>\n            \n            <form onSubmit={handleSubmit}>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"pet-name\">Name</label>\n                  <input\n                    id=\"pet-name\"\n                    type=\"text\"\n                    value={petName}\n                    onChange={(e) => setPetName(e.target.value)}\n                    placeholder=\"Pet name\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"pet-weight\">Weight (kg)</label>\n                    <input\n                      id=\"pet-weight\"\n                      type=\"number\"\n                      min=\"0.1\"\n                      step=\"0.1\"\n                      value={petWeight}\n                      onChange={(e) => setPetWeight(parseFloat(e.target.value) || 0)}\n                      placeholder=\"Weight\"\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"pet-age\">Age (years)</label>\n                    <input\n                      id=\"pet-age\"\n                      type=\"number\"\n                      min=\"0.1\"\n                      step=\"0.1\"\n                      value={petAge}\n                      onChange={(e) => setPetAge(parseFloat(e.target.value) || 0)}\n                      placeholder=\"Age\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"pet-breed\">Breed (optional)</label>\n                  <input\n                    id=\"pet-breed\"\n                    type=\"text\"\n                    value={petBreed}\n                    onChange={(e) => setPetBreed(e.target.value)}\n                    placeholder=\"Breed\"\n                  />\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"pet-activity\">Activity Level</label>\n                  <select\n                    id=\"pet-activity\"\n                    value={petActivityLevel}\n                    onChange={(e) => setPetActivityLevel(e.target.value as 'low' | 'medium' | 'high')}\n                  >\n                    <option value=\"low\">Low</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"high\">High</option>\n                  </select>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"pet-dietary\">Dietary Restrictions (comma-separated, optional)</label>\n                  <input\n                    id=\"pet-dietary\"\n                    type=\"text\"\n                    value={petDietary}\n                    onChange={(e) => setPetDietary(e.target.value)}\n                    placeholder=\"e.g., grain-free, low-fat\"\n                  />\n                  <small className=\"form-note\">Separate multiple restrictions with commas</small>\n                </div>\n              </div>\n              \n              <div className=\"modal-footer\">\n                <button \n                  type=\"button\" \n                  className=\"btn btn-outline\" \n                  onClick={() => setShowAddModal(false)}\n                >\n                  Cancel\n                </button>\n                <button \n                  type=\"submit\" \n                  className=\"btn btn-primary\"\n                >\n                  {editingPet ? 'Save Changes' : 'Add Pet'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n      \n      {/* Delete Confirmation Modal */}\n      {deleteConfirm && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Delete Pet</h2>\n              <button \n                className=\"modal-close\" \n                onClick={() => setDeleteConfirm(null)}\n              >\n                &times;\n              </button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <p className=\"confirm-message\">\n                Are you sure you want to delete this pet? This action cannot be undone.\n              </p>\n            </div>\n            \n            <div className=\"modal-footer\">\n              <button \n                className=\"btn btn-outline\" \n                onClick={() => setDeleteConfirm(null)}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"btn btn-danger\" \n                onClick={() => handleDelete(deleteConfirm)}\n              >\n                Delete Pet\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Pets;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,sBAAsB,CAE/C,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,IAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAQ,EAAE,CAAC,CAC3C,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAU,IAAI,CAAC,CACrD,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACc,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAU,KAAK,CAAC,CAChE,KAAM,CAACgB,UAAU,CAAEC,aAAa,CAAC,CAAGjB,QAAQ,CAAa,IAAI,CAAC,CAC9D,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAgB,IAAI,CAAC,CAEvE;AACA,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAS,EAAE,CAAC,CAClD,KAAM,CAACsB,SAAS,CAAEC,YAAY,CAAC,CAAGvB,QAAQ,CAAS,CAAC,CAAC,CACrD,KAAM,CAACwB,MAAM,CAAEC,SAAS,CAAC,CAAGzB,QAAQ,CAAS,CAAC,CAAC,CAC/C,KAAM,CAAC0B,QAAQ,CAAEC,WAAW,CAAC,CAAG3B,QAAQ,CAAS,EAAE,CAAC,CACpD,KAAM,CAAC4B,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG7B,QAAQ,CAA4B,QAAQ,CAAC,CAC7F,KAAM,CAAC8B,UAAU,CAAEC,aAAa,CAAC,CAAG/B,QAAQ,CAAS,EAAE,CAAC,CAExDC,SAAS,CAAC,IAAM,CACd+B,SAAS,CAAC,CAAC,CAEX;AACA,KAAM,CAAAC,YAAY,CAAG/B,QAAQ,CAC1BgC,OAAO,CAAC,cAAc,CAAC,CACvBC,EAAE,CAAC,kBAAkB,CACpB,CAAEC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,QAAQ,CAAEC,KAAK,CAAE,MAAO,CAAC,CAC/CC,eACF,CAAC,CACAC,SAAS,CAAC,CAAC,CAEd,MAAO,IAAM,CACXP,YAAY,CAACQ,WAAW,CAAC,CAAC,CAC5B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAT,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACFrB,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,KAAM,CAAE+B,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAAzC,QAAQ,CAAC0C,IAAI,CAACC,OAAO,CAAC,CAAC,CACxD,GAAI,CAACF,IAAI,CAAE,KAAM,IAAI,CAAAG,KAAK,CAAC,wBAAwB,CAAC,CAEpD;AACA,KAAM,CAAEJ,IAAI,CAAE9B,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CACnC6C,IAAI,CAAC,MAAM,CAAC,CACZC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,CAAEN,IAAI,CAACO,EAAE,CAAC,CACtBC,KAAK,CAAC,MAAM,CAAC,CAEhB,GAAIvC,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtBH,OAAO,CAACiC,IAAI,EAAI,EAAE,CAAC,CACrB,CAAE,MAAOU,GAAQ,CAAE,CACjBC,OAAO,CAACzC,KAAK,CAAC,sBAAsB,CAAEwC,GAAG,CAAC,CAC1CvC,QAAQ,CAACuC,GAAG,CAACE,OAAO,EAAI,qBAAqB,CAAC,CAChD,CAAC,OAAS,CACR3C,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAA4B,eAAe,CAAIgB,OAAY,EAAK,CACxC,KAAM,CAAEC,SAAS,CAAEC,GAAG,CAAEC,MAAM,CAAEC,GAAG,CAAEC,MAAO,CAAC,CAAGL,OAAO,CAEvD,GAAIC,SAAS,GAAK,QAAQ,CAAE,CAC1B/C,OAAO,CAACoD,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEH,MAAM,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACjF,CAAC,IAAM,IAAIT,SAAS,GAAK,QAAQ,CAAE,CACjC/C,OAAO,CAACoD,IAAI,EACVA,IAAI,CAACM,GAAG,CAACC,GAAG,EACVA,GAAG,CAACC,MAAM,GAAKX,MAAM,CAACW,MAAM,CAAGX,MAAM,CAAGU,GAC1C,CACF,CAAC,CACH,CAAC,IAAM,IAAIZ,SAAS,GAAK,QAAQ,CAAE,CACjC/C,OAAO,CAACoD,IAAI,EACVA,IAAI,CAACS,MAAM,CAACF,GAAG,EAAIA,GAAG,CAACC,MAAM,GAAKT,MAAM,CAACS,MAAM,CACjD,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAE,SAAS,CAAGA,CAAA,GAAM,CACtBlD,UAAU,CAAC,EAAE,CAAC,CACdE,YAAY,CAAC,CAAC,CAAC,CACfE,SAAS,CAAC,CAAC,CAAC,CACZE,WAAW,CAAC,EAAE,CAAC,CACfE,mBAAmB,CAAC,QAAQ,CAAC,CAC7BE,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,CAED;AACA,KAAM,CAAAyC,eAAe,CAAIJ,GAAQ,EAAK,CACpCnD,aAAa,CAACmD,GAAG,CAAC,CAClB/C,UAAU,CAAC+C,GAAG,CAACH,IAAI,CAAC,CACpB1C,YAAY,CAAC6C,GAAG,CAACK,WAAW,CAACC,MAAM,CAAC,CACpCjD,SAAS,CAAC2C,GAAG,CAACK,WAAW,CAACE,GAAG,CAAC,CAC9BhD,WAAW,CAACyC,GAAG,CAACK,WAAW,CAACG,KAAK,EAAI,EAAE,CAAC,CACxC/C,mBAAmB,CAACuC,GAAG,CAACK,WAAW,CAACI,cAAc,EAAI,QAAQ,CAAC,CAC/D9C,aAAa,CAAC,CAACqC,GAAG,CAACK,WAAW,CAACK,oBAAoB,EAAI,EAAE,EAAEC,IAAI,CAAC,IAAI,CAAC,CAAC,CACtEhE,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAiE,YAAY,CAAG,KAAO,CAAAC,CAAkB,EAAK,CACjDA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CACF;AACA,KAAM,CAAExC,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAAzC,QAAQ,CAAC0C,IAAI,CAACC,OAAO,CAAC,CAAC,CACxD,GAAI,CAACF,IAAI,CAAE,KAAM,IAAI,CAAAG,KAAK,CAAC,wBAAwB,CAAC,CAEpD;AACA,GAAI,CAAC1B,OAAO,CAAC+D,IAAI,CAAC,CAAC,CAAE,CACnBtE,QAAQ,CAAC,sBAAsB,CAAC,CAChC,OACF,CAEA;AACA,KAAM,CAAAuE,mBAAmB,CAAGtD,UAAU,CACnCuD,KAAK,CAAC,GAAG,CAAC,CACVlB,GAAG,CAACmB,IAAI,EAAIA,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,CACxBb,MAAM,CAACgB,IAAI,EAAIA,IAAI,CAACC,MAAM,CAAG,CAAC,CAAC,CAElC;AACA,KAAM,CAAAC,UAAU,CAAG,CACjBd,MAAM,CAAEpD,SAAS,CACjBqD,GAAG,CAAEnD,MAAM,CACXoD,KAAK,CAAElD,QAAQ,CAACyD,IAAI,CAAC,CAAC,CACtBN,cAAc,CAAEjD,gBAAgB,CAChCkD,oBAAoB,CAAEM,mBACxB,CAAC,CAED,GAAIpE,UAAU,CAAE,CACd;AACA,KAAM,CAAEJ,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CAC7B6C,IAAI,CAAC,MAAM,CAAC,CACZ0C,MAAM,CAAC,CACNxB,IAAI,CAAE7C,OAAO,CAAC+D,IAAI,CAAC,CAAC,CACpBV,WAAW,CAAEe,UACf,CAAC,CAAC,CACDvC,EAAE,CAAC,QAAQ,CAAEjC,UAAU,CAACqD,MAAM,CAAC,CAElC,GAAIzD,KAAK,CAAE,KAAM,CAAAA,KAAK,CACxB,CAAC,IAAM,CACL;AACA,KAAM,CAAEA,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CAC7B6C,IAAI,CAAC,MAAM,CAAC,CACZ2C,MAAM,CAAC,CAAC,CACPC,OAAO,CAAEhD,IAAI,CAACO,EAAE,CAChBe,IAAI,CAAE7C,OAAO,CAAC+D,IAAI,CAAC,CAAC,CACpBV,WAAW,CAAEe,UACf,CAAC,CAAC,CAAC,CAEL,GAAI5E,KAAK,CAAE,KAAM,CAAAA,KAAK,CACxB,CAEA;AACAG,eAAe,CAAC,KAAK,CAAC,CACtBwD,SAAS,CAAC,CAAC,CACXtD,aAAa,CAAC,IAAI,CAAC,CAErB,CAAE,MAAOmC,GAAQ,CAAE,CACjBC,OAAO,CAACzC,KAAK,CAAC,mBAAmB,CAAEwC,GAAG,CAAC,CACvCvC,QAAQ,CAACuC,GAAG,CAACE,OAAO,EAAI,oBAAoB,CAAC,CAC/C,CACF,CAAC,CAED;AACA,KAAM,CAAAsC,YAAY,CAAG,KAAO,CAAAC,KAAa,EAAK,CAC5C,GAAI,CACF,KAAM,CAAEjF,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CAC7B6C,IAAI,CAAC,MAAM,CAAC,CACZ+C,MAAM,CAAC,CAAC,CACR7C,EAAE,CAAC,QAAQ,CAAE4C,KAAK,CAAC,CAEtB,GAAIjF,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtBO,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAE,MAAOiC,GAAQ,CAAE,CACjBC,OAAO,CAACzC,KAAK,CAAC,qBAAqB,CAAEwC,GAAG,CAAC,CACzCvC,QAAQ,CAAC,yBAAyBuC,GAAG,CAACE,OAAO,EAAE,CAAC,CAClD,CACF,CAAC,CAED;AACA,KAAM,CAAAyC,2BAA2B,CAAI3B,GAAQ,EAAa,CACxD;AACA,KAAM,CAAEM,MAAM,CAAEC,GAAG,CAAEE,cAAe,CAAC,CAAGT,GAAG,CAACK,WAAW,CAEvD;AACA,GAAI,CAAAuB,UAAU,CAAGtB,MAAM,CAAG,EAAE,CAE5B;AACA,GAAIC,GAAG,CAAG,CAAC,CAAE,CACXqB,UAAU,EAAI,GAAG,CAAE;AACrB,CAAC,IAAM,IAAIrB,GAAG,CAAG,CAAC,CAAE,CAClBqB,UAAU,EAAI,GAAG,CAAE;AACrB,CAEA;AACA,OAAQnB,cAAc,EACpB,IAAK,KAAK,CACRmB,UAAU,EAAI,GAAG,CACjB,MACF,IAAK,MAAM,CACTA,UAAU,EAAI,GAAG,CACjB,MACF,QACE;AACA,MACJ,CAEA;AACA,KAAM,CAAAC,aAAa,CAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAG,CAAC,CAAC,CAAG,CAAC,CAEpD;AACA,MAAO,GAAGC,aAAa,WAAW,CACpC,CAAC,CAED;AACA,KAAM,CAAAG,kBAAkB,CAAIhC,GAAQ,EAAa,CAC/C,KAAM,CAAEO,GAAI,CAAC,CAAGP,GAAG,CAACK,WAAW,CAE/B,GAAIE,GAAG,CAAG,CAAC,CAAE,CACX,MAAO,mBAAmB,CAC5B,CAAC,IAAM,IAAIA,GAAG,CAAG,CAAC,CAAE,CAClB,MAAO,iBAAiB,CAC1B,CAAC,IAAM,CACL,MAAO,2BAA2B,CACpC,CACF,CAAC,CAED,GAAIjE,OAAO,CAAE,CACX,mBACEJ,KAAA,QAAK+F,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChClG,IAAA,QAAKiG,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvCjG,IAAA,MAAAkG,QAAA,CAAG,yBAAuB,CAAG,CAAC,EAC3B,CAAC,CAEV,CAEA,mBACEhG,KAAA,QAAK+F,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BhG,KAAA,QAAK+F,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlG,IAAA,OAAAkG,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBhG,KAAA,WACE+F,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAM,CACbhC,SAAS,CAAC,CAAC,CACXtD,aAAa,CAAC,IAAI,CAAC,CACnBF,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,CAAAuF,QAAA,eAEFlG,IAAA,MAAGiG,SAAS,CAAC,WAAW,CAAI,CAAC,WAC/B,EAAQ,CAAC,EACN,CAAC,CAELzF,KAAK,eACJN,KAAA,QAAK+F,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlG,IAAA,MAAGiG,SAAS,CAAC,cAAc,CAAI,CAAC,cAChCjG,IAAA,MAAAkG,QAAA,CAAI1F,KAAK,CAAI,CAAC,cACdR,IAAA,WACEiG,SAAS,CAAC,aAAa,CACvBE,OAAO,CAAEA,CAAA,GAAM1F,QAAQ,CAAC,IAAI,CAAE,CAAAyF,QAAA,CAC/B,MAED,CAAQ,CAAC,EACN,CACN,CAEA9F,IAAI,CAAC+E,MAAM,GAAK,CAAC,cAChBjF,KAAA,QAAK+F,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBlG,IAAA,QAAKiG,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BlG,IAAA,MAAGiG,SAAS,CAAC,UAAU,CAAI,CAAC,CACzB,CAAC,cACNjG,IAAA,OAAAkG,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BlG,IAAA,MAAAkG,QAAA,CAAG,iEAA+D,CAAG,CAAC,cACtElG,IAAA,WACEiG,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAM,CACbhC,SAAS,CAAC,CAAC,CACXxD,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,CAAAuF,QAAA,CACH,oBAED,CAAQ,CAAC,EACN,CAAC,cAENlG,IAAA,QAAKiG,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvB9F,IAAI,CAAC2D,GAAG,CAAEC,GAAG,eACZ9D,KAAA,QAAsB+F,SAAS,CAAC,UAAU,CAAAC,QAAA,eACxChG,KAAA,QAAK+F,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BlG,IAAA,OAAAkG,QAAA,CAAKlC,GAAG,CAACH,IAAI,CAAK,CAAC,cACnB3D,KAAA,QAAK+F,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlG,IAAA,WACEiG,SAAS,CAAC,cAAc,CACxBE,OAAO,CAAEA,CAAA,GAAM/B,eAAe,CAACJ,GAAG,CAAE,CACpCoC,KAAK,CAAC,UAAU,CAAAF,QAAA,cAEhBlG,IAAA,MAAGiG,SAAS,CAAC,WAAW,CAAI,CAAC,CACvB,CAAC,cACTjG,IAAA,WACEiG,SAAS,CAAC,yBAAyB,CACnCE,OAAO,CAAEA,CAAA,GAAMpF,gBAAgB,CAACiD,GAAG,CAACC,MAAM,CAAE,CAC5CmC,KAAK,CAAC,YAAY,CAAAF,QAAA,cAElBlG,IAAA,MAAGiG,SAAS,CAAC,YAAY,CAAI,CAAC,CACxB,CAAC,EACN,CAAC,EACH,CAAC,cAEN/F,KAAA,QAAK+F,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBhG,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,SAAMiG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,SAAO,CAAM,CAAC,cAC7ChG,KAAA,SAAM+F,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAElC,GAAG,CAACK,WAAW,CAACC,MAAM,CAAC,KAAG,EAAM,CAAC,EAC9D,CAAC,cACNpE,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,SAAMiG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,MAAI,CAAM,CAAC,cAC1ChG,KAAA,SAAM+F,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAElC,GAAG,CAACK,WAAW,CAACE,GAAG,CAAC,GAAC,CAACP,GAAG,CAACK,WAAW,CAACE,GAAG,GAAK,CAAC,CAAG,MAAM,CAAG,OAAO,EAAO,CAAC,EACvG,CAAC,CACLP,GAAG,CAACK,WAAW,CAACG,KAAK,eACpBtE,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,SAAMiG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,QAAM,CAAM,CAAC,cAC5ClG,IAAA,SAAMiG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAElC,GAAG,CAACK,WAAW,CAACG,KAAK,CAAO,CAAC,EAC1D,CACN,cACDtE,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,SAAMiG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,iBAAe,CAAM,CAAC,cACrDlG,IAAA,SAAMiG,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CACxClC,GAAG,CAACK,WAAW,CAACI,cAAc,EAAI,QAAQ,CACvC,CAAC,EACJ,CAAC,CACLT,GAAG,CAACK,WAAW,CAACK,oBAAoB,EAAIV,GAAG,CAACK,WAAW,CAACK,oBAAoB,CAACS,MAAM,CAAG,CAAC,eACtFjF,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,SAAMiG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,uBAAqB,CAAM,CAAC,cAC3DlG,IAAA,QAAKiG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BlC,GAAG,CAACK,WAAW,CAACK,oBAAoB,CAACX,GAAG,CAAC,CAACmB,IAAI,CAAEmB,KAAK,gBACpDrG,IAAA,SAAkBiG,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEhB,IAAI,EAApCmB,KAA2C,CACvD,CAAC,CACC,CAAC,EACH,CACN,EACE,CAAC,cAENnG,KAAA,QAAK+F,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClClG,IAAA,OAAAkG,QAAA,CAAI,yBAAuB,CAAI,CAAC,cAChChG,KAAA,QAAK+F,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClClG,IAAA,MAAGiG,SAAS,CAAC,WAAW,CAAI,CAAC,cAC7B/F,KAAA,QAAK+F,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrClG,IAAA,SAAMiG,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,cAAY,CAAM,CAAC,cAC1DlG,IAAA,SAAMiG,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAEP,2BAA2B,CAAC3B,GAAG,CAAC,CAAO,CAAC,EAC7E,CAAC,EACH,CAAC,cACN9D,KAAA,QAAK+F,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClClG,IAAA,MAAGiG,SAAS,CAAC,YAAY,CAAI,CAAC,cAC9B/F,KAAA,QAAK+F,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrClG,IAAA,SAAMiG,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cACtDlG,IAAA,SAAMiG,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAEF,kBAAkB,CAAChC,GAAG,CAAC,CAAO,CAAC,EACpE,CAAC,EACH,CAAC,EACH,CAAC,GAtEEA,GAAG,CAACC,MAuET,CACN,CAAC,CACC,CACN,CAGAvD,YAAY,eACXV,IAAA,QAAKiG,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BhG,KAAA,QAAK+F,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhG,KAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlG,IAAA,OAAAkG,QAAA,CAAKtF,UAAU,CAAG,QAAQA,UAAU,CAACiD,IAAI,EAAE,CAAG,aAAa,CAAK,CAAC,cACjE7D,IAAA,WACEiG,SAAS,CAAC,aAAa,CACvBE,OAAO,CAAEA,CAAA,GAAMxF,eAAe,CAAC,KAAK,CAAE,CAAAuF,QAAA,CACvC,MAED,CAAQ,CAAC,EACN,CAAC,cAENhG,KAAA,SAAMoG,QAAQ,CAAE1B,YAAa,CAAAsB,QAAA,eAC3BhG,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhG,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,UAAOuG,OAAO,CAAC,UAAU,CAAAL,QAAA,CAAC,MAAI,CAAO,CAAC,cACtClG,IAAA,UACE8C,EAAE,CAAC,UAAU,CACb0D,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEzF,OAAQ,CACf0F,QAAQ,CAAG7B,CAAC,EAAK5D,UAAU,CAAC4D,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE,CAC5CG,WAAW,CAAC,UAAU,CACtBC,QAAQ,MACT,CAAC,EACC,CAAC,cAEN3G,KAAA,QAAK+F,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBhG,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,UAAOuG,OAAO,CAAC,YAAY,CAAAL,QAAA,CAAC,aAAW,CAAO,CAAC,cAC/ClG,IAAA,UACE8C,EAAE,CAAC,YAAY,CACf0D,IAAI,CAAC,QAAQ,CACbM,GAAG,CAAC,KAAK,CACTC,IAAI,CAAC,KAAK,CACVN,KAAK,CAAEvF,SAAU,CACjBwF,QAAQ,CAAG7B,CAAC,EAAK1D,YAAY,CAAC6F,UAAU,CAACnC,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAC,EAAI,CAAC,CAAE,CAC/DG,WAAW,CAAC,QAAQ,CACrB,CAAC,EACC,CAAC,cAEN1G,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,UAAOuG,OAAO,CAAC,SAAS,CAAAL,QAAA,CAAC,aAAW,CAAO,CAAC,cAC5ClG,IAAA,UACE8C,EAAE,CAAC,SAAS,CACZ0D,IAAI,CAAC,QAAQ,CACbM,GAAG,CAAC,KAAK,CACTC,IAAI,CAAC,KAAK,CACVN,KAAK,CAAErF,MAAO,CACdsF,QAAQ,CAAG7B,CAAC,EAAKxD,SAAS,CAAC2F,UAAU,CAACnC,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAC,EAAI,CAAC,CAAE,CAC5DG,WAAW,CAAC,KAAK,CAClB,CAAC,EACC,CAAC,EACH,CAAC,cAEN1G,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,UAAOuG,OAAO,CAAC,WAAW,CAAAL,QAAA,CAAC,kBAAgB,CAAO,CAAC,cACnDlG,IAAA,UACE8C,EAAE,CAAC,WAAW,CACd0D,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEnF,QAAS,CAChBoF,QAAQ,CAAG7B,CAAC,EAAKtD,WAAW,CAACsD,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE,CAC7CG,WAAW,CAAC,OAAO,CACpB,CAAC,EACC,CAAC,cAEN1G,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,UAAOuG,OAAO,CAAC,cAAc,CAAAL,QAAA,CAAC,gBAAc,CAAO,CAAC,cACpDhG,KAAA,WACE4C,EAAE,CAAC,cAAc,CACjB2D,KAAK,CAAEjF,gBAAiB,CACxBkF,QAAQ,CAAG7B,CAAC,EAAKpD,mBAAmB,CAACoD,CAAC,CAAC8B,MAAM,CAACF,KAAkC,CAAE,CAAAP,QAAA,eAElFlG,IAAA,WAAQyG,KAAK,CAAC,KAAK,CAAAP,QAAA,CAAC,KAAG,CAAQ,CAAC,cAChClG,IAAA,WAAQyG,KAAK,CAAC,QAAQ,CAAAP,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtClG,IAAA,WAAQyG,KAAK,CAAC,MAAM,CAAAP,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC5B,CAAC,EACN,CAAC,cAENhG,KAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlG,IAAA,UAAOuG,OAAO,CAAC,aAAa,CAAAL,QAAA,CAAC,kDAAgD,CAAO,CAAC,cACrFlG,IAAA,UACE8C,EAAE,CAAC,aAAa,CAChB0D,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE/E,UAAW,CAClBgF,QAAQ,CAAG7B,CAAC,EAAKlD,aAAa,CAACkD,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE,CAC/CG,WAAW,CAAC,2BAA2B,CACxC,CAAC,cACF5G,IAAA,UAAOiG,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,4CAA0C,CAAO,CAAC,EAC5E,CAAC,EACH,CAAC,cAENhG,KAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlG,IAAA,WACEwG,IAAI,CAAC,QAAQ,CACbP,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAMxF,eAAe,CAAC,KAAK,CAAE,CAAAuF,QAAA,CACvC,QAED,CAAQ,CAAC,cACTlG,IAAA,WACEwG,IAAI,CAAC,QAAQ,CACbP,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAE1BtF,UAAU,CAAG,cAAc,CAAG,SAAS,CAClC,CAAC,EACN,CAAC,EACF,CAAC,EACJ,CAAC,CACH,CACN,CAGAE,aAAa,eACZd,IAAA,QAAKiG,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BhG,KAAA,QAAK+F,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhG,KAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlG,IAAA,OAAAkG,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBlG,IAAA,WACEiG,SAAS,CAAC,aAAa,CACvBE,OAAO,CAAEA,CAAA,GAAMpF,gBAAgB,CAAC,IAAI,CAAE,CAAAmF,QAAA,CACvC,MAED,CAAQ,CAAC,EACN,CAAC,cAENlG,IAAA,QAAKiG,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBlG,IAAA,MAAGiG,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,yEAE/B,CAAG,CAAC,CACD,CAAC,cAENhG,KAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlG,IAAA,WACEiG,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAMpF,gBAAgB,CAAC,IAAI,CAAE,CAAAmF,QAAA,CACvC,QAED,CAAQ,CAAC,cACTlG,IAAA,WACEiG,SAAS,CAAC,gBAAgB,CAC1BE,OAAO,CAAEA,CAAA,GAAMX,YAAY,CAAC1E,aAAa,CAAE,CAAAoF,QAAA,CAC5C,YAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CACH,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/F,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
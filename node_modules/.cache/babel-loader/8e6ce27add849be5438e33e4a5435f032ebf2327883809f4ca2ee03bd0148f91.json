{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart_Pet_Feeder/src/components/ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  session\n}) => {\n  _s();\n  const [isVerifying, setIsVerifying] = useState(true);\n  const location = useLocation();\n  useEffect(() => {\n    // Brief delay to ensure proper session state is used for navigation\n    // This helps prevent immediate redirects that may be incorrect\n    const timer = setTimeout(() => {\n      setIsVerifying(false);\n    }, 300);\n    return () => clearTimeout(timer);\n  }, []);\n  if (isVerifying) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Verifying session...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  if (!session) {\n    // Save the attempted URL for redirecting back after login\n    sessionStorage.setItem('redirectAfterLogin', location.pathname);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"Ice8U7PCObbViS6ByiKn/h1DMxw=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","session","_s","isVerifying","setIsVerifying","location","timer","setTimeout","clearTimeout","className","fileName","_jsxFileName","lineNumber","columnNumber","sessionStorage","setItem","pathname","to","_c","$RefreshReg$"],"sources":["/workspaces/Smart_Pet_Feeder/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { Session } from '@supabase/supabase-js';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  session: Session | null;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, session }) => {\n  const [isVerifying, setIsVerifying] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    // Brief delay to ensure proper session state is used for navigation\n    // This helps prevent immediate redirects that may be incorrect\n    const timer = setTimeout(() => {\n      setIsVerifying(false);\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, []);\n\n  if (isVerifying) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Verifying session...</p>\n      </div>\n    );\n  }\n  \n  if (!session) {\n    // Save the attempted URL for redirecting back after login\n    sessionStorage.setItem('redirectAfterLogin', location.pathname);\n    return <Navigate to=\"/login\" />;\n  }\n  \n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQzD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMe,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BH,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMI,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIH,WAAW,EAAE;IACf,oBACEP,OAAA;MAAKa,SAAS,EAAC,mBAAmB;MAAAT,QAAA,gBAChCJ,OAAA;QAAKa,SAAS,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCjB,OAAA;QAAAI,QAAA,EAAG;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAEV;EAEA,IAAI,CAACZ,OAAO,EAAE;IACZ;IACAa,cAAc,CAACC,OAAO,CAAC,oBAAoB,EAAEV,QAAQ,CAACW,QAAQ,CAAC;IAC/D,oBAAOpB,OAAA,CAACH,QAAQ;MAACwB,EAAE,EAAC;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,oBAAOjB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACE,EAAA,CA9BIH,cAA6C;EAAA,QAEhCL,WAAW;AAAA;AAAAwB,EAAA,GAFxBnB,cAA6C;AAgCnD,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
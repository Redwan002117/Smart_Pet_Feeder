{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{supabase}from'../supabaseClient.ts';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip,Legend}from'chart.js';import'../styles/Dashboard.css';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip,Legend);const Dashboard=()=>{const[devices,setDevices]=useState([]);const[selectedDevice,setSelectedDevice]=useState(null);const[feedingHistory,setFeedingHistory]=useState([]);const[upcomingSchedules,setUpcomingSchedules]=useState([]);const[feedingAmount,setFeedingAmount]=useState(10);const[activeTab,setActiveTab]=useState('manual');const[isLoading,setIsLoading]=useState(true);const[isDispensing,setIsDispensing]=useState(false);const[error,setError]=useState(null);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const[chartData,setChartData]=useState(null);const itemsPerPage=5;useEffect(()=>{const fetchInitialData=async()=>{setIsLoading(true);try{// Get current user\nconst{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not found');// Fetch devices\nconst{data:devicesData,error:devicesError}=await supabase.from('devices').select('*').eq('user_id',user.id);if(devicesError)throw devicesError;if(devicesData&&devicesData.length>0){setDevices(devicesData);setSelectedDevice(devicesData[0]);// Fetch feeding history for the first device\nawait fetchFeedingHistory(devicesData[0].device_id);// Fetch upcoming schedules for the first device\nawait fetchUpcomingSchedules(devicesData[0].device_id,user.id);}else{// No devices found\nsetDevices([]);setSelectedDevice(null);}}catch(error){console.error('Error fetching data:',error);setError(error.message);}finally{setIsLoading(false);}};fetchInitialData();// Set up realtime subscriptions\nconst devicesSubscription=supabase.channel('devices-changes').on('postgres_changes',{event:'*',schema:'public',table:'devices'},handleDeviceUpdate).subscribe();const historySubscription=supabase.channel('history-changes').on('postgres_changes',{event:'INSERT',schema:'public',table:'feeding_history'},handleHistoryUpdate).subscribe();const schedulesSubscription=supabase.channel('schedules-changes').on('postgres_changes',{event:'*',schema:'public',table:'schedules'},handleScheduleUpdate).subscribe();// Cleanup subscriptions\nreturn()=>{devicesSubscription.unsubscribe();historySubscription.unsubscribe();schedulesSubscription.unsubscribe();};},[]);// Handle realtime device updates\nconst handleDeviceUpdate=async payload=>{const{eventType,new:newDevice,old:oldDevice}=payload;// Update the devices list\nif(eventType==='INSERT'){setDevices(prev=>[...prev,newDevice]);}else if(eventType==='UPDATE'){setDevices(prev=>prev.map(device=>device.device_id===newDevice.device_id?newDevice:device));// If this is the selected device, update it\nif(selectedDevice&&selectedDevice.device_id===newDevice.device_id){setSelectedDevice(newDevice);}}else if(eventType==='DELETE'){setDevices(prev=>prev.filter(device=>device.device_id!==oldDevice.device_id));// If this was the selected device, select another one or null\nif(selectedDevice&&selectedDevice.device_id===oldDevice.device_id){const{data:{user}}=await supabase.auth.getUser();const{data}=await supabase.from('devices').select('*').eq('user_id',user===null||user===void 0?void 0:user.id).limit(1);setSelectedDevice(data&&data.length>0?data[0]:null);}}};// Handle realtime feeding history updates\nconst handleHistoryUpdate=payload=>{const{new:newFeeding}=payload;// Only update if it's for the selected device\nif(selectedDevice&&newFeeding.device_id===selectedDevice.device_id){setFeedingHistory(prev=>[newFeeding,...prev.slice(0,itemsPerPage-1)]);// Update chart data\nupdateChartData([newFeeding,...feedingHistory]);}};// Handle realtime schedule updates\nconst handleScheduleUpdate=payload=>{const{eventType,new:newSchedule,old:oldSchedule}=payload;// Only update if it's for the selected device\nif(!selectedDevice)return;if(eventType==='INSERT'&&newSchedule.device_id===selectedDevice.device_id){setUpcomingSchedules(prev=>{const updated=[...prev,newSchedule].sort((a,b)=>new Date(a.time).getTime()-new Date(b.time).getTime()).filter(schedule=>new Date(schedule.time)>new Date()).slice(0,2);return updated;});}else if(eventType==='UPDATE'&&newSchedule.device_id===selectedDevice.device_id){setUpcomingSchedules(prev=>{const updated=prev.map(schedule=>schedule.schedule_id===newSchedule.schedule_id?newSchedule:schedule).sort((a,b)=>new Date(a.time).getTime()-new Date(b.time).getTime()).filter(schedule=>new Date(schedule.time)>new Date()).slice(0,2);return updated;});}else if(eventType==='DELETE'){setUpcomingSchedules(prev=>prev.filter(schedule=>schedule.schedule_id!==oldSchedule.schedule_id));}};// Fetch feeding history for a specific device\nconst fetchFeedingHistory=async function(deviceId){let page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;try{// Calculate pagination\nconst from=(page-1)*itemsPerPage;const to=from+itemsPerPage-1;// Get total count first\nconst{count,error:countError}=await supabase.from('feeding_history').select('*',{count:'exact',head:true}).eq('device_id',deviceId);if(countError)throw countError;setTotalPages(Math.ceil((count||0)/itemsPerPage));// Fetch the actual data\nconst{data,error}=await supabase.from('feeding_history').select('*').eq('device_id',deviceId).order('time',{ascending:false}).range(from,to);if(error)throw error;setFeedingHistory(data||[]);setCurrentPage(page);// Update chart data\nupdateChartData(data||[]);}catch(error){console.error('Error fetching feeding history:',error);setError('Failed to load feeding history');}};// Fetch upcoming schedules for a specific device\nconst fetchUpcomingSchedules=async(deviceId,userId)=>{try{const now=new Date().toISOString();const{data,error}=await supabase.from('schedules').select('*').eq('device_id',deviceId).eq('user_id',userId).gt('time',now).order('time').limit(2);if(error)throw error;setUpcomingSchedules(data||[]);}catch(error){console.error('Error fetching upcoming schedules:',error);setError('Failed to load upcoming schedules');}};// Update chart data based on feeding history\nconst updateChartData=history=>{// Group by date and calculate total amounts\nconst dailyData=history.reduce((acc,item)=>{const date=new Date(item.time).toLocaleDateString();acc[date]=(acc[date]||0)+item.amount;return acc;},{});// Prepare chart data\nconst labels=Object.keys(dailyData).sort((a,b)=>new Date(a).getTime()-new Date(b).getTime()).slice(-7);// Last 7 days\nconst amounts=labels.map(date=>dailyData[date]||0);setChartData({labels,datasets:[{label:'Food Dispensed (g)',data:amounts,fill:false,backgroundColor:'rgba(255, 206, 86, 0.2)',borderColor:'rgba(255, 206, 86, 1)',tension:0.1}]});};// Handle device selection change\nconst handleDeviceChange=async deviceId=>{const device=devices.find(d=>d.device_id===deviceId);if(device){setSelectedDevice(device);// Reset pagination\nsetCurrentPage(1);// Fetch data for the selected device\nconst{data:{user}}=await supabase.auth.getUser();if(user){await fetchFeedingHistory(deviceId);await fetchUpcomingSchedules(deviceId,user.id);}}};// Dispense food manually\nconst handleDispense=async()=>{if(!selectedDevice)return;try{setIsDispensing(true);// Update device status with dispense command\nconst{error}=await supabase.from('devices').update({last_status:{...selectedDevice.last_status,command:'dispense',command_amount:feedingAmount}}).eq('device_id',selectedDevice.device_id);if(error)throw error;// Record the feeding in history\nconst{error:historyError}=await supabase.from('feeding_history').insert([{device_id:selectedDevice.device_id,time:new Date().toISOString(),amount:feedingAmount,manual:true}]);if(historyError)throw historyError;// Show success message\nalert(`Dispensing ${feedingAmount}g of food!`);}catch(error){console.error('Error dispensing food:',error);setError('Failed to dispense food');}finally{setIsDispensing(false);}};// Format date and time for display\nconst formatDateTime=dateString=>{const date=new Date(dateString);return date.toLocaleString();};// Handle pagination\nconst handlePageChange=page=>{if(selectedDevice){fetchFeedingHistory(selectedDevice.device_id,page);}};// Render device status\nconst renderDeviceStatus=()=>{if(!selectedDevice){return/*#__PURE__*/_jsxs(\"div\",{className:\"no-devices-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-device-off\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"No devices found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Connect your first Pet Feeder device to get started!\"}),/*#__PURE__*/_jsx(Link,{to:\"/device-setup\",className:\"btn btn-primary\",children:\"Add Device\"})]});}const{last_status}=selectedDevice;const foodLevel=(last_status===null||last_status===void 0?void 0:last_status.food_level)||0;const wifiStrength=(last_status===null||last_status===void 0?void 0:last_status.wifi_strength)||0;const lastUpdate=last_status!==null&&last_status!==void 0&&last_status.last_update?new Date(parseInt(last_status.last_update)*1000).toLocaleString():'Unknown';return/*#__PURE__*/_jsxs(\"div\",{className:\"device-status-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"device-status-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedDevice.device_name}),/*#__PURE__*/_jsx(\"span\",{className:`device-status ${foodLevel>0?'online':'offline'}`,children:foodLevel>0?'Online':'Offline'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"device-status-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-food\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Food Level\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${foodLevel}%`},\"data-level\":`${foodLevel}%`})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-wifi\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"WiFi Signal\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wifi-strength\",children:Array.from({length:4}).map((_,i)=>/*#__PURE__*/_jsx(\"div\",{className:`wifi-bar ${i<Math.ceil(wifiStrength/25)?'active':''}`},i))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-clock\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Last Update\"}),/*#__PURE__*/_jsx(\"p\",{children:lastUpdate})]})]})]})]});};// Render device selector\nconst renderDeviceSelector=()=>{if(devices.length<=1)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"device-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"device-select\",children:\"Select Device:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"device-select\",value:(selectedDevice===null||selectedDevice===void 0?void 0:selectedDevice.device_id)||'',onChange:e=>handleDeviceChange(e.target.value),children:devices.map(device=>/*#__PURE__*/_jsx(\"option\",{value:device.device_id,children:device.device_name},device.device_id))})]});};// Render feeding controls\nconst renderFeedingControls=()=>{if(!selectedDevice)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"feeding-controls-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tab-navigation\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='manual'?'active':''}`,onClick:()=>setActiveTab('manual'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-hand\"}),\" Manual Feeding\"]}),/*#__PURE__*/_jsxs(\"button\",{className:`tab-button ${activeTab==='scheduled'?'active':''}`,onClick:()=>setActiveTab('scheduled'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-calendar\"}),\" Scheduled Feeding\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tab-content\",children:activeTab==='manual'?/*#__PURE__*/_jsxs(\"div\",{className:\"manual-feeding\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"amount-selector\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Amount to dispense (grams):\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"amount-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-circle\",onClick:()=>setFeedingAmount(prev=>Math.max(5,prev-5)),disabled:isDispensing,children:\"-\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:feedingAmount,onChange:e=>setFeedingAmount(Math.max(5,Math.min(100,parseInt(e.target.value)||5))),min:\"5\",max:\"100\",disabled:isDispensing}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-circle\",onClick:()=>setFeedingAmount(prev=>Math.min(100,prev+5)),disabled:isDispensing,children:\"+\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-dispense\",onClick:handleDispense,disabled:isDispensing,children:isDispensing?'Dispensing...':'Dispense Now'})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"scheduled-feeding\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Upcoming Feedings\"}),upcomingSchedules.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"schedule-list\",children:upcomingSchedules.map(schedule=>/*#__PURE__*/_jsxs(\"li\",{className:\"schedule-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"schedule-time\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-clock\"}),formatDateTime(schedule.time)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"schedule-amount\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-food\"}),schedule.amount,\"g\"]})]},schedule.schedule_id))}):/*#__PURE__*/_jsx(\"p\",{className:\"no-schedules-message\",children:\"No upcoming feedings scheduled.\"}),/*#__PURE__*/_jsx(Link,{to:\"/schedule\",className:\"btn btn-outline\",children:\"Manage Schedules\"})]})})]});};// Render feeding history\nconst renderFeedingHistory=()=>{if(!selectedDevice)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"feeding-history-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Feedings\"}),feedingHistory.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feeding-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feeding-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"table-cell\",children:\"Time\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-cell\",children:\"Amount\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-cell\",children:\"Type\"})]}),feedingHistory.map(feeding=>/*#__PURE__*/_jsxs(\"div\",{className:\"feeding-table-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"table-cell\",children:formatDateTime(feeding.time)}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-cell\",children:[feeding.amount,\"g\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-cell\",children:feeding.manual?'Manual':'Scheduled'})]},feeding.feed_id))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm\",disabled:currentPage===1,onClick:()=>handlePageChange(currentPage-1),children:\"Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"page-info\",children:[\"Page \",currentPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm\",disabled:currentPage===totalPages,onClick:()=>handlePageChange(currentPage+1),children:\"Next\"})]})]}):/*#__PURE__*/_jsx(\"p\",{className:\"no-history-message\",children:\"No feeding history available yet.\"}),/*#__PURE__*/_jsx(Link,{to:\"/history\",className:\"btn btn-text\",children:\"View Full History\"})]});};// Render feeding chart\nconst renderFeedingChart=()=>{if(!selectedDevice||!chartData)return null;const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'top'},title:{display:true,text:'7-Day Feeding Trend'}},scales:{y:{beginAtZero:true,title:{display:true,text:'Food Amount (g)'}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Feeding Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions})})]});};if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading dashboard...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-warning\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Something went wrong\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>window.location.reload(),children:\"Try Again\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Dashboard\"}),renderDeviceSelector()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-grid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid-item status\",children:renderDeviceStatus()}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-item controls\",children:renderFeedingControls()}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-item history\",children:renderFeedingHistory()}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-item chart\",children:renderFeedingChart()})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Link","supabase","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","Dashboard","devices","setDevices","selectedDevice","setSelectedDevice","feedingHistory","setFeedingHistory","upcomingSchedules","setUpcomingSchedules","feedingAmount","setFeedingAmount","activeTab","setActiveTab","isLoading","setIsLoading","isDispensing","setIsDispensing","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","chartData","setChartData","itemsPerPage","fetchInitialData","data","user","auth","getUser","Error","devicesData","devicesError","from","select","eq","id","length","fetchFeedingHistory","device_id","fetchUpcomingSchedules","console","message","devicesSubscription","channel","on","event","schema","table","handleDeviceUpdate","subscribe","historySubscription","handleHistoryUpdate","schedulesSubscription","handleScheduleUpdate","unsubscribe","payload","eventType","new","newDevice","old","oldDevice","prev","map","device","filter","limit","newFeeding","slice","updateChartData","newSchedule","oldSchedule","updated","sort","a","b","Date","time","getTime","schedule","schedule_id","deviceId","page","arguments","undefined","to","count","countError","head","Math","ceil","order","ascending","range","userId","now","toISOString","gt","history","dailyData","reduce","acc","item","date","toLocaleDateString","amount","labels","Object","keys","amounts","datasets","label","fill","backgroundColor","borderColor","tension","handleDeviceChange","find","d","handleDispense","update","last_status","command","command_amount","historyError","insert","manual","alert","formatDateTime","dateString","toLocaleString","handlePageChange","renderDeviceStatus","className","children","foodLevel","food_level","wifiStrength","wifi_strength","lastUpdate","last_update","parseInt","device_name","style","width","Array","_","i","renderDeviceSelector","htmlFor","value","onChange","e","target","renderFeedingControls","onClick","max","disabled","type","min","renderFeedingHistory","feeding","feed_id","renderFeedingChart","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","y","beginAtZero","options","window","location","reload"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../supabaseClient.ts';\nimport { Line, Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Device, FeedingHistory, Schedule } from '../types';\nimport '../styles/Dashboard.css';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Dashboard: React.FC = () => {\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null);\n  const [feedingHistory, setFeedingHistory] = useState<FeedingHistory[]>([]);\n  const [upcomingSchedules, setUpcomingSchedules] = useState<Schedule[]>([]);\n  const [feedingAmount, setFeedingAmount] = useState<number>(10);\n  const [activeTab, setActiveTab] = useState<'manual' | 'scheduled'>('manual');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isDispensing, setIsDispensing] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [chartData, setChartData] = useState<any>(null);\n\n  const itemsPerPage = 5;\n\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setIsLoading(true);\n      try {\n        // Get current user\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) throw new Error('User not found');\n        \n        // Fetch devices\n        const { data: devicesData, error: devicesError } = await supabase\n          .from('devices')\n          .select('*')\n          .eq('user_id', user.id);\n          \n        if (devicesError) throw devicesError;\n        \n        if (devicesData && devicesData.length > 0) {\n          setDevices(devicesData);\n          setSelectedDevice(devicesData[0]);\n          \n          // Fetch feeding history for the first device\n          await fetchFeedingHistory(devicesData[0].device_id);\n          \n          // Fetch upcoming schedules for the first device\n          await fetchUpcomingSchedules(devicesData[0].device_id, user.id);\n        } else {\n          // No devices found\n          setDevices([]);\n          setSelectedDevice(null);\n        }\n      } catch (error: any) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInitialData();\n    \n    // Set up realtime subscriptions\n    const devicesSubscription = supabase\n      .channel('devices-changes')\n      .on('postgres_changes', \n        { event: '*', schema: 'public', table: 'devices' },\n        handleDeviceUpdate\n      )\n      .subscribe();\n      \n    const historySubscription = supabase\n      .channel('history-changes')\n      .on('postgres_changes',\n        { event: 'INSERT', schema: 'public', table: 'feeding_history' },\n        handleHistoryUpdate\n      )\n      .subscribe();\n      \n    const schedulesSubscription = supabase\n      .channel('schedules-changes')\n      .on('postgres_changes',\n        { event: '*', schema: 'public', table: 'schedules' },\n        handleScheduleUpdate\n      )\n      .subscribe();\n    \n    // Cleanup subscriptions\n    return () => {\n      devicesSubscription.unsubscribe();\n      historySubscription.unsubscribe();\n      schedulesSubscription.unsubscribe();\n    };\n  }, []);\n\n  // Handle realtime device updates\n  const handleDeviceUpdate = async (payload: any) => {\n    const { eventType, new: newDevice, old: oldDevice } = payload;\n    \n    // Update the devices list\n    if (eventType === 'INSERT') {\n      setDevices(prev => [...prev, newDevice]);\n    } else if (eventType === 'UPDATE') {\n      setDevices(prev => \n        prev.map(device => \n          device.device_id === newDevice.device_id ? newDevice : device\n        )\n      );\n      \n      // If this is the selected device, update it\n      if (selectedDevice && selectedDevice.device_id === newDevice.device_id) {\n        setSelectedDevice(newDevice);\n      }\n    } else if (eventType === 'DELETE') {\n      setDevices(prev => \n        prev.filter(device => device.device_id !== oldDevice.device_id)\n      );\n      \n      // If this was the selected device, select another one or null\n      if (selectedDevice && selectedDevice.device_id === oldDevice.device_id) {\n        const { data: { user } } = await supabase.auth.getUser();\n        const { data } = await supabase\n          .from('devices')\n          .select('*')\n          .eq('user_id', user?.id)\n          .limit(1);\n          \n        setSelectedDevice(data && data.length > 0 ? data[0] : null);\n      }\n    }\n  };\n  \n  // Handle realtime feeding history updates\n  const handleHistoryUpdate = (payload: any) => {\n    const { new: newFeeding } = payload;\n    \n    // Only update if it's for the selected device\n    if (selectedDevice && newFeeding.device_id === selectedDevice.device_id) {\n      setFeedingHistory(prev => [newFeeding, ...prev.slice(0, itemsPerPage - 1)]);\n      \n      // Update chart data\n      updateChartData([newFeeding, ...feedingHistory]);\n    }\n  };\n  \n  // Handle realtime schedule updates\n  const handleScheduleUpdate = (payload: any) => {\n    const { eventType, new: newSchedule, old: oldSchedule } = payload;\n    \n    // Only update if it's for the selected device\n    if (!selectedDevice) return;\n    \n    if (eventType === 'INSERT' && newSchedule.device_id === selectedDevice.device_id) {\n      setUpcomingSchedules(prev => {\n        const updated = [...prev, newSchedule]\n          .sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime())\n          .filter(schedule => new Date(schedule.time) > new Date())\n          .slice(0, 2);\n        return updated;\n      });\n    } else if (eventType === 'UPDATE' && newSchedule.device_id === selectedDevice.device_id) {\n      setUpcomingSchedules(prev => {\n        const updated = prev\n          .map(schedule => schedule.schedule_id === newSchedule.schedule_id ? newSchedule : schedule)\n          .sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime())\n          .filter(schedule => new Date(schedule.time) > new Date())\n          .slice(0, 2);\n        return updated;\n      });\n    } else if (eventType === 'DELETE') {\n      setUpcomingSchedules(prev => \n        prev.filter(schedule => schedule.schedule_id !== oldSchedule.schedule_id)\n      );\n    }\n  };\n\n  // Fetch feeding history for a specific device\n  const fetchFeedingHistory = async (deviceId: string, page: number = 1) => {\n    try {\n      // Calculate pagination\n      const from = (page - 1) * itemsPerPage;\n      const to = from + itemsPerPage - 1;\n      \n      // Get total count first\n      const { count, error: countError } = await supabase\n        .from('feeding_history')\n        .select('*', { count: 'exact', head: true })\n        .eq('device_id', deviceId);\n        \n      if (countError) throw countError;\n      \n      setTotalPages(Math.ceil((count || 0) / itemsPerPage));\n      \n      // Fetch the actual data\n      const { data, error } = await supabase\n        .from('feeding_history')\n        .select('*')\n        .eq('device_id', deviceId)\n        .order('time', { ascending: false })\n        .range(from, to);\n        \n      if (error) throw error;\n      \n      setFeedingHistory(data || []);\n      setCurrentPage(page);\n      \n      // Update chart data\n      updateChartData(data || []);\n    } catch (error: any) {\n      console.error('Error fetching feeding history:', error);\n      setError('Failed to load feeding history');\n    }\n  };\n\n  // Fetch upcoming schedules for a specific device\n  const fetchUpcomingSchedules = async (deviceId: string, userId: string) => {\n    try {\n      const now = new Date().toISOString();\n      \n      const { data, error } = await supabase\n        .from('schedules')\n        .select('*')\n        .eq('device_id', deviceId)\n        .eq('user_id', userId)\n        .gt('time', now)\n        .order('time')\n        .limit(2);\n        \n      if (error) throw error;\n      \n      setUpcomingSchedules(data || []);\n    } catch (error: any) {\n      console.error('Error fetching upcoming schedules:', error);\n      setError('Failed to load upcoming schedules');\n    }\n  };\n\n  // Update chart data based on feeding history\n  const updateChartData = (history: FeedingHistory[]) => {\n    // Group by date and calculate total amounts\n    const dailyData = history.reduce((acc: {[key: string]: number}, item) => {\n      const date = new Date(item.time).toLocaleDateString();\n      acc[date] = (acc[date] || 0) + item.amount;\n      return acc;\n    }, {});\n    \n    // Prepare chart data\n    const labels = Object.keys(dailyData).sort((a, b) => \n      new Date(a).getTime() - new Date(b).getTime()\n    ).slice(-7); // Last 7 days\n    \n    const amounts = labels.map(date => dailyData[date] || 0);\n    \n    setChartData({\n      labels,\n      datasets: [\n        {\n          label: 'Food Dispensed (g)',\n          data: amounts,\n          fill: false,\n          backgroundColor: 'rgba(255, 206, 86, 0.2)',\n          borderColor: 'rgba(255, 206, 86, 1)',\n          tension: 0.1\n        }\n      ]\n    });\n  };\n\n  // Handle device selection change\n  const handleDeviceChange = async (deviceId: string) => {\n    const device = devices.find(d => d.device_id === deviceId);\n    if (device) {\n      setSelectedDevice(device);\n      \n      // Reset pagination\n      setCurrentPage(1);\n      \n      // Fetch data for the selected device\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        await fetchFeedingHistory(deviceId);\n        await fetchUpcomingSchedules(deviceId, user.id);\n      }\n    }\n  };\n\n  // Dispense food manually\n  const handleDispense = async () => {\n    if (!selectedDevice) return;\n    \n    try {\n      setIsDispensing(true);\n      \n      // Update device status with dispense command\n      const { error } = await supabase\n        .from('devices')\n        .update({\n          last_status: {\n            ...selectedDevice.last_status,\n            command: 'dispense',\n            command_amount: feedingAmount\n          }\n        })\n        .eq('device_id', selectedDevice.device_id);\n        \n      if (error) throw error;\n      \n      // Record the feeding in history\n      const { error: historyError } = await supabase\n        .from('feeding_history')\n        .insert([{\n          device_id: selectedDevice.device_id,\n          time: new Date().toISOString(),\n          amount: feedingAmount,\n          manual: true\n        }]);\n        \n      if (historyError) throw historyError;\n      \n      // Show success message\n      alert(`Dispensing ${feedingAmount}g of food!`);\n    } catch (error: any) {\n      console.error('Error dispensing food:', error);\n      setError('Failed to dispense food');\n    } finally {\n      setIsDispensing(false);\n    }\n  };\n\n  // Format date and time for display\n  const formatDateTime = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Handle pagination\n  const handlePageChange = (page: number) => {\n    if (selectedDevice) {\n      fetchFeedingHistory(selectedDevice.device_id, page);\n    }\n  };\n\n  // Render device status\n  const renderDeviceStatus = () => {\n    if (!selectedDevice) {\n      return (\n        <div className=\"no-devices-message\">\n          <i className=\"icon-device-off\"></i>\n          <h3>No devices found</h3>\n          <p>Connect your first Pet Feeder device to get started!</p>\n          <Link to=\"/device-setup\" className=\"btn btn-primary\">Add Device</Link>\n        </div>\n      );\n    }\n\n    const { last_status } = selectedDevice;\n    const foodLevel = last_status?.food_level || 0;\n    const wifiStrength = last_status?.wifi_strength || 0;\n    const lastUpdate = last_status?.last_update \n      ? new Date(parseInt(last_status.last_update) * 1000).toLocaleString()\n      : 'Unknown';\n\n    return (\n      <div className=\"device-status-card\">\n        <div className=\"device-status-header\">\n          <h3>{selectedDevice.device_name}</h3>\n          <span className={`device-status ${foodLevel > 0 ? 'online' : 'offline'}`}>\n            {foodLevel > 0 ? 'Online' : 'Offline'}\n          </span>\n        </div>\n        \n        <div className=\"device-status-grid\">\n          <div className=\"status-item\">\n            <div className=\"status-icon\">\n              <i className=\"icon-food\"></i>\n            </div>\n            <div className=\"status-info\">\n              <h4>Food Level</h4>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\" \n                  style={{ width: `${foodLevel}%` }}\n                  data-level={`${foodLevel}%`}\n                ></div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"status-item\">\n            <div className=\"status-icon\">\n              <i className=\"icon-wifi\"></i>\n            </div>\n            <div className=\"status-info\">\n              <h4>WiFi Signal</h4>\n              <div className=\"wifi-strength\">\n                {Array.from({ length: 4 }).map((_, i) => (\n                  <div \n                    key={i}\n                    className={`wifi-bar ${i < Math.ceil(wifiStrength / 25) ? 'active' : ''}`}\n                  ></div>\n                ))}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"status-item\">\n            <div className=\"status-icon\">\n              <i className=\"icon-clock\"></i>\n            </div>\n            <div className=\"status-info\">\n              <h4>Last Update</h4>\n              <p>{lastUpdate}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Render device selector\n  const renderDeviceSelector = () => {\n    if (devices.length <= 1) return null;\n    \n    return (\n      <div className=\"device-selector\">\n        <label htmlFor=\"device-select\">Select Device:</label>\n        <select \n          id=\"device-select\"\n          value={selectedDevice?.device_id || ''}\n          onChange={(e) => handleDeviceChange(e.target.value)}\n        >\n          {devices.map((device) => (\n            <option key={device.device_id} value={device.device_id}>\n              {device.device_name}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  };\n\n  // Render feeding controls\n  const renderFeedingControls = () => {\n    if (!selectedDevice) return null;\n    \n    return (\n      <div className=\"feeding-controls-card\">\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'manual' ? 'active' : ''}`}\n            onClick={() => setActiveTab('manual')}\n          >\n            <i className=\"icon-hand\"></i> Manual Feeding\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'scheduled' ? 'active' : ''}`}\n            onClick={() => setActiveTab('scheduled')}\n          >\n            <i className=\"icon-calendar\"></i> Scheduled Feeding\n          </button>\n        </div>\n        \n        <div className=\"tab-content\">\n          {activeTab === 'manual' ? (\n            <div className=\"manual-feeding\">\n              <div className=\"amount-selector\">\n                <h4>Amount to dispense (grams):</h4>\n                <div className=\"amount-controls\">\n                  <button \n                    className=\"btn btn-circle\" \n                    onClick={() => setFeedingAmount(prev => Math.max(5, prev - 5))}\n                    disabled={isDispensing}\n                  >\n                    -\n                  </button>\n                  <input \n                    type=\"number\" \n                    value={feedingAmount} \n                    onChange={(e) => setFeedingAmount(Math.max(5, Math.min(100, parseInt(e.target.value) || 5)))}\n                    min=\"5\"\n                    max=\"100\"\n                    disabled={isDispensing}\n                  />\n                  <button \n                    className=\"btn btn-circle\" \n                    onClick={() => setFeedingAmount(prev => Math.min(100, prev + 5))}\n                    disabled={isDispensing}\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n              \n              <button \n                className=\"btn btn-primary btn-dispense\" \n                onClick={handleDispense}\n                disabled={isDispensing}\n              >\n                {isDispensing ? 'Dispensing...' : 'Dispense Now'}\n              </button>\n            </div>\n          ) : (\n            <div className=\"scheduled-feeding\">\n              <h4>Upcoming Feedings</h4>\n              {upcomingSchedules.length > 0 ? (\n                <ul className=\"schedule-list\">\n                  {upcomingSchedules.map((schedule) => (\n                    <li key={schedule.schedule_id} className=\"schedule-item\">\n                      <div className=\"schedule-time\">\n                        <i className=\"icon-clock\"></i>\n                        {formatDateTime(schedule.time)}\n                      </div>\n                      <div className=\"schedule-amount\">\n                        <i className=\"icon-food\"></i>\n                        {schedule.amount}g\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p className=\"no-schedules-message\">No upcoming feedings scheduled.</p>\n              )}\n              <Link to=\"/schedule\" className=\"btn btn-outline\">\n                Manage Schedules\n              </Link>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // Render feeding history\n  const renderFeedingHistory = () => {\n    if (!selectedDevice) return null;\n    \n    return (\n      <div className=\"feeding-history-card\">\n        <h3>Recent Feedings</h3>\n        \n        {feedingHistory.length > 0 ? (\n          <>\n            <div className=\"feeding-table\">\n              <div className=\"feeding-table-header\">\n                <div className=\"table-cell\">Time</div>\n                <div className=\"table-cell\">Amount</div>\n                <div className=\"table-cell\">Type</div>\n              </div>\n              \n              {feedingHistory.map((feeding) => (\n                <div key={feeding.feed_id} className=\"feeding-table-row\">\n                  <div className=\"table-cell\">{formatDateTime(feeding.time)}</div>\n                  <div className=\"table-cell\">{feeding.amount}g</div>\n                  <div className=\"table-cell\">{feeding.manual ? 'Manual' : 'Scheduled'}</div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"pagination\">\n              <button \n                className=\"btn btn-sm\" \n                disabled={currentPage === 1}\n                onClick={() => handlePageChange(currentPage - 1)}\n              >\n                Previous\n              </button>\n              <span className=\"page-info\">Page {currentPage} of {totalPages}</span>\n              <button \n                className=\"btn btn-sm\" \n                disabled={currentPage === totalPages}\n                onClick={() => handlePageChange(currentPage + 1)}\n              >\n                Next\n              </button>\n            </div>\n          </>\n        ) : (\n          <p className=\"no-history-message\">No feeding history available yet.</p>\n        )}\n        \n        <Link to=\"/history\" className=\"btn btn-text\">View Full History</Link>\n      </div>\n    );\n  };\n\n  // Render feeding chart\n  const renderFeedingChart = () => {\n    if (!selectedDevice || !chartData) return null;\n    \n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top' as const,\n        },\n        title: {\n          display: true,\n          text: '7-Day Feeding Trend',\n        },\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          title: {\n            display: true,\n            text: 'Food Amount (g)'\n          }\n        }\n      }\n    };\n    \n    return (\n      <div className=\"chart-card\">\n        <h3>Feeding Analysis</h3>\n        \n        <div className=\"chart-container\">\n          <Line data={chartData} options={chartOptions} />\n        </div>\n      </div>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading dashboard...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <i className=\"icon-warning\"></i>\n        <h2>Something went wrong</h2>\n        <p>{error}</p>\n        <button className=\"btn btn-primary\" onClick={() => window.location.reload()}>\n          Try Again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <h1>Dashboard</h1>\n        {renderDeviceSelector()}\n      </div>\n      \n      <div className=\"dashboard-grid\">\n        <div className=\"grid-item status\">{renderDeviceStatus()}</div>\n        <div className=\"grid-item controls\">{renderFeedingControls()}</div>\n        <div className=\"grid-item history\">{renderFeedingHistory()}</div>\n        <div className=\"grid-item chart\">{renderFeedingChart()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,QAAQ,KAAQ,sBAAsB,CAC/C,OAASC,IAAI,KAAa,iBAAiB,CAC3C,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CAEjB,MAAO,yBAAyB,CAEhC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACAd,OAAO,CAACe,QAAQ,CACdd,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CAED,KAAM,CAAAQ,SAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGxB,QAAQ,CAAW,EAAE,CAAC,CACpD,KAAM,CAACyB,cAAc,CAAEC,iBAAiB,CAAC,CAAG1B,QAAQ,CAAgB,IAAI,CAAC,CACzE,KAAM,CAAC2B,cAAc,CAAEC,iBAAiB,CAAC,CAAG5B,QAAQ,CAAmB,EAAE,CAAC,CAC1E,KAAM,CAAC6B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG9B,QAAQ,CAAa,EAAE,CAAC,CAC1E,KAAM,CAAC+B,aAAa,CAAEC,gBAAgB,CAAC,CAAGhC,QAAQ,CAAS,EAAE,CAAC,CAC9D,KAAM,CAACiC,SAAS,CAAEC,YAAY,CAAC,CAAGlC,QAAQ,CAAyB,QAAQ,CAAC,CAC5E,KAAM,CAACmC,SAAS,CAAEC,YAAY,CAAC,CAAGpC,QAAQ,CAAU,IAAI,CAAC,CACzD,KAAM,CAACqC,YAAY,CAAEC,eAAe,CAAC,CAAGtC,QAAQ,CAAU,KAAK,CAAC,CAChE,KAAM,CAACuC,KAAK,CAAEC,QAAQ,CAAC,CAAGxC,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACyC,WAAW,CAAEC,cAAc,CAAC,CAAG1C,QAAQ,CAAS,CAAC,CAAC,CACzD,KAAM,CAAC2C,UAAU,CAAEC,aAAa,CAAC,CAAG5C,QAAQ,CAAS,CAAC,CAAC,CACvD,KAAM,CAAC6C,SAAS,CAAEC,YAAY,CAAC,CAAG9C,QAAQ,CAAM,IAAI,CAAC,CAErD,KAAM,CAAA+C,YAAY,CAAG,CAAC,CAEtB9C,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+C,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnCZ,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACF;AACA,KAAM,CAAEa,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAA/C,QAAQ,CAACgD,IAAI,CAACC,OAAO,CAAC,CAAC,CACxD,GAAI,CAACF,IAAI,CAAE,KAAM,IAAI,CAAAG,KAAK,CAAC,gBAAgB,CAAC,CAE5C;AACA,KAAM,CAAEJ,IAAI,CAAEK,WAAW,CAAEf,KAAK,CAAEgB,YAAa,CAAC,CAAG,KAAM,CAAApD,QAAQ,CAC9DqD,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,CAAER,IAAI,CAACS,EAAE,CAAC,CAEzB,GAAIJ,YAAY,CAAE,KAAM,CAAAA,YAAY,CAEpC,GAAID,WAAW,EAAIA,WAAW,CAACM,MAAM,CAAG,CAAC,CAAE,CACzCpC,UAAU,CAAC8B,WAAW,CAAC,CACvB5B,iBAAiB,CAAC4B,WAAW,CAAC,CAAC,CAAC,CAAC,CAEjC;AACA,KAAM,CAAAO,mBAAmB,CAACP,WAAW,CAAC,CAAC,CAAC,CAACQ,SAAS,CAAC,CAEnD;AACA,KAAM,CAAAC,sBAAsB,CAACT,WAAW,CAAC,CAAC,CAAC,CAACQ,SAAS,CAAEZ,IAAI,CAACS,EAAE,CAAC,CACjE,CAAC,IAAM,CACL;AACAnC,UAAU,CAAC,EAAE,CAAC,CACdE,iBAAiB,CAAC,IAAI,CAAC,CACzB,CACF,CAAE,MAAOa,KAAU,CAAE,CACnByB,OAAO,CAACzB,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CC,QAAQ,CAACD,KAAK,CAAC0B,OAAO,CAAC,CACzB,CAAC,OAAS,CACR7B,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDY,gBAAgB,CAAC,CAAC,CAElB;AACA,KAAM,CAAAkB,mBAAmB,CAAG/D,QAAQ,CACjCgE,OAAO,CAAC,iBAAiB,CAAC,CAC1BC,EAAE,CAAC,kBAAkB,CACpB,CAAEC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,QAAQ,CAAEC,KAAK,CAAE,SAAU,CAAC,CAClDC,kBACF,CAAC,CACAC,SAAS,CAAC,CAAC,CAEd,KAAM,CAAAC,mBAAmB,CAAGvE,QAAQ,CACjCgE,OAAO,CAAC,iBAAiB,CAAC,CAC1BC,EAAE,CAAC,kBAAkB,CACpB,CAAEC,KAAK,CAAE,QAAQ,CAAEC,MAAM,CAAE,QAAQ,CAAEC,KAAK,CAAE,iBAAkB,CAAC,CAC/DI,mBACF,CAAC,CACAF,SAAS,CAAC,CAAC,CAEd,KAAM,CAAAG,qBAAqB,CAAGzE,QAAQ,CACnCgE,OAAO,CAAC,mBAAmB,CAAC,CAC5BC,EAAE,CAAC,kBAAkB,CACpB,CAAEC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,QAAQ,CAAEC,KAAK,CAAE,WAAY,CAAC,CACpDM,oBACF,CAAC,CACAJ,SAAS,CAAC,CAAC,CAEd;AACA,MAAO,IAAM,CACXP,mBAAmB,CAACY,WAAW,CAAC,CAAC,CACjCJ,mBAAmB,CAACI,WAAW,CAAC,CAAC,CACjCF,qBAAqB,CAACE,WAAW,CAAC,CAAC,CACrC,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAN,kBAAkB,CAAG,KAAO,CAAAO,OAAY,EAAK,CACjD,KAAM,CAAEC,SAAS,CAAEC,GAAG,CAAEC,SAAS,CAAEC,GAAG,CAAEC,SAAU,CAAC,CAAGL,OAAO,CAE7D;AACA,GAAIC,SAAS,GAAK,QAAQ,CAAE,CAC1BxD,UAAU,CAAC6D,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEH,SAAS,CAAC,CAAC,CAC1C,CAAC,IAAM,IAAIF,SAAS,GAAK,QAAQ,CAAE,CACjCxD,UAAU,CAAC6D,IAAI,EACbA,IAAI,CAACC,GAAG,CAACC,MAAM,EACbA,MAAM,CAACzB,SAAS,GAAKoB,SAAS,CAACpB,SAAS,CAAGoB,SAAS,CAAGK,MACzD,CACF,CAAC,CAED;AACA,GAAI9D,cAAc,EAAIA,cAAc,CAACqC,SAAS,GAAKoB,SAAS,CAACpB,SAAS,CAAE,CACtEpC,iBAAiB,CAACwD,SAAS,CAAC,CAC9B,CACF,CAAC,IAAM,IAAIF,SAAS,GAAK,QAAQ,CAAE,CACjCxD,UAAU,CAAC6D,IAAI,EACbA,IAAI,CAACG,MAAM,CAACD,MAAM,EAAIA,MAAM,CAACzB,SAAS,GAAKsB,SAAS,CAACtB,SAAS,CAChE,CAAC,CAED;AACA,GAAIrC,cAAc,EAAIA,cAAc,CAACqC,SAAS,GAAKsB,SAAS,CAACtB,SAAS,CAAE,CACtE,KAAM,CAAEb,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAA/C,QAAQ,CAACgD,IAAI,CAACC,OAAO,CAAC,CAAC,CACxD,KAAM,CAAEH,IAAK,CAAC,CAAG,KAAM,CAAA9C,QAAQ,CAC5BqD,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,CAAER,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAES,EAAE,CAAC,CACvB8B,KAAK,CAAC,CAAC,CAAC,CAEX/D,iBAAiB,CAACuB,IAAI,EAAIA,IAAI,CAACW,MAAM,CAAG,CAAC,CAAGX,IAAI,CAAC,CAAC,CAAC,CAAG,IAAI,CAAC,CAC7D,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAA0B,mBAAmB,CAAII,OAAY,EAAK,CAC5C,KAAM,CAAEE,GAAG,CAAES,UAAW,CAAC,CAAGX,OAAO,CAEnC;AACA,GAAItD,cAAc,EAAIiE,UAAU,CAAC5B,SAAS,GAAKrC,cAAc,CAACqC,SAAS,CAAE,CACvElC,iBAAiB,CAACyD,IAAI,EAAI,CAACK,UAAU,CAAE,GAAGL,IAAI,CAACM,KAAK,CAAC,CAAC,CAAE5C,YAAY,CAAG,CAAC,CAAC,CAAC,CAAC,CAE3E;AACA6C,eAAe,CAAC,CAACF,UAAU,CAAE,GAAG/D,cAAc,CAAC,CAAC,CAClD,CACF,CAAC,CAED;AACA,KAAM,CAAAkD,oBAAoB,CAAIE,OAAY,EAAK,CAC7C,KAAM,CAAEC,SAAS,CAAEC,GAAG,CAAEY,WAAW,CAAEV,GAAG,CAAEW,WAAY,CAAC,CAAGf,OAAO,CAEjE;AACA,GAAI,CAACtD,cAAc,CAAE,OAErB,GAAIuD,SAAS,GAAK,QAAQ,EAAIa,WAAW,CAAC/B,SAAS,GAAKrC,cAAc,CAACqC,SAAS,CAAE,CAChFhC,oBAAoB,CAACuD,IAAI,EAAI,CAC3B,KAAM,CAAAU,OAAO,CAAG,CAAC,GAAGV,IAAI,CAAEQ,WAAW,CAAC,CACnCG,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAI,CAAAC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAG,GAAI,CAAAF,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CACvEb,MAAM,CAACc,QAAQ,EAAI,GAAI,CAAAH,IAAI,CAACG,QAAQ,CAACF,IAAI,CAAC,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CAAC,CACxDR,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CACd,MAAO,CAAAI,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,IAAM,IAAIf,SAAS,GAAK,QAAQ,EAAIa,WAAW,CAAC/B,SAAS,GAAKrC,cAAc,CAACqC,SAAS,CAAE,CACvFhC,oBAAoB,CAACuD,IAAI,EAAI,CAC3B,KAAM,CAAAU,OAAO,CAAGV,IAAI,CACjBC,GAAG,CAACgB,QAAQ,EAAIA,QAAQ,CAACC,WAAW,GAAKV,WAAW,CAACU,WAAW,CAAGV,WAAW,CAAGS,QAAQ,CAAC,CAC1FN,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAI,CAAAC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAG,GAAI,CAAAF,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CACvEb,MAAM,CAACc,QAAQ,EAAI,GAAI,CAAAH,IAAI,CAACG,QAAQ,CAACF,IAAI,CAAC,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CAAC,CACxDR,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CACd,MAAO,CAAAI,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,IAAM,IAAIf,SAAS,GAAK,QAAQ,CAAE,CACjClD,oBAAoB,CAACuD,IAAI,EACvBA,IAAI,CAACG,MAAM,CAACc,QAAQ,EAAIA,QAAQ,CAACC,WAAW,GAAKT,WAAW,CAACS,WAAW,CAC1E,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAA1C,mBAAmB,CAAG,cAAAA,CAAO2C,QAAgB,CAAuB,IAArB,CAAAC,IAAY,CAAAC,SAAA,CAAA9C,MAAA,IAAA8C,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CACnE,GAAI,CACF;AACA,KAAM,CAAAlD,IAAI,CAAG,CAACiD,IAAI,CAAG,CAAC,EAAI1D,YAAY,CACtC,KAAM,CAAA6D,EAAE,CAAGpD,IAAI,CAAGT,YAAY,CAAG,CAAC,CAElC;AACA,KAAM,CAAE8D,KAAK,CAAEtE,KAAK,CAAEuE,UAAW,CAAC,CAAG,KAAM,CAAA3G,QAAQ,CAChDqD,IAAI,CAAC,iBAAiB,CAAC,CACvBC,MAAM,CAAC,GAAG,CAAE,CAAEoD,KAAK,CAAE,OAAO,CAAEE,IAAI,CAAE,IAAK,CAAC,CAAC,CAC3CrD,EAAE,CAAC,WAAW,CAAE8C,QAAQ,CAAC,CAE5B,GAAIM,UAAU,CAAE,KAAM,CAAAA,UAAU,CAEhClE,aAAa,CAACoE,IAAI,CAACC,IAAI,CAAC,CAACJ,KAAK,EAAI,CAAC,EAAI9D,YAAY,CAAC,CAAC,CAErD;AACA,KAAM,CAAEE,IAAI,CAAEV,KAAM,CAAC,CAAG,KAAM,CAAApC,QAAQ,CACnCqD,IAAI,CAAC,iBAAiB,CAAC,CACvBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,WAAW,CAAE8C,QAAQ,CAAC,CACzBU,KAAK,CAAC,MAAM,CAAE,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAC,CACnCC,KAAK,CAAC5D,IAAI,CAAEoD,EAAE,CAAC,CAElB,GAAIrE,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtBX,iBAAiB,CAACqB,IAAI,EAAI,EAAE,CAAC,CAC7BP,cAAc,CAAC+D,IAAI,CAAC,CAEpB;AACAb,eAAe,CAAC3C,IAAI,EAAI,EAAE,CAAC,CAC7B,CAAE,MAAOV,KAAU,CAAE,CACnByB,OAAO,CAACzB,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvDC,QAAQ,CAAC,gCAAgC,CAAC,CAC5C,CACF,CAAC,CAED;AACA,KAAM,CAAAuB,sBAAsB,CAAG,KAAAA,CAAOyC,QAAgB,CAAEa,MAAc,GAAK,CACzE,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAnB,IAAI,CAAC,CAAC,CAACoB,WAAW,CAAC,CAAC,CAEpC,KAAM,CAAEtE,IAAI,CAAEV,KAAM,CAAC,CAAG,KAAM,CAAApC,QAAQ,CACnCqD,IAAI,CAAC,WAAW,CAAC,CACjBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,WAAW,CAAE8C,QAAQ,CAAC,CACzB9C,EAAE,CAAC,SAAS,CAAE2D,MAAM,CAAC,CACrBG,EAAE,CAAC,MAAM,CAAEF,GAAG,CAAC,CACfJ,KAAK,CAAC,MAAM,CAAC,CACbzB,KAAK,CAAC,CAAC,CAAC,CAEX,GAAIlD,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtBT,oBAAoB,CAACmB,IAAI,EAAI,EAAE,CAAC,CAClC,CAAE,MAAOV,KAAU,CAAE,CACnByB,OAAO,CAACzB,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1DC,QAAQ,CAAC,mCAAmC,CAAC,CAC/C,CACF,CAAC,CAED;AACA,KAAM,CAAAoD,eAAe,CAAI6B,OAAyB,EAAK,CACrD;AACA,KAAM,CAAAC,SAAS,CAAGD,OAAO,CAACE,MAAM,CAAC,CAACC,GAA4B,CAAEC,IAAI,GAAK,CACvE,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAA3B,IAAI,CAAC0B,IAAI,CAACzB,IAAI,CAAC,CAAC2B,kBAAkB,CAAC,CAAC,CACrDH,GAAG,CAACE,IAAI,CAAC,CAAG,CAACF,GAAG,CAACE,IAAI,CAAC,EAAI,CAAC,EAAID,IAAI,CAACG,MAAM,CAC1C,MAAO,CAAAJ,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN;AACA,KAAM,CAAAK,MAAM,CAAGC,MAAM,CAACC,IAAI,CAACT,SAAS,CAAC,CAAC1B,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAC9C,GAAI,CAAAC,IAAI,CAACF,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,CAAG,GAAI,CAAAF,IAAI,CAACD,CAAC,CAAC,CAACG,OAAO,CAAC,CAC9C,CAAC,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE;AAEb,KAAM,CAAAyC,OAAO,CAAGH,MAAM,CAAC3C,GAAG,CAACwC,IAAI,EAAIJ,SAAS,CAACI,IAAI,CAAC,EAAI,CAAC,CAAC,CAExDhF,YAAY,CAAC,CACXmF,MAAM,CACNI,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,oBAAoB,CAC3BrF,IAAI,CAAEmF,OAAO,CACbG,IAAI,CAAE,KAAK,CACXC,eAAe,CAAE,yBAAyB,CAC1CC,WAAW,CAAE,uBAAuB,CACpCC,OAAO,CAAE,GACX,CAAC,CAEL,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAC,kBAAkB,CAAG,KAAO,CAAAnC,QAAgB,EAAK,CACrD,KAAM,CAAAjB,MAAM,CAAGhE,OAAO,CAACqH,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC/E,SAAS,GAAK0C,QAAQ,CAAC,CAC1D,GAAIjB,MAAM,CAAE,CACV7D,iBAAiB,CAAC6D,MAAM,CAAC,CAEzB;AACA7C,cAAc,CAAC,CAAC,CAAC,CAEjB;AACA,KAAM,CAAEO,IAAI,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAG,KAAM,CAAA/C,QAAQ,CAACgD,IAAI,CAACC,OAAO,CAAC,CAAC,CACxD,GAAIF,IAAI,CAAE,CACR,KAAM,CAAAW,mBAAmB,CAAC2C,QAAQ,CAAC,CACnC,KAAM,CAAAzC,sBAAsB,CAACyC,QAAQ,CAAEtD,IAAI,CAACS,EAAE,CAAC,CACjD,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAmF,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CAACrH,cAAc,CAAE,OAErB,GAAI,CACFa,eAAe,CAAC,IAAI,CAAC,CAErB;AACA,KAAM,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAApC,QAAQ,CAC7BqD,IAAI,CAAC,SAAS,CAAC,CACfuF,MAAM,CAAC,CACNC,WAAW,CAAE,CACX,GAAGvH,cAAc,CAACuH,WAAW,CAC7BC,OAAO,CAAE,UAAU,CACnBC,cAAc,CAAEnH,aAClB,CACF,CAAC,CAAC,CACD2B,EAAE,CAAC,WAAW,CAAEjC,cAAc,CAACqC,SAAS,CAAC,CAE5C,GAAIvB,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtB;AACA,KAAM,CAAEA,KAAK,CAAE4G,YAAa,CAAC,CAAG,KAAM,CAAAhJ,QAAQ,CAC3CqD,IAAI,CAAC,iBAAiB,CAAC,CACvB4F,MAAM,CAAC,CAAC,CACPtF,SAAS,CAAErC,cAAc,CAACqC,SAAS,CACnCsC,IAAI,CAAE,GAAI,CAAAD,IAAI,CAAC,CAAC,CAACoB,WAAW,CAAC,CAAC,CAC9BS,MAAM,CAAEjG,aAAa,CACrBsH,MAAM,CAAE,IACV,CAAC,CAAC,CAAC,CAEL,GAAIF,YAAY,CAAE,KAAM,CAAAA,YAAY,CAEpC;AACAG,KAAK,CAAC,cAAcvH,aAAa,YAAY,CAAC,CAChD,CAAE,MAAOQ,KAAU,CAAE,CACnByB,OAAO,CAACzB,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CC,QAAQ,CAAC,yBAAyB,CAAC,CACrC,CAAC,OAAS,CACRF,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAED;AACA,KAAM,CAAAiH,cAAc,CAAIC,UAAkB,EAAK,CAC7C,KAAM,CAAA1B,IAAI,CAAG,GAAI,CAAA3B,IAAI,CAACqD,UAAU,CAAC,CACjC,MAAO,CAAA1B,IAAI,CAAC2B,cAAc,CAAC,CAAC,CAC9B,CAAC,CAED;AACA,KAAM,CAAAC,gBAAgB,CAAIjD,IAAY,EAAK,CACzC,GAAIhF,cAAc,CAAE,CAClBoC,mBAAmB,CAACpC,cAAc,CAACqC,SAAS,CAAE2C,IAAI,CAAC,CACrD,CACF,CAAC,CAED;AACA,KAAM,CAAAkD,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAI,CAAClI,cAAc,CAAE,CACnB,mBACEP,KAAA,QAAK0I,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjC7I,IAAA,MAAG4I,SAAS,CAAC,iBAAiB,CAAI,CAAC,cACnC5I,IAAA,OAAA6I,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzB7I,IAAA,MAAA6I,QAAA,CAAG,sDAAoD,CAAG,CAAC,cAC3D7I,IAAA,CAACd,IAAI,EAAC0G,EAAE,CAAC,eAAe,CAACgD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,EACnE,CAAC,CAEV,CAEA,KAAM,CAAEb,WAAY,CAAC,CAAGvH,cAAc,CACtC,KAAM,CAAAqI,SAAS,CAAG,CAAAd,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEe,UAAU,GAAI,CAAC,CAC9C,KAAM,CAAAC,YAAY,CAAG,CAAAhB,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEiB,aAAa,GAAI,CAAC,CACpD,KAAM,CAAAC,UAAU,CAAGlB,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEmB,WAAW,CACvC,GAAI,CAAAhE,IAAI,CAACiE,QAAQ,CAACpB,WAAW,CAACmB,WAAW,CAAC,CAAG,IAAI,CAAC,CAACV,cAAc,CAAC,CAAC,CACnE,SAAS,CAEb,mBACEvI,KAAA,QAAK0I,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjC3I,KAAA,QAAK0I,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnC7I,IAAA,OAAA6I,QAAA,CAAKpI,cAAc,CAAC4I,WAAW,CAAK,CAAC,cACrCrJ,IAAA,SAAM4I,SAAS,CAAE,iBAAiBE,SAAS,CAAG,CAAC,CAAG,QAAQ,CAAG,SAAS,EAAG,CAAAD,QAAA,CACtEC,SAAS,CAAG,CAAC,CAAG,QAAQ,CAAG,SAAS,CACjC,CAAC,EACJ,CAAC,cAEN5I,KAAA,QAAK0I,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjC3I,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B7I,IAAA,QAAK4I,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1B7I,IAAA,MAAG4I,SAAS,CAAC,WAAW,CAAI,CAAC,CAC1B,CAAC,cACN1I,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B7I,IAAA,OAAA6I,QAAA,CAAI,YAAU,CAAI,CAAC,cACnB7I,IAAA,QAAK4I,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3B7I,IAAA,QACE4I,SAAS,CAAC,eAAe,CACzBU,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAGT,SAAS,GAAI,CAAE,CAClC,aAAY,GAAGA,SAAS,GAAI,CACxB,CAAC,CACJ,CAAC,EACH,CAAC,EACH,CAAC,cAEN5I,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B7I,IAAA,QAAK4I,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1B7I,IAAA,MAAG4I,SAAS,CAAC,WAAW,CAAI,CAAC,CAC1B,CAAC,cACN1I,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B7I,IAAA,OAAA6I,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB7I,IAAA,QAAK4I,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BW,KAAK,CAAChH,IAAI,CAAC,CAAEI,MAAM,CAAE,CAAE,CAAC,CAAC,CAAC0B,GAAG,CAAC,CAACmF,CAAC,CAAEC,CAAC,gBAClC1J,IAAA,QAEE4I,SAAS,CAAE,YAAYc,CAAC,CAAG1D,IAAI,CAACC,IAAI,CAAC+C,YAAY,CAAG,EAAE,CAAC,CAAG,QAAQ,CAAG,EAAE,EAAG,EADrEU,CAED,CACP,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,cAENxJ,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B7I,IAAA,QAAK4I,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1B7I,IAAA,MAAG4I,SAAS,CAAC,YAAY,CAAI,CAAC,CAC3B,CAAC,cACN1I,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B7I,IAAA,OAAA6I,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB7I,IAAA,MAAA6I,QAAA,CAAIK,UAAU,CAAI,CAAC,EAChB,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAS,oBAAoB,CAAGA,CAAA,GAAM,CACjC,GAAIpJ,OAAO,CAACqC,MAAM,EAAI,CAAC,CAAE,MAAO,KAAI,CAEpC,mBACE1C,KAAA,QAAK0I,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B7I,IAAA,UAAO4J,OAAO,CAAC,eAAe,CAAAf,QAAA,CAAC,gBAAc,CAAO,CAAC,cACrD7I,IAAA,WACE2C,EAAE,CAAC,eAAe,CAClBkH,KAAK,CAAE,CAAApJ,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAEqC,SAAS,GAAI,EAAG,CACvCgH,QAAQ,CAAGC,CAAC,EAAKpC,kBAAkB,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAhB,QAAA,CAEnDtI,OAAO,CAAC+D,GAAG,CAAEC,MAAM,eAClBvE,IAAA,WAA+B6J,KAAK,CAAEtF,MAAM,CAACzB,SAAU,CAAA+F,QAAA,CACpDtE,MAAM,CAAC8E,WAAW,EADR9E,MAAM,CAACzB,SAEZ,CACT,CAAC,CACI,CAAC,EACN,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAmH,qBAAqB,CAAGA,CAAA,GAAM,CAClC,GAAI,CAACxJ,cAAc,CAAE,MAAO,KAAI,CAEhC,mBACEP,KAAA,QAAK0I,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpC3I,KAAA,QAAK0I,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B3I,KAAA,WACE0I,SAAS,CAAE,cAAc3H,SAAS,GAAK,QAAQ,CAAG,QAAQ,CAAG,EAAE,EAAG,CAClEiJ,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,QAAQ,CAAE,CAAA2H,QAAA,eAEtC7I,IAAA,MAAG4I,SAAS,CAAC,WAAW,CAAI,CAAC,kBAC/B,EAAQ,CAAC,cACT1I,KAAA,WACE0I,SAAS,CAAE,cAAc3H,SAAS,GAAK,WAAW,CAAG,QAAQ,CAAG,EAAE,EAAG,CACrEiJ,OAAO,CAAEA,CAAA,GAAMhJ,YAAY,CAAC,WAAW,CAAE,CAAA2H,QAAA,eAEzC7I,IAAA,MAAG4I,SAAS,CAAC,eAAe,CAAI,CAAC,qBACnC,EAAQ,CAAC,EACN,CAAC,cAEN5I,IAAA,QAAK4I,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzB5H,SAAS,GAAK,QAAQ,cACrBf,KAAA,QAAK0I,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B3I,KAAA,QAAK0I,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B7I,IAAA,OAAA6I,QAAA,CAAI,6BAA2B,CAAI,CAAC,cACpC3I,KAAA,QAAK0I,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B7I,IAAA,WACE4I,SAAS,CAAC,gBAAgB,CAC1BsB,OAAO,CAAEA,CAAA,GAAMlJ,gBAAgB,CAACqD,IAAI,EAAI2B,IAAI,CAACmE,GAAG,CAAC,CAAC,CAAE9F,IAAI,CAAG,CAAC,CAAC,CAAE,CAC/D+F,QAAQ,CAAE/I,YAAa,CAAAwH,QAAA,CACxB,GAED,CAAQ,CAAC,cACT7I,IAAA,UACEqK,IAAI,CAAC,QAAQ,CACbR,KAAK,CAAE9I,aAAc,CACrB+I,QAAQ,CAAGC,CAAC,EAAK/I,gBAAgB,CAACgF,IAAI,CAACmE,GAAG,CAAC,CAAC,CAAEnE,IAAI,CAACsE,GAAG,CAAC,GAAG,CAAElB,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,EAAI,CAAC,CAAC,CAAC,CAAE,CAC7FS,GAAG,CAAC,GAAG,CACPH,GAAG,CAAC,KAAK,CACTC,QAAQ,CAAE/I,YAAa,CACxB,CAAC,cACFrB,IAAA,WACE4I,SAAS,CAAC,gBAAgB,CAC1BsB,OAAO,CAAEA,CAAA,GAAMlJ,gBAAgB,CAACqD,IAAI,EAAI2B,IAAI,CAACsE,GAAG,CAAC,GAAG,CAAEjG,IAAI,CAAG,CAAC,CAAC,CAAE,CACjE+F,QAAQ,CAAE/I,YAAa,CAAAwH,QAAA,CACxB,GAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAEN7I,IAAA,WACE4I,SAAS,CAAC,8BAA8B,CACxCsB,OAAO,CAAEpC,cAAe,CACxBsC,QAAQ,CAAE/I,YAAa,CAAAwH,QAAA,CAEtBxH,YAAY,CAAG,eAAe,CAAG,cAAc,CAC1C,CAAC,EACN,CAAC,cAENnB,KAAA,QAAK0I,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC7I,IAAA,OAAA6I,QAAA,CAAI,mBAAiB,CAAI,CAAC,CACzBhI,iBAAiB,CAAC+B,MAAM,CAAG,CAAC,cAC3B5C,IAAA,OAAI4I,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC1BhI,iBAAiB,CAACyD,GAAG,CAAEgB,QAAQ,eAC9BpF,KAAA,OAA+B0I,SAAS,CAAC,eAAe,CAAAC,QAAA,eACtD3I,KAAA,QAAK0I,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B7I,IAAA,MAAG4I,SAAS,CAAC,YAAY,CAAI,CAAC,CAC7BL,cAAc,CAACjD,QAAQ,CAACF,IAAI,CAAC,EAC3B,CAAC,cACNlF,KAAA,QAAK0I,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B7I,IAAA,MAAG4I,SAAS,CAAC,WAAW,CAAI,CAAC,CAC5BtD,QAAQ,CAAC0B,MAAM,CAAC,GACnB,EAAK,CAAC,GARC1B,QAAQ,CAACC,WASd,CACL,CAAC,CACA,CAAC,cAELvF,IAAA,MAAG4I,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,iCAA+B,CAAG,CACvE,cACD7I,IAAA,CAACd,IAAI,EAAC0G,EAAE,CAAC,WAAW,CAACgD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,kBAEjD,CAAM,CAAC,EACJ,CACN,CACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAA0B,oBAAoB,CAAGA,CAAA,GAAM,CACjC,GAAI,CAAC9J,cAAc,CAAE,MAAO,KAAI,CAEhC,mBACEP,KAAA,QAAK0I,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnC7I,IAAA,OAAA6I,QAAA,CAAI,iBAAe,CAAI,CAAC,CAEvBlI,cAAc,CAACiC,MAAM,CAAG,CAAC,cACxB1C,KAAA,CAAAE,SAAA,EAAAyI,QAAA,eACE3I,KAAA,QAAK0I,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B3I,KAAA,QAAK0I,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnC7I,IAAA,QAAK4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,MAAI,CAAK,CAAC,cACtC7I,IAAA,QAAK4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,QAAM,CAAK,CAAC,cACxC7I,IAAA,QAAK4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,MAAI,CAAK,CAAC,EACnC,CAAC,CAELlI,cAAc,CAAC2D,GAAG,CAAEkG,OAAO,eAC1BtK,KAAA,QAA2B0I,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eACtD7I,IAAA,QAAK4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEN,cAAc,CAACiC,OAAO,CAACpF,IAAI,CAAC,CAAM,CAAC,cAChElF,KAAA,QAAK0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAE2B,OAAO,CAACxD,MAAM,CAAC,GAAC,EAAK,CAAC,cACnDhH,IAAA,QAAK4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE2B,OAAO,CAACnC,MAAM,CAAG,QAAQ,CAAG,WAAW,CAAM,CAAC,GAHnEmC,OAAO,CAACC,OAIb,CACN,CAAC,EACC,CAAC,cAENvK,KAAA,QAAK0I,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB7I,IAAA,WACE4I,SAAS,CAAC,YAAY,CACtBwB,QAAQ,CAAE3I,WAAW,GAAK,CAAE,CAC5ByI,OAAO,CAAEA,CAAA,GAAMxB,gBAAgB,CAACjH,WAAW,CAAG,CAAC,CAAE,CAAAoH,QAAA,CAClD,UAED,CAAQ,CAAC,cACT3I,KAAA,SAAM0I,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,OAAK,CAACpH,WAAW,CAAC,MAAI,CAACE,UAAU,EAAO,CAAC,cACrE3B,IAAA,WACE4I,SAAS,CAAC,YAAY,CACtBwB,QAAQ,CAAE3I,WAAW,GAAKE,UAAW,CACrCuI,OAAO,CAAEA,CAAA,GAAMxB,gBAAgB,CAACjH,WAAW,CAAG,CAAC,CAAE,CAAAoH,QAAA,CAClD,MAED,CAAQ,CAAC,EACN,CAAC,EACN,CAAC,cAEH7I,IAAA,MAAG4I,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,mCAAiC,CAAG,CACvE,cAED7I,IAAA,CAACd,IAAI,EAAC0G,EAAE,CAAC,UAAU,CAACgD,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,mBAAiB,CAAM,CAAC,EAClE,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAA6B,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAI,CAACjK,cAAc,EAAI,CAACoB,SAAS,CAAE,MAAO,KAAI,CAE9C,KAAM,CAAA8I,YAAY,CAAG,CACnBC,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,KAAK,CAC1BC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,QAAQ,CAAE,KACZ,CAAC,CACDC,KAAK,CAAE,CACLC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,qBACR,CACF,CAAC,CACDC,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,WAAW,CAAE,IAAI,CACjBL,KAAK,CAAE,CACLC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,iBACR,CACF,CACF,CACF,CAAC,CAED,mBACEjL,KAAA,QAAK0I,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB7I,IAAA,OAAA6I,QAAA,CAAI,kBAAgB,CAAI,CAAC,cAEzB7I,IAAA,QAAK4I,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9B7I,IAAA,CAACZ,IAAI,EAAC6C,IAAI,CAAEJ,SAAU,CAAC0J,OAAO,CAAEZ,YAAa,CAAE,CAAC,CAC7C,CAAC,EACH,CAAC,CAEV,CAAC,CAED,GAAIxJ,SAAS,CAAE,CACb,mBACEjB,KAAA,QAAK0I,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC7I,IAAA,QAAK4I,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvC5I,IAAA,MAAA6I,QAAA,CAAG,sBAAoB,CAAG,CAAC,EACxB,CAAC,CAEV,CAEA,GAAItH,KAAK,CAAE,CACT,mBACErB,KAAA,QAAK0I,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B7I,IAAA,MAAG4I,SAAS,CAAC,cAAc,CAAI,CAAC,cAChC5I,IAAA,OAAA6I,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7B7I,IAAA,MAAA6I,QAAA,CAAItH,KAAK,CAAI,CAAC,cACdvB,IAAA,WAAQ4I,SAAS,CAAC,iBAAiB,CAACsB,OAAO,CAAEA,CAAA,GAAMsB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE,CAAA7C,QAAA,CAAC,WAE7E,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA,mBACE3I,KAAA,QAAK0I,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClC3I,KAAA,QAAK0I,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B7I,IAAA,OAAA6I,QAAA,CAAI,WAAS,CAAI,CAAC,CACjBc,oBAAoB,CAAC,CAAC,EACpB,CAAC,cAENzJ,KAAA,QAAK0I,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B7I,IAAA,QAAK4I,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAEF,kBAAkB,CAAC,CAAC,CAAM,CAAC,cAC9D3I,IAAA,QAAK4I,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAEoB,qBAAqB,CAAC,CAAC,CAAM,CAAC,cACnEjK,IAAA,QAAK4I,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAE0B,oBAAoB,CAAC,CAAC,CAAM,CAAC,cACjEvK,IAAA,QAAK4I,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAE6B,kBAAkB,CAAC,CAAC,CAAM,CAAC,EAC1D,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAApK,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
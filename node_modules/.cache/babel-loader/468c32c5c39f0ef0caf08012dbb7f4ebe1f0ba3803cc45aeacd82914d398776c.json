{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart_Pet_Feeder/src/pages/Settings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [notificationPrefs, setNotificationPrefs] = useState({});\n  const [activeTab, setActiveTab] = useState('notifications');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false);\n  const [showTwoFactorSetup, setShowTwoFactorSetup] = useState(false);\n  const [twoFactorQRCode, setTwoFactorQRCode] = useState(null);\n  const [twoFactorSecret, setTwoFactorSecret] = useState(null);\n  const [twoFactorCode, setTwoFactorCode] = useState('');\n  const [sessions, setSessions] = useState([]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUserProfile();\n    fetchNotificationPreferences();\n    fetchSessions();\n  }, []);\n  const fetchUserProfile = async () => {\n    try {\n      setLoading(true);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data,\n        error\n      } = await supabase.from('profiles').select('*').eq('id', user.id).single();\n      if (error) throw error;\n      setUserProfile(data);\n      setTwoFactorEnabled(data.two_factor_enabled);\n    } catch (err) {\n      console.error('Error fetching user profile:', err);\n      setError(err.message || 'Failed to load user profile');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchNotificationPreferences = async () => {\n    try {\n      setLoading(true);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data,\n        error\n      } = await supabase.from('notification_preferences').select('*').eq('user_id', user.id).single();\n      if (error) throw error;\n      setNotificationPrefs(data);\n    } catch (err) {\n      console.error('Error fetching notification preferences:', err);\n      setError(err.message || 'Failed to load notification preferences');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchSessions = async () => {\n    try {\n      setLoading(true);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data,\n        error\n      } = await supabase.auth.getSessionList();\n      if (error) throw error;\n      setSessions(data);\n    } catch (err) {\n      console.error('Error fetching sessions:', err);\n      setError(err.message || 'Failed to load sessions');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateNotificationPreference = async (key, value) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        error\n      } = await supabase.from('notification_preferences').update({\n        [key]: value\n      }).eq('user_id', user.id);\n      if (error) throw error;\n      setNotificationPrefs(prev => ({\n        ...prev,\n        [key]: value\n      }));\n      setSuccess('Notification preferences updated successfully');\n    } catch (err) {\n      console.error('Error updating notification preferences:', err);\n      setError(err.message || 'Failed to update notification preferences');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChangePassword = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setError('New password and confirm password do not match');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) throw error;\n      setSuccess('Password updated successfully');\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n    } catch (err) {\n      console.error('Error changing password:', err);\n      setError(err.message || 'Failed to change password');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSetup2FA = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data,\n        error\n      } = await supabase.auth.generate2FASecret();\n      if (error) throw error;\n      setTwoFactorQRCode(data.qr_code);\n      setTwoFactorSecret(data.secret);\n      setShowTwoFactorSetup(true);\n    } catch (err) {\n      console.error('Error setting up 2FA:', err);\n      setError(err.message || 'Failed to set up 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEnable2FA = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        error\n      } = await supabase.auth.verify2FA({\n        code: twoFactorCode\n      });\n      if (error) throw error;\n      setTwoFactorEnabled(true);\n      setShowTwoFactorSetup(false);\n      setSuccess('Two-factor authentication enabled successfully');\n    } catch (err) {\n      console.error('Error enabling 2FA:', err);\n      setError(err.message || 'Failed to enable 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDisable2FA = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        error\n      } = await supabase.auth.disable2FA();\n      if (error) throw error;\n      setTwoFactorEnabled(false);\n      setSuccess('Two-factor authentication disabled successfully');\n    } catch (err) {\n      console.error('Error disabling 2FA:', err);\n      setError(err.message || 'Failed to disable 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogoutOtherSessions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        error\n      } = await supabase.auth.logoutOtherSessions();\n      if (error) throw error;\n\n      // Update sessions list\n      setSessions([sessions.find(s => s.current) || sessions[0]]);\n      setSuccess('All other sessions have been logged out successfully');\n    } catch (err) {\n      console.error('Error logging out other sessions:', err);\n      setError(err.message || 'Failed to log out other sessions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete account\n  const handleDeleteAccount = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      if (!showDeleteConfirm) {\n        setShowDeleteConfirm(true);\n        setLoading(false);\n        return;\n      }\n\n      // Delete all user data\n      if (!userProfile) return;\n\n      // Delete from database\n      const {\n        error: devicesError\n      } = await supabase.from('devices').delete().eq('user_id', userProfile.id);\n      if (devicesError) throw devicesError;\n      const {\n        error: petsError\n      } = await supabase.from('pets').delete().eq('user_id', userProfile.id);\n      if (petsError) throw petsError;\n      const {\n        error: schedulesError\n      } = await supabase.from('schedules').delete().eq('user_id', userProfile.id);\n      if (schedulesError) throw schedulesError;\n      const {\n        error: notifError\n      } = await supabase.from('notification_preferences').delete().eq('user_id', userProfile.id);\n      if (notifError) throw notifError;\n      const {\n        error: profileError\n      } = await supabase.from('profiles').delete().eq('id', userProfile.id);\n      if (profileError) throw profileError;\n\n      // Finally, delete the user authentication\n      const {\n        error\n      } = await supabase.auth.admin.deleteUser(userProfile.id);\n      if (error) throw error;\n\n      // Sign out\n      await supabase.auth.signOut();\n\n      // Navigate to home page\n      navigate('/', {\n        replace: true\n      });\n    } catch (err) {\n      console.error('Error deleting account:', err);\n      setError(err.message || 'Failed to delete account');\n      setShowDeleteConfirm(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  if (loading && !userProfile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading settings...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"error-close\",\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon-check-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"success-close\",\n        onClick: () => setSuccess(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `settings-tab ${activeTab === 'notifications' ? 'active' : ''}`,\n          onClick: () => setActiveTab('notifications'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-bell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `settings-tab ${activeTab === 'security' ? 'active' : ''}`,\n          onClick: () => setActiveTab('security'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Security\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `settings-tab ${activeTab === 'account' ? 'active' : ''}`,\n          onClick: () => setActiveTab('account'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-main\",\n        children: [activeTab === 'notifications' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Notification Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: \"Choose how and when you receive notifications about your pet feeder.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Notification Channels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-name\",\n                  children: \"Email Notifications\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-description\",\n                  children: \"Receive notifications about your pet feeder via email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: notificationPrefs.email_notifications,\n                  onChange: () => updateNotificationPreference('email_notifications', !notificationPrefs.email_notifications)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-name\",\n                  children: \"Push Notifications\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-description\",\n                  children: \"Receive in-browser push notifications\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: notificationPrefs.push_notifications,\n                  onChange: () => updateNotificationPreference('push_notifications', !notificationPrefs.push_notifications)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Notification Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-name\",\n                  children: \"Low Food Alert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-description\",\n                  children: \"Get notified when food level is running low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: notificationPrefs.low_food_alert,\n                  onChange: () => updateNotificationPreference('low_food_alert', !notificationPrefs.low_food_alert)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-name\",\n                  children: \"Feeding Complete Alert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-description\",\n                  children: \"Get notified when a feeding is completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: notificationPrefs.feeding_complete_alert,\n                  onChange: () => updateNotificationPreference('feeding_complete_alert', !notificationPrefs.feeding_complete_alert)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-name\",\n                  children: \"Schedule Reminders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-description\",\n                  children: \"Get reminded shortly before scheduled feedings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: notificationPrefs.schedule_reminder,\n                  onChange: () => updateNotificationPreference('schedule_reminder', !notificationPrefs.schedule_reminder)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), activeTab === 'security' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Security Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: \"Manage your account security settings and authentication methods.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleChangePassword,\n              className: \"security-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"current-password\",\n                  children: \"Current Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"current-password\",\n                  type: \"password\",\n                  value: currentPassword,\n                  onChange: e => setCurrentPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"new-password\",\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"new-password\",\n                  type: \"password\",\n                  value: newPassword,\n                  onChange: e => setNewPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"confirm-password\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"confirm-password\",\n                  type: \"password\",\n                  value: confirmPassword,\n                  onChange: e => setConfirmPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                disabled: loading,\n                children: \"Update Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Two-Factor Authentication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-name\",\n                  children: \"Two-Factor Authentication\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setting-description\",\n                  children: \"Add an extra layer of security to your account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this), twoFactorEnabled ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline\",\n                onClick: handleDisable2FA,\n                disabled: loading,\n                children: \"Disable 2FA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleSetup2FA,\n                disabled: loading,\n                children: \"Enable 2FA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this), showTwoFactorSetup && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twofa-setup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Set up Two-Factor Authentication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Scan the QR code with an authenticator app like Google Authenticator or Authy, then enter the 6-digit code to enable 2FA.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twofa-qr-container\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: twoFactorQRCode || '',\n                  alt: \"2FA QR Code\",\n                  className: \"twofa-qr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 21\n              }, this), twoFactorSecret && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twofa-secret\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Or enter this code manually:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: twoFactorSecret\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleEnable2FA,\n                className: \"twofa-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"twofa-code\",\n                    children: \"Verification Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"twofa-code\",\n                    type: \"text\",\n                    value: twoFactorCode,\n                    onChange: e => setTwoFactorCode(e.target.value),\n                    placeholder: \"Enter 6-digit code\",\n                    required: true,\n                    maxLength: 6,\n                    pattern: \"[0-9]{6}\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"twofa-buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-outline\",\n                    onClick: () => setShowTwoFactorSetup(false),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    disabled: loading || twoFactorCode.length !== 6,\n                    children: \"Verify & Enable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Active Sessions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sessions-list\",\n              children: sessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"session-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"session-name\",\n                    children: [session.browser, \" - \", session.os, session.current && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"current-badge\",\n                      children: \"Current\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"session-date\",\n                    children: [\"Active since: \", formatDate(session.created_at)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              onClick: handleLogoutOtherSessions,\n              disabled: loading || sessions.length <= 1,\n              children: \"Log Out Other Sessions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), activeTab === 'account' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Account Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: \"Manage your account preferences and data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Data Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"setting-description\",\n              children: \"Export all your data including device history, pet profiles, and account information.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              children: \"Export My Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group danger-zone\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Danger Zone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"setting-description danger-text\",\n              children: \"Permanently delete your account and all associated data. This action cannot be undone.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this), !showDeleteConfirm ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => setShowDeleteConfirm(true),\n              children: \"Delete Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete-confirm\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"confirm-text\",\n                children: \"Are you absolutely sure? This will permanently delete your account, all your devices, pets, and feeding history.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confirm-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline\",\n                  onClick: () => setShowDeleteConfirm(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: handleDeleteAccount,\n                  disabled: loading,\n                  children: \"Yes, Delete My Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"uK/zAGATYBrhtNyurPMLOqblnT8=\", false, function () {\n  return [useNavigate];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","Settings","_s","loading","setLoading","error","setError","success","setSuccess","userProfile","setUserProfile","notificationPrefs","setNotificationPrefs","activeTab","setActiveTab","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","twoFactorEnabled","setTwoFactorEnabled","showTwoFactorSetup","setShowTwoFactorSetup","twoFactorQRCode","setTwoFactorQRCode","twoFactorSecret","setTwoFactorSecret","twoFactorCode","setTwoFactorCode","sessions","setSessions","showDeleteConfirm","setShowDeleteConfirm","navigate","fetchUserProfile","fetchNotificationPreferences","fetchSessions","data","user","auth","getUser","Error","from","select","eq","id","single","two_factor_enabled","err","console","message","getSessionList","updateNotificationPreference","key","value","update","prev","handleChangePassword","e","preventDefault","updateUser","password","handleSetup2FA","generate2FASecret","qr_code","secret","handleEnable2FA","verify2FA","code","handleDisable2FA","disable2FA","handleLogoutOtherSessions","logoutOtherSessions","find","s","current","handleDeleteAccount","devicesError","delete","petsError","schedulesError","notifError","profileError","admin","deleteUser","signOut","replace","formatDate","dateString","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","email_notifications","onChange","push_notifications","low_food_alert","feeding_complete_alert","schedule_reminder","onSubmit","htmlFor","target","required","disabled","src","alt","placeholder","maxLength","pattern","length","map","session","index","browser","os","created_at","_c","$RefreshReg$"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/Settings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Settings.css';\n\nconst Settings: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [userProfile, setUserProfile] = useState<any>(null);\n  const [notificationPrefs, setNotificationPrefs] = useState<any>({});\n  const [activeTab, setActiveTab] = useState<string>('notifications');\n  const [currentPassword, setCurrentPassword] = useState<string>('');\n  const [newPassword, setNewPassword] = useState<string>('');\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState<boolean>(false);\n  const [showTwoFactorSetup, setShowTwoFactorSetup] = useState<boolean>(false);\n  const [twoFactorQRCode, setTwoFactorQRCode] = useState<string | null>(null);\n  const [twoFactorSecret, setTwoFactorSecret] = useState<string | null>(null);\n  const [twoFactorCode, setTwoFactorCode] = useState<string>('');\n  const [sessions, setSessions] = useState<any[]>([]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchUserProfile();\n    fetchNotificationPreferences();\n    fetchSessions();\n  }, []);\n\n  const fetchUserProfile = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n        \n      if (error) throw error;\n      \n      setUserProfile(data);\n      setTwoFactorEnabled(data.two_factor_enabled);\n    } catch (err: any) {\n      console.error('Error fetching user profile:', err);\n      setError(err.message || 'Failed to load user profile');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchNotificationPreferences = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase\n        .from('notification_preferences')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n        \n      if (error) throw error;\n      \n      setNotificationPrefs(data);\n    } catch (err: any) {\n      console.error('Error fetching notification preferences:', err);\n      setError(err.message || 'Failed to load notification preferences');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchSessions = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase.auth.getSessionList();\n      if (error) throw error;\n      \n      setSessions(data);\n    } catch (err: any) {\n      console.error('Error fetching sessions:', err);\n      setError(err.message || 'Failed to load sessions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateNotificationPreference = async (key: string, value: boolean) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase\n        .from('notification_preferences')\n        .update({ [key]: value })\n        .eq('user_id', user.id);\n        \n      if (error) throw error;\n      \n      setNotificationPrefs((prev: any) => ({ ...prev, [key]: value }));\n      setSuccess('Notification preferences updated successfully');\n    } catch (err: any) {\n      console.error('Error updating notification preferences:', err);\n      setError(err.message || 'Failed to update notification preferences');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChangePassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (newPassword !== confirmPassword) {\n      setError('New password and confirm password do not match');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      \n      if (error) throw error;\n      \n      setSuccess('Password updated successfully');\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n    } catch (err: any) {\n      console.error('Error changing password:', err);\n      setError(err.message || 'Failed to change password');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSetup2FA = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase.auth.generate2FASecret();\n      if (error) throw error;\n      \n      setTwoFactorQRCode(data.qr_code);\n      setTwoFactorSecret(data.secret);\n      setShowTwoFactorSetup(true);\n    } catch (err: any) {\n      console.error('Error setting up 2FA:', err);\n      setError(err.message || 'Failed to set up 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEnable2FA = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase.auth.verify2FA({\n        code: twoFactorCode\n      });\n      \n      if (error) throw error;\n      \n      setTwoFactorEnabled(true);\n      setShowTwoFactorSetup(false);\n      setSuccess('Two-factor authentication enabled successfully');\n    } catch (err: any) {\n      console.error('Error enabling 2FA:', err);\n      setError(err.message || 'Failed to enable 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDisable2FA = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase.auth.disable2FA();\n      if (error) throw error;\n      \n      setTwoFactorEnabled(false);\n      setSuccess('Two-factor authentication disabled successfully');\n    } catch (err: any) {\n      console.error('Error disabling 2FA:', err);\n      setError(err.message || 'Failed to disable 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLogoutOtherSessions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase.auth.logoutOtherSessions();\n      if (error) throw error;\n      \n      // Update sessions list\n      setSessions([sessions.find(s => s.current) || sessions[0]]);\n      \n      setSuccess('All other sessions have been logged out successfully');\n    } catch (err: any) {\n      console.error('Error logging out other sessions:', err);\n      setError(err.message || 'Failed to log out other sessions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete account\n  const handleDeleteAccount = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      if (!showDeleteConfirm) {\n        setShowDeleteConfirm(true);\n        setLoading(false);\n        return;\n      }\n      \n      // Delete all user data\n      if (!userProfile) return;\n      \n      // Delete from database\n      const { error: devicesError } = await supabase\n        .from('devices')\n        .delete()\n        .eq('user_id', userProfile.id);\n        \n      if (devicesError) throw devicesError;\n      \n      const { error: petsError } = await supabase\n        .from('pets')\n        .delete()\n        .eq('user_id', userProfile.id);\n        \n      if (petsError) throw petsError;\n      \n      const { error: schedulesError } = await supabase\n        .from('schedules')\n        .delete()\n        .eq('user_id', userProfile.id);\n        \n      if (schedulesError) throw schedulesError;\n      \n      const { error: notifError } = await supabase\n        .from('notification_preferences')\n        .delete()\n        .eq('user_id', userProfile.id);\n        \n      if (notifError) throw notifError;\n      \n      const { error: profileError } = await supabase\n        .from('profiles')\n        .delete()\n        .eq('id', userProfile.id);\n        \n      if (profileError) throw profileError;\n      \n      // Finally, delete the user authentication\n      const { error } = await supabase.auth.admin.deleteUser(userProfile.id);\n      if (error) throw error;\n      \n      // Sign out\n      await supabase.auth.signOut();\n      \n      // Navigate to home page\n      navigate('/', { replace: true });\n    } catch (err: any) {\n      console.error('Error deleting account:', err);\n      setError(err.message || 'Failed to delete account');\n      setShowDeleteConfirm(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading && !userProfile) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading settings...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-container\">\n      <div className=\"settings-header\">\n        <h1>Settings</h1>\n      </div>\n      \n      {error && (\n        <div className=\"error-alert\">\n          <i className=\"icon-warning\"></i>\n          <p>{error}</p>\n          <button \n            className=\"error-close\" \n            onClick={() => setError(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"success-alert\">\n          <i className=\"icon-check-circle\"></i>\n          <p>{success}</p>\n          <button \n            className=\"success-close\" \n            onClick={() => setSuccess(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      <div className=\"settings-content\">\n        <div className=\"settings-sidebar\">\n          <button \n            className={`settings-tab ${activeTab === 'notifications' ? 'active' : ''}`}\n            onClick={() => setActiveTab('notifications')}\n          >\n            <i className=\"icon-bell\"></i>\n            <span>Notifications</span>\n          </button>\n          <button \n            className={`settings-tab ${activeTab === 'security' ? 'active' : ''}`}\n            onClick={() => setActiveTab('security')}\n          >\n            <i className=\"icon-lock\"></i>\n            <span>Security</span>\n          </button>\n          <button \n            className={`settings-tab ${activeTab === 'account' ? 'active' : ''}`}\n            onClick={() => setActiveTab('account')}\n          >\n            <i className=\"icon-user\"></i>\n            <span>Account</span>\n          </button>\n        </div>\n        \n        <div className=\"settings-main\">\n          {activeTab === 'notifications' && (\n            <div className=\"settings-section\">\n              <h2>Notification Preferences</h2>\n              <p className=\"section-description\">\n                Choose how and when you receive notifications about your pet feeder.\n              </p>\n              \n              <div className=\"settings-group\">\n                <h3>Notification Channels</h3>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Email Notifications</div>\n                    <div className=\"setting-description\">Receive notifications about your pet feeder via email</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.email_notifications}\n                      onChange={() => updateNotificationPreference('email_notifications', !notificationPrefs.email_notifications)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Push Notifications</div>\n                    <div className=\"setting-description\">Receive in-browser push notifications</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.push_notifications}\n                      onChange={() => updateNotificationPreference('push_notifications', !notificationPrefs.push_notifications)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n              </div>\n              \n              <div className=\"settings-group\">\n                <h3>Notification Types</h3>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Low Food Alert</div>\n                    <div className=\"setting-description\">Get notified when food level is running low</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.low_food_alert}\n                      onChange={() => updateNotificationPreference('low_food_alert', !notificationPrefs.low_food_alert)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Feeding Complete Alert</div>\n                    <div className=\"setting-description\">Get notified when a feeding is completed</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.feeding_complete_alert}\n                      onChange={() => updateNotificationPreference('feeding_complete_alert', !notificationPrefs.feeding_complete_alert)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Schedule Reminders</div>\n                    <div className=\"setting-description\">Get reminded shortly before scheduled feedings</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.schedule_reminder}\n                      onChange={() => updateNotificationPreference('schedule_reminder', !notificationPrefs.schedule_reminder)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {activeTab === 'security' && (\n            <div className=\"settings-section\">\n              <h2>Security Settings</h2>\n              <p className=\"section-description\">\n                Manage your account security settings and authentication methods.\n              </p>\n              \n              <div className=\"settings-group\">\n                <h3>Change Password</h3>\n                <form onSubmit={handleChangePassword} className=\"security-form\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"current-password\">Current Password</label>\n                    <input\n                      id=\"current-password\"\n                      type=\"password\"\n                      value={currentPassword}\n                      onChange={(e) => setCurrentPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"new-password\">New Password</label>\n                    <input\n                      id=\"new-password\"\n                      type=\"password\"\n                      value={newPassword}\n                      onChange={(e) => setNewPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"confirm-password\">Confirm Password</label>\n                    <input\n                      id=\"confirm-password\"\n                      type=\"password\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  \n                  <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    disabled={loading}\n                  >\n                    Update Password\n                  </button>\n                </form>\n              </div>\n              \n              <div className=\"settings-group\">\n                <h3>Two-Factor Authentication</h3>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Two-Factor Authentication</div>\n                    <div className=\"setting-description\">Add an extra layer of security to your account</div>\n                  </div>\n                  \n                  {twoFactorEnabled ? (\n                    <button \n                      className=\"btn btn-outline\"\n                      onClick={handleDisable2FA}\n                      disabled={loading}\n                    >\n                      Disable 2FA\n                    </button>\n                  ) : (\n                    <button \n                      className=\"btn btn-primary\"\n                      onClick={handleSetup2FA}\n                      disabled={loading}\n                    >\n                      Enable 2FA\n                    </button>\n                  )}\n                </div>\n                \n                {showTwoFactorSetup && (\n                  <div className=\"twofa-setup\">\n                    <h4>Set up Two-Factor Authentication</h4>\n                    <p>\n                      Scan the QR code with an authenticator app like Google Authenticator or Authy, \n                      then enter the 6-digit code to enable 2FA.\n                    </p>\n                    \n                    <div className=\"twofa-qr-container\">\n                      <img \n                        src={twoFactorQRCode || ''}\n                        alt=\"2FA QR Code\"\n                        className=\"twofa-qr\"\n                      />\n                    </div>\n                    \n                    {twoFactorSecret && (\n                      <div className=\"twofa-secret\">\n                        <p>Or enter this code manually:</p>\n                        <code>{twoFactorSecret}</code>\n                      </div>\n                    )}\n                    \n                    <form onSubmit={handleEnable2FA} className=\"twofa-form\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"twofa-code\">Verification Code</label>\n                        <input\n                          id=\"twofa-code\"\n                          type=\"text\"\n                          value={twoFactorCode}\n                          onChange={(e) => setTwoFactorCode(e.target.value)}\n                          placeholder=\"Enter 6-digit code\"\n                          required\n                          maxLength={6}\n                          pattern=\"[0-9]{6}\"\n                        />\n                      </div>\n                      \n                      <div className=\"twofa-buttons\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-outline\"\n                          onClick={() => setShowTwoFactorSetup(false)}\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          disabled={loading || twoFactorCode.length !== 6}\n                        >\n                          Verify & Enable\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"settings-group\">\n                <h3>Active Sessions</h3>\n                \n                <div className=\"sessions-list\">\n                  {sessions.map((session, index) => (\n                    <div key={index} className=\"session-item\">\n                      <div className=\"session-info\">\n                        <div className=\"session-name\">\n                          {session.browser} - {session.os}\n                          {session.current && <span className=\"current-badge\">Current</span>}\n                        </div>\n                        <div className=\"session-date\">\n                          Active since: {formatDate(session.created_at)}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                \n                <button \n                  className=\"btn btn-outline\"\n                  onClick={handleLogoutOtherSessions}\n                  disabled={loading || sessions.length <= 1}\n                >\n                  Log Out Other Sessions\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {activeTab === 'account' && (\n            <div className=\"settings-section\">\n              <h2>Account Settings</h2>\n              <p className=\"section-description\">\n                Manage your account preferences and data.\n              </p>\n              \n              <div className=\"settings-group\">\n                <h3>Data Export</h3>\n                <p className=\"setting-description\">\n                  Export all your data including device history, pet profiles, and account information.\n                </p>\n                <button className=\"btn btn-outline\">\n                  Export My Data\n                </button>\n              </div>\n              \n              <div className=\"settings-group danger-zone\">\n                <h3>Danger Zone</h3>\n                <p className=\"setting-description danger-text\">\n                  Permanently delete your account and all associated data. This action cannot be undone.\n                </p>\n                \n                {!showDeleteConfirm ? (\n                  <button \n                    className=\"btn btn-danger\"\n                    onClick={() => setShowDeleteConfirm(true)}\n                  >\n                    Delete Account\n                  </button>\n                ) : (\n                  <div className=\"delete-confirm\">\n                    <p className=\"confirm-text\">\n                      Are you absolutely sure? This will permanently delete your account, \n                      all your devices, pets, and feeding history.\n                    </p>\n                    <div className=\"confirm-buttons\">\n                      <button \n                        className=\"btn btn-outline\"\n                        onClick={() => setShowDeleteConfirm(false)}\n                      >\n                        Cancel\n                      </button>\n                      <button \n                        className=\"btn btn-danger\"\n                        onClick={handleDeleteAccount}\n                        disabled={loading}\n                      >\n                        Yes, Delete My Account\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAC3D,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAM,IAAI,CAAC;EACzD,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CAAM,CAAC,CAAC,CAAC;EACnE,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAS,eAAe,CAAC;EACnE,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAS,EAAE,CAAC;EAClE,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAS,EAAE,CAAC;EAClE,MAAM,CAAC0B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAU,KAAK,CAAC;EACxE,MAAM,CAAC4B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7B,QAAQ,CAAU,KAAK,CAAC;EAC5E,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAACgC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjC,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAQ,EAAE,CAAC;EACnD,MAAM,CAACsC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvC,QAAQ,CAAU,KAAK,CAAC;EAC1E,MAAMwC,QAAQ,GAAGrC,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdwC,gBAAgB,CAAC,CAAC;IAClBC,4BAA4B,CAAC,CAAC;IAC9BC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFhC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM;QAAEmC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEJ,IAAI;QAAElC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CACnC+C,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEN,IAAI,CAACO,EAAE,CAAC,CACjBC,MAAM,CAAC,CAAC;MAEX,IAAI3C,KAAK,EAAE,MAAMA,KAAK;MAEtBK,cAAc,CAAC6B,IAAI,CAAC;MACpBjB,mBAAmB,CAACiB,IAAI,CAACU,kBAAkB,CAAC;IAC9C,CAAC,CAAC,OAAOC,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,8BAA8B,EAAE6C,GAAG,CAAC;MAClD5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,6BAA6B,CAAC;IACxD,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiC,4BAA4B,GAAG,MAAAA,CAAA,KAAY;IAC/C,IAAI;MACFjC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM;QAAEmC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEJ,IAAI;QAAElC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CACnC+C,IAAI,CAAC,0BAA0B,CAAC,CAChCC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,EAAEN,IAAI,CAACO,EAAE,CAAC,CACtBC,MAAM,CAAC,CAAC;MAEX,IAAI3C,KAAK,EAAE,MAAMA,KAAK;MAEtBO,oBAAoB,CAAC2B,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOW,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,0CAA0C,EAAE6C,GAAG,CAAC;MAC9D5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,yCAAyC,CAAC;IACpE,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFlC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM;QAAEmC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEJ,IAAI;QAAElC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAAC4C,IAAI,CAACY,cAAc,CAAC,CAAC;MAC5D,IAAIhD,KAAK,EAAE,MAAMA,KAAK;MAEtB2B,WAAW,CAACO,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOW,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,0BAA0B,EAAE6C,GAAG,CAAC;MAC9C5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,yBAAyB,CAAC;IACpD,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkD,4BAA4B,GAAG,MAAAA,CAAOC,GAAW,EAAEC,KAAc,KAAK;IAC1E,IAAI;MACFpD,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM;QAAEiC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEtC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAC7B+C,IAAI,CAAC,0BAA0B,CAAC,CAChCa,MAAM,CAAC;QAAE,CAACF,GAAG,GAAGC;MAAM,CAAC,CAAC,CACxBV,EAAE,CAAC,SAAS,EAAEN,IAAI,CAACO,EAAE,CAAC;MAEzB,IAAI1C,KAAK,EAAE,MAAMA,KAAK;MAEtBO,oBAAoB,CAAE8C,IAAS,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACH,GAAG,GAAGC;MAAM,CAAC,CAAC,CAAC;MAChEhD,UAAU,CAAC,+CAA+C,CAAC;IAC7D,CAAC,CAAC,OAAO0C,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,0CAA0C,EAAE6C,GAAG,CAAC;MAC9D5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,2CAA2C,CAAC;IACtE,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMuD,oBAAoB,GAAG,MAAOC,CAAkB,IAAK;IACzDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI5C,WAAW,KAAKE,eAAe,EAAE;MACnCb,QAAQ,CAAC,gDAAgD,CAAC;MAC1D;IACF;IAEA,IAAI;MACFF,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM;QAAEiC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEtC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAAC4C,IAAI,CAACqB,UAAU,CAAC;QAC/CC,QAAQ,EAAE9C;MACZ,CAAC,CAAC;MAEF,IAAIZ,KAAK,EAAE,MAAMA,KAAK;MAEtBG,UAAU,CAAC,+BAA+B,CAAC;MAC3CQ,kBAAkB,CAAC,EAAE,CAAC;MACtBE,cAAc,CAAC,EAAE,CAAC;MAClBE,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC,OAAO8B,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,0BAA0B,EAAE6C,GAAG,CAAC;MAC9C5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,2BAA2B,CAAC;IACtD,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4D,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF5D,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM;QAAEiC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEJ,IAAI;QAAElC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAAC4C,IAAI,CAACwB,iBAAiB,CAAC,CAAC;MAC/D,IAAI5D,KAAK,EAAE,MAAMA,KAAK;MAEtBqB,kBAAkB,CAACa,IAAI,CAAC2B,OAAO,CAAC;MAChCtC,kBAAkB,CAACW,IAAI,CAAC4B,MAAM,CAAC;MAC/B3C,qBAAqB,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAO0B,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,uBAAuB,EAAE6C,GAAG,CAAC;MAC3C5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,sBAAsB,CAAC;IACjD,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMgE,eAAe,GAAG,MAAOR,CAAkB,IAAK;IACpDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACFzD,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM;QAAEiC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEtC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAAC4C,IAAI,CAAC4B,SAAS,CAAC;QAC9CC,IAAI,EAAEzC;MACR,CAAC,CAAC;MAEF,IAAIxB,KAAK,EAAE,MAAMA,KAAK;MAEtBiB,mBAAmB,CAAC,IAAI,CAAC;MACzBE,qBAAqB,CAAC,KAAK,CAAC;MAC5BhB,UAAU,CAAC,gDAAgD,CAAC;IAC9D,CAAC,CAAC,OAAO0C,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,qBAAqB,EAAE6C,GAAG,CAAC;MACzC5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,sBAAsB,CAAC;IACjD,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmE,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFnE,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM;QAAEiC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEtC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAAC4C,IAAI,CAAC+B,UAAU,CAAC,CAAC;MAClD,IAAInE,KAAK,EAAE,MAAMA,KAAK;MAEtBiB,mBAAmB,CAAC,KAAK,CAAC;MAC1Bd,UAAU,CAAC,iDAAiD,CAAC;IAC/D,CAAC,CAAC,OAAO0C,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,sBAAsB,EAAE6C,GAAG,CAAC;MAC1C5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,uBAAuB,CAAC;IAClD,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMqE,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC5C,IAAI;MACFrE,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM;QAAEiC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAM3C,QAAQ,CAAC4C,IAAI,CAACC,OAAO,CAAC,CAAC;MACxD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAEpD,MAAM;QAAEtC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAAC4C,IAAI,CAACiC,mBAAmB,CAAC,CAAC;MAC3D,IAAIrE,KAAK,EAAE,MAAMA,KAAK;;MAEtB;MACA2B,WAAW,CAAC,CAACD,QAAQ,CAAC4C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,IAAI9C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MAE3DvB,UAAU,CAAC,sDAAsD,CAAC;IACpE,CAAC,CAAC,OAAO0C,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,mCAAmC,EAAE6C,GAAG,CAAC;MACvD5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,kCAAkC,CAAC;IAC7D,CAAC,SAAS;MACRhD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM0E,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF1E,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI,CAAC2B,iBAAiB,EAAE;QACtBC,oBAAoB,CAAC,IAAI,CAAC;QAC1B9B,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;;MAEA;MACA,IAAI,CAACK,WAAW,EAAE;;MAElB;MACA,MAAM;QAAEJ,KAAK,EAAE0E;MAAa,CAAC,GAAG,MAAMlF,QAAQ,CAC3C+C,IAAI,CAAC,SAAS,CAAC,CACfoC,MAAM,CAAC,CAAC,CACRlC,EAAE,CAAC,SAAS,EAAErC,WAAW,CAACsC,EAAE,CAAC;MAEhC,IAAIgC,YAAY,EAAE,MAAMA,YAAY;MAEpC,MAAM;QAAE1E,KAAK,EAAE4E;MAAU,CAAC,GAAG,MAAMpF,QAAQ,CACxC+C,IAAI,CAAC,MAAM,CAAC,CACZoC,MAAM,CAAC,CAAC,CACRlC,EAAE,CAAC,SAAS,EAAErC,WAAW,CAACsC,EAAE,CAAC;MAEhC,IAAIkC,SAAS,EAAE,MAAMA,SAAS;MAE9B,MAAM;QAAE5E,KAAK,EAAE6E;MAAe,CAAC,GAAG,MAAMrF,QAAQ,CAC7C+C,IAAI,CAAC,WAAW,CAAC,CACjBoC,MAAM,CAAC,CAAC,CACRlC,EAAE,CAAC,SAAS,EAAErC,WAAW,CAACsC,EAAE,CAAC;MAEhC,IAAImC,cAAc,EAAE,MAAMA,cAAc;MAExC,MAAM;QAAE7E,KAAK,EAAE8E;MAAW,CAAC,GAAG,MAAMtF,QAAQ,CACzC+C,IAAI,CAAC,0BAA0B,CAAC,CAChCoC,MAAM,CAAC,CAAC,CACRlC,EAAE,CAAC,SAAS,EAAErC,WAAW,CAACsC,EAAE,CAAC;MAEhC,IAAIoC,UAAU,EAAE,MAAMA,UAAU;MAEhC,MAAM;QAAE9E,KAAK,EAAE+E;MAAa,CAAC,GAAG,MAAMvF,QAAQ,CAC3C+C,IAAI,CAAC,UAAU,CAAC,CAChBoC,MAAM,CAAC,CAAC,CACRlC,EAAE,CAAC,IAAI,EAAErC,WAAW,CAACsC,EAAE,CAAC;MAE3B,IAAIqC,YAAY,EAAE,MAAMA,YAAY;;MAEpC;MACA,MAAM;QAAE/E;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAAC4C,IAAI,CAAC4C,KAAK,CAACC,UAAU,CAAC7E,WAAW,CAACsC,EAAE,CAAC;MACtE,IAAI1C,KAAK,EAAE,MAAMA,KAAK;;MAEtB;MACA,MAAMR,QAAQ,CAAC4C,IAAI,CAAC8C,OAAO,CAAC,CAAC;;MAE7B;MACApD,QAAQ,CAAC,GAAG,EAAE;QAAEqD,OAAO,EAAE;MAAK,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOtC,GAAQ,EAAE;MACjBC,OAAO,CAAC9C,KAAK,CAAC,yBAAyB,EAAE6C,GAAG,CAAC;MAC7C5C,QAAQ,CAAC4C,GAAG,CAACE,OAAO,IAAI,0BAA0B,CAAC;MACnDlB,oBAAoB,CAAC,KAAK,CAAC;IAC7B,CAAC,SAAS;MACR9B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMqF,UAAU,GAAIC,UAAkB,IAAK;IACzC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,cAAc,CAAC,CAAC;EAC9C,CAAC;EAED,IAAIzF,OAAO,IAAI,CAACM,WAAW,EAAE;IAC3B,oBACET,OAAA;MAAK6F,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC9F,OAAA;QAAK6F,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvClG,OAAA;QAAA8F,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAEV;EAEA,oBACElG,OAAA;IAAK6F,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC9F,OAAA;MAAK6F,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B9F,OAAA;QAAA8F,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EAEL7F,KAAK,iBACJL,OAAA;MAAK6F,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9F,OAAA;QAAG6F,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChClG,OAAA;QAAA8F,QAAA,EAAIzF;MAAK;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdlG,OAAA;QACE6F,SAAS,EAAC,aAAa;QACvBM,OAAO,EAAEA,CAAA,KAAM7F,QAAQ,CAAC,IAAI,CAAE;QAAAwF,QAAA,EAC/B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEA3F,OAAO,iBACNP,OAAA;MAAK6F,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B9F,OAAA;QAAG6F,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrClG,OAAA;QAAA8F,QAAA,EAAIvF;MAAO;QAAAwF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBlG,OAAA;QACE6F,SAAS,EAAC,eAAe;QACzBM,OAAO,EAAEA,CAAA,KAAM3F,UAAU,CAAC,IAAI,CAAE;QAAAsF,QAAA,EACjC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAEDlG,OAAA;MAAK6F,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B9F,OAAA;QAAK6F,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B9F,OAAA;UACE6F,SAAS,EAAE,gBAAgBhF,SAAS,KAAK,eAAe,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC3EsF,OAAO,EAAEA,CAAA,KAAMrF,YAAY,CAAC,eAAe,CAAE;UAAAgF,QAAA,gBAE7C9F,OAAA;YAAG6F,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BlG,OAAA;YAAA8F,QAAA,EAAM;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACTlG,OAAA;UACE6F,SAAS,EAAE,gBAAgBhF,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;UACtEsF,OAAO,EAAEA,CAAA,KAAMrF,YAAY,CAAC,UAAU,CAAE;UAAAgF,QAAA,gBAExC9F,OAAA;YAAG6F,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BlG,OAAA;YAAA8F,QAAA,EAAM;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACTlG,OAAA;UACE6F,SAAS,EAAE,gBAAgBhF,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;UACrEsF,OAAO,EAAEA,CAAA,KAAMrF,YAAY,CAAC,SAAS,CAAE;UAAAgF,QAAA,gBAEvC9F,OAAA;YAAG6F,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BlG,OAAA;YAAA8F,QAAA,EAAM;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENlG,OAAA;QAAK6F,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3BjF,SAAS,KAAK,eAAe,iBAC5Bb,OAAA;UAAK6F,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B9F,OAAA;YAAA8F,QAAA,EAAI;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjClG,OAAA;YAAG6F,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAEnC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJlG,OAAA;YAAK6F,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9F,OAAA;cAAA8F,QAAA,EAAI;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAE9BlG,OAAA;cAAK6F,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9F,OAAA;gBAAK6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B9F,OAAA;kBAAK6F,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAmB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvDlG,OAAA;kBAAK6F,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EAAC;gBAAqD;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7F,CAAC,eACNlG,OAAA;gBAAO6F,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACvB9F,OAAA;kBACEoG,IAAI,EAAC,UAAU;kBACfC,OAAO,EAAE1F,iBAAiB,CAAC2F,mBAAoB;kBAC/CC,QAAQ,EAAEA,CAAA,KAAMjD,4BAA4B,CAAC,qBAAqB,EAAE,CAAC3C,iBAAiB,CAAC2F,mBAAmB;gBAAE;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7G,CAAC,eACFlG,OAAA;kBAAM6F,SAAS,EAAC;gBAAQ;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENlG,OAAA;cAAK6F,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9F,OAAA;gBAAK6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B9F,OAAA;kBAAK6F,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtDlG,OAAA;kBAAK6F,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EAAC;gBAAqC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7E,CAAC,eACNlG,OAAA;gBAAO6F,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACvB9F,OAAA;kBACEoG,IAAI,EAAC,UAAU;kBACfC,OAAO,EAAE1F,iBAAiB,CAAC6F,kBAAmB;kBAC9CD,QAAQ,EAAEA,CAAA,KAAMjD,4BAA4B,CAAC,oBAAoB,EAAE,CAAC3C,iBAAiB,CAAC6F,kBAAkB;gBAAE;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3G,CAAC,eACFlG,OAAA;kBAAM6F,SAAS,EAAC;gBAAQ;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENlG,OAAA;YAAK6F,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9F,OAAA;cAAA8F,QAAA,EAAI;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAE3BlG,OAAA;cAAK6F,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9F,OAAA;gBAAK6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B9F,OAAA;kBAAK6F,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAClDlG,OAAA;kBAAK6F,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EAAC;gBAA2C;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnF,CAAC,eACNlG,OAAA;gBAAO6F,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACvB9F,OAAA;kBACEoG,IAAI,EAAC,UAAU;kBACfC,OAAO,EAAE1F,iBAAiB,CAAC8F,cAAe;kBAC1CF,QAAQ,EAAEA,CAAA,KAAMjD,4BAA4B,CAAC,gBAAgB,EAAE,CAAC3C,iBAAiB,CAAC8F,cAAc;gBAAE;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnG,CAAC,eACFlG,OAAA;kBAAM6F,SAAS,EAAC;gBAAQ;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENlG,OAAA;cAAK6F,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9F,OAAA;gBAAK6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B9F,OAAA;kBAAK6F,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAsB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1DlG,OAAA;kBAAK6F,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EAAC;gBAAwC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChF,CAAC,eACNlG,OAAA;gBAAO6F,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACvB9F,OAAA;kBACEoG,IAAI,EAAC,UAAU;kBACfC,OAAO,EAAE1F,iBAAiB,CAAC+F,sBAAuB;kBAClDH,QAAQ,EAAEA,CAAA,KAAMjD,4BAA4B,CAAC,wBAAwB,EAAE,CAAC3C,iBAAiB,CAAC+F,sBAAsB;gBAAE;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnH,CAAC,eACFlG,OAAA;kBAAM6F,SAAS,EAAC;gBAAQ;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENlG,OAAA;cAAK6F,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9F,OAAA;gBAAK6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B9F,OAAA;kBAAK6F,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtDlG,OAAA;kBAAK6F,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EAAC;gBAA8C;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtF,CAAC,eACNlG,OAAA;gBAAO6F,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACvB9F,OAAA;kBACEoG,IAAI,EAAC,UAAU;kBACfC,OAAO,EAAE1F,iBAAiB,CAACgG,iBAAkB;kBAC7CJ,QAAQ,EAAEA,CAAA,KAAMjD,4BAA4B,CAAC,mBAAmB,EAAE,CAAC3C,iBAAiB,CAACgG,iBAAiB;gBAAE;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzG,CAAC,eACFlG,OAAA;kBAAM6F,SAAS,EAAC;gBAAQ;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEArF,SAAS,KAAK,UAAU,iBACvBb,OAAA;UAAK6F,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B9F,OAAA;YAAA8F,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BlG,OAAA;YAAG6F,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAEnC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJlG,OAAA;YAAK6F,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9F,OAAA;cAAA8F,QAAA,EAAI;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBlG,OAAA;cAAM4G,QAAQ,EAAEjD,oBAAqB;cAACkC,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC7D9F,OAAA;gBAAK6F,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzB9F,OAAA;kBAAO6G,OAAO,EAAC,kBAAkB;kBAAAf,QAAA,EAAC;gBAAgB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC1DlG,OAAA;kBACE+C,EAAE,EAAC,kBAAkB;kBACrBqD,IAAI,EAAC,UAAU;kBACf5C,KAAK,EAAEzC,eAAgB;kBACvBwF,QAAQ,EAAG3C,CAAC,IAAK5C,kBAAkB,CAAC4C,CAAC,CAACkD,MAAM,CAACtD,KAAK,CAAE;kBACpDuD,QAAQ;gBAAA;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENlG,OAAA;gBAAK6F,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzB9F,OAAA;kBAAO6G,OAAO,EAAC,cAAc;kBAAAf,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClDlG,OAAA;kBACE+C,EAAE,EAAC,cAAc;kBACjBqD,IAAI,EAAC,UAAU;kBACf5C,KAAK,EAAEvC,WAAY;kBACnBsF,QAAQ,EAAG3C,CAAC,IAAK1C,cAAc,CAAC0C,CAAC,CAACkD,MAAM,CAACtD,KAAK,CAAE;kBAChDuD,QAAQ;gBAAA;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENlG,OAAA;gBAAK6F,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzB9F,OAAA;kBAAO6G,OAAO,EAAC,kBAAkB;kBAAAf,QAAA,EAAC;gBAAgB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC1DlG,OAAA;kBACE+C,EAAE,EAAC,kBAAkB;kBACrBqD,IAAI,EAAC,UAAU;kBACf5C,KAAK,EAAErC,eAAgB;kBACvBoF,QAAQ,EAAG3C,CAAC,IAAKxC,kBAAkB,CAACwC,CAAC,CAACkD,MAAM,CAACtD,KAAK,CAAE;kBACpDuD,QAAQ;gBAAA;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENlG,OAAA;gBACEoG,IAAI,EAAC,QAAQ;gBACbP,SAAS,EAAC,iBAAiB;gBAC3BmB,QAAQ,EAAE7G,OAAQ;gBAAA2F,QAAA,EACnB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAENlG,OAAA;YAAK6F,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9F,OAAA;cAAA8F,QAAA,EAAI;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAElClG,OAAA;cAAK6F,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9F,OAAA;gBAAK6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B9F,OAAA;kBAAK6F,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAyB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC7DlG,OAAA;kBAAK6F,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EAAC;gBAA8C;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtF,CAAC,EAEL7E,gBAAgB,gBACfrB,OAAA;gBACE6F,SAAS,EAAC,iBAAiB;gBAC3BM,OAAO,EAAE5B,gBAAiB;gBAC1ByC,QAAQ,EAAE7G,OAAQ;gBAAA2F,QAAA,EACnB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,gBAETlG,OAAA;gBACE6F,SAAS,EAAC,iBAAiB;gBAC3BM,OAAO,EAAEnC,cAAe;gBACxBgD,QAAQ,EAAE7G,OAAQ;gBAAA2F,QAAA,EACnB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EAEL3E,kBAAkB,iBACjBvB,OAAA;cAAK6F,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B9F,OAAA;gBAAA8F,QAAA,EAAI;cAAgC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzClG,OAAA;gBAAA8F,QAAA,EAAG;cAGH;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eAEJlG,OAAA;gBAAK6F,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,eACjC9F,OAAA;kBACEiH,GAAG,EAAExF,eAAe,IAAI,EAAG;kBAC3ByF,GAAG,EAAC,aAAa;kBACjBrB,SAAS,EAAC;gBAAU;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,EAELvE,eAAe,iBACd3B,OAAA;gBAAK6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B9F,OAAA;kBAAA8F,QAAA,EAAG;gBAA4B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACnClG,OAAA;kBAAA8F,QAAA,EAAOnE;gBAAe;kBAAAoE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CACN,eAEDlG,OAAA;gBAAM4G,QAAQ,EAAExC,eAAgB;gBAACyB,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACrD9F,OAAA;kBAAK6F,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBACzB9F,OAAA;oBAAO6G,OAAO,EAAC,YAAY;oBAAAf,QAAA,EAAC;kBAAiB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACrDlG,OAAA;oBACE+C,EAAE,EAAC,YAAY;oBACfqD,IAAI,EAAC,MAAM;oBACX5C,KAAK,EAAE3B,aAAc;oBACrB0E,QAAQ,EAAG3C,CAAC,IAAK9B,gBAAgB,CAAC8B,CAAC,CAACkD,MAAM,CAACtD,KAAK,CAAE;oBAClD2D,WAAW,EAAC,oBAAoB;oBAChCJ,QAAQ;oBACRK,SAAS,EAAE,CAAE;oBACbC,OAAO,EAAC;kBAAU;oBAAAtB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eAENlG,OAAA;kBAAK6F,SAAS,EAAC,eAAe;kBAAAC,QAAA,gBAC5B9F,OAAA;oBACEoG,IAAI,EAAC,QAAQ;oBACbP,SAAS,EAAC,iBAAiB;oBAC3BM,OAAO,EAAEA,CAAA,KAAM3E,qBAAqB,CAAC,KAAK,CAAE;oBAAAsE,QAAA,EAC7C;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTlG,OAAA;oBACEoG,IAAI,EAAC,QAAQ;oBACbP,SAAS,EAAC,iBAAiB;oBAC3BmB,QAAQ,EAAE7G,OAAO,IAAI0B,aAAa,CAACyF,MAAM,KAAK,CAAE;oBAAAxB,QAAA,EACjD;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAENlG,OAAA;YAAK6F,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9F,OAAA;cAAA8F,QAAA,EAAI;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAExBlG,OAAA;cAAK6F,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC3B/D,QAAQ,CAACwF,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BzH,OAAA;gBAAiB6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,eACvC9F,OAAA;kBAAK6F,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B9F,OAAA;oBAAK6F,SAAS,EAAC,cAAc;oBAAAC,QAAA,GAC1B0B,OAAO,CAACE,OAAO,EAAC,KAAG,EAACF,OAAO,CAACG,EAAE,EAC9BH,OAAO,CAAC3C,OAAO,iBAAI7E,OAAA;sBAAM6F,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAAC;oBAAO;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/D,CAAC,eACNlG,OAAA;oBAAK6F,SAAS,EAAC,cAAc;oBAAAC,QAAA,GAAC,gBACd,EAACL,UAAU,CAAC+B,OAAO,CAACI,UAAU,CAAC;kBAAA;oBAAA7B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1C,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC,GATEuB,KAAK;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAUV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENlG,OAAA;cACE6F,SAAS,EAAC,iBAAiB;cAC3BM,OAAO,EAAE1B,yBAA0B;cACnCuC,QAAQ,EAAE7G,OAAO,IAAI4B,QAAQ,CAACuF,MAAM,IAAI,CAAE;cAAAxB,QAAA,EAC3C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEArF,SAAS,KAAK,SAAS,iBACtBb,OAAA;UAAK6F,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B9F,OAAA;YAAA8F,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBlG,OAAA;YAAG6F,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAEnC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJlG,OAAA;YAAK6F,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9F,OAAA;cAAA8F,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBlG,OAAA;cAAG6F,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAC;YAEnC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACJlG,OAAA;cAAQ6F,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAEpC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENlG,OAAA;YAAK6F,SAAS,EAAC,4BAA4B;YAAAC,QAAA,gBACzC9F,OAAA;cAAA8F,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBlG,OAAA;cAAG6F,SAAS,EAAC,iCAAiC;cAAAC,QAAA,EAAC;YAE/C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EAEH,CAACjE,iBAAiB,gBACjBjC,OAAA;cACE6F,SAAS,EAAC,gBAAgB;cAC1BM,OAAO,EAAEA,CAAA,KAAMjE,oBAAoB,CAAC,IAAI,CAAE;cAAA4D,QAAA,EAC3C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAETlG,OAAA;cAAK6F,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B9F,OAAA;gBAAG6F,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAG5B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACJlG,OAAA;gBAAK6F,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC9B9F,OAAA;kBACE6F,SAAS,EAAC,iBAAiB;kBAC3BM,OAAO,EAAEA,CAAA,KAAMjE,oBAAoB,CAAC,KAAK,CAAE;kBAAA4D,QAAA,EAC5C;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTlG,OAAA;kBACE6F,SAAS,EAAC,gBAAgB;kBAC1BM,OAAO,EAAErB,mBAAoB;kBAC7BkC,QAAQ,EAAE7G,OAAQ;kBAAA2F,QAAA,EACnB;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChG,EAAA,CAhsBID,QAAkB;EAAA,QAiBLH,WAAW;AAAA;AAAA+H,EAAA,GAjBxB5H,QAAkB;AAksBxB,eAAeA,QAAQ;AAAC,IAAA4H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"version":3,"file":"static/js/660.a0e4da54.chunk.js","mappings":"8KAIA,MAmFA,EAnF0BA,KACxB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAgB,KACvCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IACxCK,IAAgBL,EAAAA,EAAAA,UAAS,KAEhCM,EAAAA,EAAAA,YAAU,KACaC,WACnB,MAAM,KAAEC,EAAI,MAAEC,SAAgBC,EAAAA,EAC3BC,KAAK,mBACLC,OAAO,KACPC,MAAM,OAAQ,CAAEC,WAAW,IAE1BL,EACFM,QAAQN,MAAM,0BAA2BA,GAEzCV,EAAWS,GAAQ,GACrB,EAGFQ,EAAc,GACb,IAEH,MAAMC,EAAkBnB,EAAQoB,QAAOC,GACrCA,EAAKC,UAAUC,cAAcC,SAASrB,EAAWoB,iBAG7CE,EAAmBN,EAAgBO,OACtCrB,EAAc,GAAKE,EACpBF,EAAcE,GAGVoB,EAAaC,KAAKC,KAAKV,EAAgBW,OAASvB,GAMtD,OACEwB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,sBACZC,MAAOlC,EACPmC,SAAWC,GAAMnC,EAAcmC,EAAEC,OAAOH,OACxCL,UAAU,gBAGZD,EAAAA,EAAAA,MAAA,SAAOC,UAAU,gBAAeC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGR,EAAiBgB,KAAI,CAACpB,EAAMqB,KAC3BX,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKZ,EAAKC,aACVY,EAAAA,EAAAA,KAAA,MAAAD,SAAK,IAAIU,KAAKtB,EAAKuB,MAAMC,oBACzBX,EAAAA,EAAAA,KAAA,MAAAD,SAAKZ,EAAKyB,WAHHJ,WASfR,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SACxBc,MAAMlC,KAAK,CAAEiB,OAAQH,IAAc,CAACqB,EAAGC,IAAMA,EAAI,IAAGR,KAAIS,IACvDhB,EAAAA,EAAAA,KAAA,UAEEiB,QAASA,IAtCOD,KACxB5C,EAAe4C,EAAK,EAqCGE,CAAiBF,GAChClB,UAAWkB,IAAS7C,EAAc,SAAW,GAAG4B,SAE/CiB,GAJIA,SAQP,C","sources":["pages/History.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport '../styles/History.css';\n\nconst History: React.FC = () => {\n  const [history, setHistory] = useState<any[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchHistory = async () => {\n      const { data, error } = await supabase\n        .from('feeding_history')\n        .select('*')\n        .order('time', { ascending: false });\n\n      if (error) {\n        console.error('Error fetching history:', error);\n      } else {\n        setHistory(data || []);\n      }\n    };\n\n    fetchHistory();\n  }, []);\n\n  const filteredHistory = history.filter(item =>\n    item.device_id.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const paginatedHistory = filteredHistory.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const totalPages = Math.ceil(filteredHistory.length / itemsPerPage);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"history-container\">\n      <h1>Feeding History</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search by device ID\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        className=\"search-bar\"\n      />\n\n      <table className=\"history-table\">\n        <thead>\n          <tr>\n            <th>Device ID</th>\n            <th>Time</th>\n            <th>Amount (g)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {paginatedHistory.map((item, index) => (\n            <tr key={index}>\n              <td>{item.device_id}</td>\n              <td>{new Date(item.time).toLocaleString()}</td>\n              <td>{item.amount}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n          <button\n            key={page}\n            onClick={() => handlePageChange(page)}\n            className={page === currentPage ? 'active' : ''}\n          >\n            {page}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default History;"],"names":["History","history","setHistory","useState","searchTerm","setSearchTerm","currentPage","setCurrentPage","itemsPerPage","useEffect","async","data","error","supabase","from","select","order","ascending","console","fetchHistory","filteredHistory","filter","item","device_id","toLowerCase","includes","paginatedHistory","slice","totalPages","Math","ceil","length","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","map","index","Date","time","toLocaleString","amount","Array","_","i","page","onClick","handlePageChange"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart_Pet_Feeder/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../supabaseClient.ts';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../styles/Dashboard.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [feedingHistory, setFeedingHistory] = useState([]);\n  const [upcomingSchedules, setUpcomingSchedules] = useState([]);\n  const [feedingAmount, setFeedingAmount] = useState(10);\n  const [activeTab, setActiveTab] = useState('manual');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isDispensing, setIsDispensing] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [chartData, setChartData] = useState(null);\n  const itemsPerPage = 5;\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setIsLoading(true);\n      try {\n        // Get current user\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (!user) throw new Error('User not found');\n\n        // Fetch devices\n        const {\n          data: devicesData,\n          error: devicesError\n        } = await supabase.from('devices').select('*').eq('user_id', user.id);\n        if (devicesError) throw devicesError;\n        if (devicesData && devicesData.length > 0) {\n          setDevices(devicesData);\n          setSelectedDevice(devicesData[0]);\n\n          // Fetch feeding history for the first device\n          await fetchFeedingHistory(devicesData[0].device_id);\n\n          // Fetch upcoming schedules for the first device\n          await fetchUpcomingSchedules(devicesData[0].device_id, user.id);\n        } else {\n          // No devices found\n          setDevices([]);\n          setSelectedDevice(null);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchInitialData();\n\n    // Set up realtime subscriptions\n    const devicesSubscription = supabase.channel('devices-changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'devices'\n    }, handleDeviceUpdate).subscribe();\n    const historySubscription = supabase.channel('history-changes').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'feeding_history'\n    }, handleHistoryUpdate).subscribe();\n    const schedulesSubscription = supabase.channel('schedules-changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'schedules'\n    }, handleScheduleUpdate).subscribe();\n\n    // Cleanup subscriptions\n    return () => {\n      devicesSubscription.unsubscribe();\n      historySubscription.unsubscribe();\n      schedulesSubscription.unsubscribe();\n    };\n  }, []);\n\n  // Handle realtime device updates\n  const handleDeviceUpdate = async payload => {\n    const {\n      eventType,\n      new: newDevice,\n      old: oldDevice\n    } = payload;\n\n    // Update the devices list\n    if (eventType === 'INSERT') {\n      setDevices(prev => [...prev, newDevice]);\n    } else if (eventType === 'UPDATE') {\n      setDevices(prev => prev.map(device => device.device_id === newDevice.device_id ? newDevice : device));\n\n      // If this is the selected device, update it\n      if (selectedDevice && selectedDevice.device_id === newDevice.device_id) {\n        setSelectedDevice(newDevice);\n      }\n    } else if (eventType === 'DELETE') {\n      setDevices(prev => prev.filter(device => device.device_id !== oldDevice.device_id));\n\n      // If this was the selected device, select another one or null\n      if (selectedDevice && selectedDevice.device_id === oldDevice.device_id) {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        const {\n          data\n        } = await supabase.from('devices').select('*').eq('user_id', user === null || user === void 0 ? void 0 : user.id).limit(1);\n        setSelectedDevice(data && data.length > 0 ? data[0] : null);\n      }\n    }\n  };\n\n  // Handle realtime feeding history updates\n  const handleHistoryUpdate = payload => {\n    const {\n      new: newFeeding\n    } = payload;\n\n    // Only update if it's for the selected device\n    if (selectedDevice && newFeeding.device_id === selectedDevice.device_id) {\n      setFeedingHistory(prev => [newFeeding, ...prev.slice(0, itemsPerPage - 1)]);\n\n      // Update chart data\n      updateChartData([newFeeding, ...feedingHistory]);\n    }\n  };\n\n  // Handle realtime schedule updates\n  const handleScheduleUpdate = payload => {\n    const {\n      eventType,\n      new: newSchedule,\n      old: oldSchedule\n    } = payload;\n\n    // Only update if it's for the selected device\n    if (!selectedDevice) return;\n    if (eventType === 'INSERT' && newSchedule.device_id === selectedDevice.device_id) {\n      setUpcomingSchedules(prev => {\n        const updated = [...prev, newSchedule].sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime()).filter(schedule => new Date(schedule.time) > new Date()).slice(0, 2);\n        return updated;\n      });\n    } else if (eventType === 'UPDATE' && newSchedule.device_id === selectedDevice.device_id) {\n      setUpcomingSchedules(prev => {\n        const updated = prev.map(schedule => schedule.schedule_id === newSchedule.schedule_id ? newSchedule : schedule).sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime()).filter(schedule => new Date(schedule.time) > new Date()).slice(0, 2);\n        return updated;\n      });\n    } else if (eventType === 'DELETE') {\n      setUpcomingSchedules(prev => prev.filter(schedule => schedule.schedule_id !== oldSchedule.schedule_id));\n    }\n  };\n\n  // Fetch feeding history for a specific device\n  const fetchFeedingHistory = async (deviceId, page = 1) => {\n    try {\n      // Calculate pagination\n      const from = (page - 1) * itemsPerPage;\n      const to = from + itemsPerPage - 1;\n\n      // Get total count first\n      const {\n        count,\n        error: countError\n      } = await supabase.from('feeding_history').select('*', {\n        count: 'exact',\n        head: true\n      }).eq('device_id', deviceId);\n      if (countError) throw countError;\n      setTotalPages(Math.ceil((count || 0) / itemsPerPage));\n\n      // Fetch the actual data\n      const {\n        data,\n        error\n      } = await supabase.from('feeding_history').select('*').eq('device_id', deviceId).order('time', {\n        ascending: false\n      }).range(from, to);\n      if (error) throw error;\n      setFeedingHistory(data || []);\n      setCurrentPage(page);\n\n      // Update chart data\n      updateChartData(data || []);\n    } catch (error) {\n      console.error('Error fetching feeding history:', error);\n      setError('Failed to load feeding history');\n    }\n  };\n\n  // Fetch upcoming schedules for a specific device\n  const fetchUpcomingSchedules = async (deviceId, userId) => {\n    try {\n      const now = new Date().toISOString();\n      const {\n        data,\n        error\n      } = await supabase.from('schedules').select('*').eq('device_id', deviceId).eq('user_id', userId).gt('time', now).order('time').limit(2);\n      if (error) throw error;\n      setUpcomingSchedules(data || []);\n    } catch (error) {\n      console.error('Error fetching upcoming schedules:', error);\n      setError('Failed to load upcoming schedules');\n    }\n  };\n\n  // Update chart data based on feeding history\n  const updateChartData = history => {\n    // Group by date and calculate total amounts\n    const dailyData = history.reduce((acc, item) => {\n      const date = new Date(item.time).toLocaleDateString();\n      acc[date] = (acc[date] || 0) + item.amount;\n      return acc;\n    }, {});\n\n    // Prepare chart data\n    const labels = Object.keys(dailyData).sort((a, b) => new Date(a).getTime() - new Date(b).getTime()).slice(-7); // Last 7 days\n\n    const amounts = labels.map(date => dailyData[date] || 0);\n    setChartData({\n      labels,\n      datasets: [{\n        label: 'Food Dispensed (g)',\n        data: amounts,\n        fill: false,\n        backgroundColor: 'rgba(255, 206, 86, 0.2)',\n        borderColor: 'rgba(255, 206, 86, 1)',\n        tension: 0.1\n      }]\n    });\n  };\n\n  // Handle device selection change\n  const handleDeviceChange = async deviceId => {\n    const device = devices.find(d => d.device_id === deviceId);\n    if (device) {\n      setSelectedDevice(device);\n\n      // Reset pagination\n      setCurrentPage(1);\n\n      // Fetch data for the selected device\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (user) {\n        await fetchFeedingHistory(deviceId);\n        await fetchUpcomingSchedules(deviceId, user.id);\n      }\n    }\n  };\n\n  // Dispense food manually\n  const handleDispense = async () => {\n    if (!selectedDevice) return;\n    try {\n      setIsDispensing(true);\n\n      // Update device status with dispense command\n      const {\n        error\n      } = await supabase.from('devices').update({\n        last_status: {\n          ...selectedDevice.last_status,\n          command: 'dispense',\n          command_amount: feedingAmount\n        }\n      }).eq('device_id', selectedDevice.device_id);\n      if (error) throw error;\n\n      // Record the feeding in history\n      const {\n        error: historyError\n      } = await supabase.from('feeding_history').insert([{\n        device_id: selectedDevice.device_id,\n        time: new Date().toISOString(),\n        amount: feedingAmount,\n        manual: true\n      }]);\n      if (historyError) throw historyError;\n\n      // Show success message\n      alert(`Dispensing ${feedingAmount}g of food!`);\n    } catch (error) {\n      console.error('Error dispensing food:', error);\n      setError('Failed to dispense food');\n    } finally {\n      setIsDispensing(false);\n    }\n  };\n\n  // Format date and time for display\n  const formatDateTime = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Handle pagination\n  const handlePageChange = page => {\n    if (selectedDevice) {\n      fetchFeedingHistory(selectedDevice.device_id, page);\n    }\n  };\n\n  // Render device status\n  const renderDeviceStatus = () => {\n    if (!selectedDevice) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-devices-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"icon-device-off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No devices found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connect your first Pet Feeder device to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/device-setup\",\n          className: \"btn btn-primary\",\n          children: \"Add Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this);\n    }\n    const {\n      last_status\n    } = selectedDevice;\n    const foodLevel = (last_status === null || last_status === void 0 ? void 0 : last_status.food_level) || 0;\n    const wifiStrength = (last_status === null || last_status === void 0 ? void 0 : last_status.wifi_strength) || 0;\n    const lastUpdate = last_status !== null && last_status !== void 0 && last_status.last_update ? new Date(parseInt(last_status.last_update) * 1000).toLocaleString() : 'Unknown';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-status-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-status-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedDevice.device_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `device-status ${foodLevel > 0 ? 'online' : 'offline'}`,\n          children: foodLevel > 0 ? 'Online' : 'Offline'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-status-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Food Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${foodLevel}%`\n                },\n                \"data-level\": `${foodLevel}%`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-wifi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"WiFi Signal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wifi-strength\",\n              children: Array.from({\n                length: 4\n              }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `wifi-bar ${i < Math.ceil(wifiStrength / 25) ? 'active' : ''}`\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-clock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Last Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: lastUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render device selector\n  const renderDeviceSelector = () => {\n    if (devices.length <= 1) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"device-select\",\n        children: \"Select Device:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"device-select\",\n        value: (selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.device_id) || '',\n        onChange: e => handleDeviceChange(e.target.value),\n        children: devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: device.device_id,\n          children: device.device_name\n        }, device.device_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render feeding controls\n  const renderFeedingControls = () => {\n    if (!selectedDevice) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feeding-controls-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'manual' ? 'active' : ''}`,\n          onClick: () => setActiveTab('manual'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-hand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), \" Manual Feeding\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'scheduled' ? 'active' : ''}`,\n          onClick: () => setActiveTab('scheduled'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), \" Scheduled Feeding\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: activeTab === 'manual' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manual-feeding\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Amount to dispense (grams):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-circle\",\n                onClick: () => setFeedingAmount(prev => Math.max(5, prev - 5)),\n                disabled: isDispensing,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: feedingAmount,\n                onChange: e => setFeedingAmount(Math.max(5, Math.min(100, parseInt(e.target.value) || 5))),\n                min: \"5\",\n                max: \"100\",\n                disabled: isDispensing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-circle\",\n                onClick: () => setFeedingAmount(prev => Math.min(100, prev + 5)),\n                disabled: isDispensing,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-dispense\",\n            onClick: handleDispense,\n            disabled: isDispensing,\n            children: isDispensing ? 'Dispensing...' : 'Dispense Now'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scheduled-feeding\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Upcoming Feedings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this), upcomingSchedules.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"schedule-list\",\n            children: upcomingSchedules.map(schedule => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"schedule-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"schedule-time\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-clock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 25\n                }, this), formatDateTime(schedule.time)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"schedule-amount\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-food\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 25\n                }, this), schedule.amount, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 23\n              }, this)]\n            }, schedule.schedule_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-schedules-message\",\n            children: \"No upcoming feedings scheduled.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/schedule\",\n            className: \"btn btn-outline\",\n            children: \"Manage Schedules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render feeding history\n  const renderFeedingHistory = () => {\n    if (!selectedDevice) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feeding-history-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Feedings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this), feedingHistory.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feeding-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feeding-table-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-cell\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-cell\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-cell\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), feedingHistory.map(feeding => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feeding-table-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-cell\",\n              children: formatDateTime(feeding.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-cell\",\n              children: [feeding.amount, \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-cell\",\n              children: feeding.manual ? 'Manual' : 'Scheduled'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 19\n            }, this)]\n          }, feeding.feed_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm\",\n            disabled: currentPage === 1,\n            onClick: () => handlePageChange(currentPage - 1),\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"page-info\",\n            children: [\"Page \", currentPage, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm\",\n            disabled: currentPage === totalPages,\n            onClick: () => handlePageChange(currentPage + 1),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-history-message\",\n        children: \"No feeding history available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/history\",\n        className: \"btn btn-text\",\n        children: \"View Full History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render feeding chart\n  const renderFeedingChart = () => {\n    if (!selectedDevice || !chartData) return null;\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: '7-Day Feeding Trend'\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          title: {\n            display: true,\n            text: 'Food Amount (g)'\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Feeding Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => window.location.reload(),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this), renderDeviceSelector()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item status\",\n        children: renderDeviceStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item controls\",\n        children: renderFeedingControls()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item history\",\n        children: renderFeedingHistory()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item chart\",\n        children: renderFeedingChart()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 671,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"tq8GCI89JnhwzleGi+BUlnJ2iis=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","supabase","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Dashboard","_s","devices","setDevices","selectedDevice","setSelectedDevice","feedingHistory","setFeedingHistory","upcomingSchedules","setUpcomingSchedules","feedingAmount","setFeedingAmount","activeTab","setActiveTab","isLoading","setIsLoading","isDispensing","setIsDispensing","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","chartData","setChartData","itemsPerPage","fetchInitialData","data","user","auth","getUser","Error","devicesData","devicesError","from","select","eq","id","length","fetchFeedingHistory","device_id","fetchUpcomingSchedules","console","message","devicesSubscription","channel","on","event","schema","table","handleDeviceUpdate","subscribe","historySubscription","handleHistoryUpdate","schedulesSubscription","handleScheduleUpdate","unsubscribe","payload","eventType","new","newDevice","old","oldDevice","prev","map","device","filter","limit","newFeeding","slice","updateChartData","newSchedule","oldSchedule","updated","sort","a","b","Date","time","getTime","schedule","schedule_id","deviceId","page","to","count","countError","head","Math","ceil","order","ascending","range","userId","now","toISOString","gt","history","dailyData","reduce","acc","item","date","toLocaleDateString","amount","labels","Object","keys","amounts","datasets","label","fill","backgroundColor","borderColor","tension","handleDeviceChange","find","d","handleDispense","update","last_status","command","command_amount","historyError","insert","manual","alert","formatDateTime","dateString","toLocaleString","handlePageChange","renderDeviceStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","foodLevel","food_level","wifiStrength","wifi_strength","lastUpdate","last_update","parseInt","device_name","style","width","Array","_","i","renderDeviceSelector","htmlFor","value","onChange","e","target","renderFeedingControls","onClick","max","disabled","type","min","renderFeedingHistory","feeding","feed_id","renderFeedingChart","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","y","beginAtZero","options","window","location","reload","_c","$RefreshReg$"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../supabaseClient.ts';\nimport { Line, Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Device, FeedingHistory, Schedule } from '../types';\nimport '../styles/Dashboard.css';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Dashboard: React.FC = () => {\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null);\n  const [feedingHistory, setFeedingHistory] = useState<FeedingHistory[]>([]);\n  const [upcomingSchedules, setUpcomingSchedules] = useState<Schedule[]>([]);\n  const [feedingAmount, setFeedingAmount] = useState<number>(10);\n  const [activeTab, setActiveTab] = useState<'manual' | 'scheduled'>('manual');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isDispensing, setIsDispensing] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [chartData, setChartData] = useState<any>(null);\n\n  const itemsPerPage = 5;\n\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setIsLoading(true);\n      try {\n        // Get current user\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) throw new Error('User not found');\n        \n        // Fetch devices\n        const { data: devicesData, error: devicesError } = await supabase\n          .from('devices')\n          .select('*')\n          .eq('user_id', user.id);\n          \n        if (devicesError) throw devicesError;\n        \n        if (devicesData && devicesData.length > 0) {\n          setDevices(devicesData);\n          setSelectedDevice(devicesData[0]);\n          \n          // Fetch feeding history for the first device\n          await fetchFeedingHistory(devicesData[0].device_id);\n          \n          // Fetch upcoming schedules for the first device\n          await fetchUpcomingSchedules(devicesData[0].device_id, user.id);\n        } else {\n          // No devices found\n          setDevices([]);\n          setSelectedDevice(null);\n        }\n      } catch (error: any) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchInitialData();\n    \n    // Set up realtime subscriptions\n    const devicesSubscription = supabase\n      .channel('devices-changes')\n      .on('postgres_changes', \n        { event: '*', schema: 'public', table: 'devices' },\n        handleDeviceUpdate\n      )\n      .subscribe();\n      \n    const historySubscription = supabase\n      .channel('history-changes')\n      .on('postgres_changes',\n        { event: 'INSERT', schema: 'public', table: 'feeding_history' },\n        handleHistoryUpdate\n      )\n      .subscribe();\n      \n    const schedulesSubscription = supabase\n      .channel('schedules-changes')\n      .on('postgres_changes',\n        { event: '*', schema: 'public', table: 'schedules' },\n        handleScheduleUpdate\n      )\n      .subscribe();\n    \n    // Cleanup subscriptions\n    return () => {\n      devicesSubscription.unsubscribe();\n      historySubscription.unsubscribe();\n      schedulesSubscription.unsubscribe();\n    };\n  }, []);\n\n  // Handle realtime device updates\n  const handleDeviceUpdate = async (payload: any) => {\n    const { eventType, new: newDevice, old: oldDevice } = payload;\n    \n    // Update the devices list\n    if (eventType === 'INSERT') {\n      setDevices(prev => [...prev, newDevice]);\n    } else if (eventType === 'UPDATE') {\n      setDevices(prev => \n        prev.map(device => \n          device.device_id === newDevice.device_id ? newDevice : device\n        )\n      );\n      \n      // If this is the selected device, update it\n      if (selectedDevice && selectedDevice.device_id === newDevice.device_id) {\n        setSelectedDevice(newDevice);\n      }\n    } else if (eventType === 'DELETE') {\n      setDevices(prev => \n        prev.filter(device => device.device_id !== oldDevice.device_id)\n      );\n      \n      // If this was the selected device, select another one or null\n      if (selectedDevice && selectedDevice.device_id === oldDevice.device_id) {\n        const { data: { user } } = await supabase.auth.getUser();\n        const { data } = await supabase\n          .from('devices')\n          .select('*')\n          .eq('user_id', user?.id)\n          .limit(1);\n          \n        setSelectedDevice(data && data.length > 0 ? data[0] : null);\n      }\n    }\n  };\n  \n  // Handle realtime feeding history updates\n  const handleHistoryUpdate = (payload: any) => {\n    const { new: newFeeding } = payload;\n    \n    // Only update if it's for the selected device\n    if (selectedDevice && newFeeding.device_id === selectedDevice.device_id) {\n      setFeedingHistory(prev => [newFeeding, ...prev.slice(0, itemsPerPage - 1)]);\n      \n      // Update chart data\n      updateChartData([newFeeding, ...feedingHistory]);\n    }\n  };\n  \n  // Handle realtime schedule updates\n  const handleScheduleUpdate = (payload: any) => {\n    const { eventType, new: newSchedule, old: oldSchedule } = payload;\n    \n    // Only update if it's for the selected device\n    if (!selectedDevice) return;\n    \n    if (eventType === 'INSERT' && newSchedule.device_id === selectedDevice.device_id) {\n      setUpcomingSchedules(prev => {\n        const updated = [...prev, newSchedule]\n          .sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime())\n          .filter(schedule => new Date(schedule.time) > new Date())\n          .slice(0, 2);\n        return updated;\n      });\n    } else if (eventType === 'UPDATE' && newSchedule.device_id === selectedDevice.device_id) {\n      setUpcomingSchedules(prev => {\n        const updated = prev\n          .map(schedule => schedule.schedule_id === newSchedule.schedule_id ? newSchedule : schedule)\n          .sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime())\n          .filter(schedule => new Date(schedule.time) > new Date())\n          .slice(0, 2);\n        return updated;\n      });\n    } else if (eventType === 'DELETE') {\n      setUpcomingSchedules(prev => \n        prev.filter(schedule => schedule.schedule_id !== oldSchedule.schedule_id)\n      );\n    }\n  };\n\n  // Fetch feeding history for a specific device\n  const fetchFeedingHistory = async (deviceId: string, page: number = 1) => {\n    try {\n      // Calculate pagination\n      const from = (page - 1) * itemsPerPage;\n      const to = from + itemsPerPage - 1;\n      \n      // Get total count first\n      const { count, error: countError } = await supabase\n        .from('feeding_history')\n        .select('*', { count: 'exact', head: true })\n        .eq('device_id', deviceId);\n        \n      if (countError) throw countError;\n      \n      setTotalPages(Math.ceil((count || 0) / itemsPerPage));\n      \n      // Fetch the actual data\n      const { data, error } = await supabase\n        .from('feeding_history')\n        .select('*')\n        .eq('device_id', deviceId)\n        .order('time', { ascending: false })\n        .range(from, to);\n        \n      if (error) throw error;\n      \n      setFeedingHistory(data || []);\n      setCurrentPage(page);\n      \n      // Update chart data\n      updateChartData(data || []);\n    } catch (error: any) {\n      console.error('Error fetching feeding history:', error);\n      setError('Failed to load feeding history');\n    }\n  };\n\n  // Fetch upcoming schedules for a specific device\n  const fetchUpcomingSchedules = async (deviceId: string, userId: string) => {\n    try {\n      const now = new Date().toISOString();\n      \n      const { data, error } = await supabase\n        .from('schedules')\n        .select('*')\n        .eq('device_id', deviceId)\n        .eq('user_id', userId)\n        .gt('time', now)\n        .order('time')\n        .limit(2);\n        \n      if (error) throw error;\n      \n      setUpcomingSchedules(data || []);\n    } catch (error: any) {\n      console.error('Error fetching upcoming schedules:', error);\n      setError('Failed to load upcoming schedules');\n    }\n  };\n\n  // Update chart data based on feeding history\n  const updateChartData = (history: FeedingHistory[]) => {\n    // Group by date and calculate total amounts\n    const dailyData = history.reduce((acc: {[key: string]: number}, item) => {\n      const date = new Date(item.time).toLocaleDateString();\n      acc[date] = (acc[date] || 0) + item.amount;\n      return acc;\n    }, {});\n    \n    // Prepare chart data\n    const labels = Object.keys(dailyData).sort((a, b) => \n      new Date(a).getTime() - new Date(b).getTime()\n    ).slice(-7); // Last 7 days\n    \n    const amounts = labels.map(date => dailyData[date] || 0);\n    \n    setChartData({\n      labels,\n      datasets: [\n        {\n          label: 'Food Dispensed (g)',\n          data: amounts,\n          fill: false,\n          backgroundColor: 'rgba(255, 206, 86, 0.2)',\n          borderColor: 'rgba(255, 206, 86, 1)',\n          tension: 0.1\n        }\n      ]\n    });\n  };\n\n  // Handle device selection change\n  const handleDeviceChange = async (deviceId: string) => {\n    const device = devices.find(d => d.device_id === deviceId);\n    if (device) {\n      setSelectedDevice(device);\n      \n      // Reset pagination\n      setCurrentPage(1);\n      \n      // Fetch data for the selected device\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        await fetchFeedingHistory(deviceId);\n        await fetchUpcomingSchedules(deviceId, user.id);\n      }\n    }\n  };\n\n  // Dispense food manually\n  const handleDispense = async () => {\n    if (!selectedDevice) return;\n    \n    try {\n      setIsDispensing(true);\n      \n      // Update device status with dispense command\n      const { error } = await supabase\n        .from('devices')\n        .update({\n          last_status: {\n            ...selectedDevice.last_status,\n            command: 'dispense',\n            command_amount: feedingAmount\n          }\n        })\n        .eq('device_id', selectedDevice.device_id);\n        \n      if (error) throw error;\n      \n      // Record the feeding in history\n      const { error: historyError } = await supabase\n        .from('feeding_history')\n        .insert([{\n          device_id: selectedDevice.device_id,\n          time: new Date().toISOString(),\n          amount: feedingAmount,\n          manual: true\n        }]);\n        \n      if (historyError) throw historyError;\n      \n      // Show success message\n      alert(`Dispensing ${feedingAmount}g of food!`);\n    } catch (error: any) {\n      console.error('Error dispensing food:', error);\n      setError('Failed to dispense food');\n    } finally {\n      setIsDispensing(false);\n    }\n  };\n\n  // Format date and time for display\n  const formatDateTime = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Handle pagination\n  const handlePageChange = (page: number) => {\n    if (selectedDevice) {\n      fetchFeedingHistory(selectedDevice.device_id, page);\n    }\n  };\n\n  // Render device status\n  const renderDeviceStatus = () => {\n    if (!selectedDevice) {\n      return (\n        <div className=\"no-devices-message\">\n          <i className=\"icon-device-off\"></i>\n          <h3>No devices found</h3>\n          <p>Connect your first Pet Feeder device to get started!</p>\n          <Link to=\"/device-setup\" className=\"btn btn-primary\">Add Device</Link>\n        </div>\n      );\n    }\n\n    const { last_status } = selectedDevice;\n    const foodLevel = last_status?.food_level || 0;\n    const wifiStrength = last_status?.wifi_strength || 0;\n    const lastUpdate = last_status?.last_update \n      ? new Date(parseInt(last_status.last_update) * 1000).toLocaleString()\n      : 'Unknown';\n\n    return (\n      <div className=\"device-status-card\">\n        <div className=\"device-status-header\">\n          <h3>{selectedDevice.device_name}</h3>\n          <span className={`device-status ${foodLevel > 0 ? 'online' : 'offline'}`}>\n            {foodLevel > 0 ? 'Online' : 'Offline'}\n          </span>\n        </div>\n        \n        <div className=\"device-status-grid\">\n          <div className=\"status-item\">\n            <div className=\"status-icon\">\n              <i className=\"icon-food\"></i>\n            </div>\n            <div className=\"status-info\">\n              <h4>Food Level</h4>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\" \n                  style={{ width: `${foodLevel}%` }}\n                  data-level={`${foodLevel}%`}\n                ></div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"status-item\">\n            <div className=\"status-icon\">\n              <i className=\"icon-wifi\"></i>\n            </div>\n            <div className=\"status-info\">\n              <h4>WiFi Signal</h4>\n              <div className=\"wifi-strength\">\n                {Array.from({ length: 4 }).map((_, i) => (\n                  <div \n                    key={i}\n                    className={`wifi-bar ${i < Math.ceil(wifiStrength / 25) ? 'active' : ''}`}\n                  ></div>\n                ))}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"status-item\">\n            <div className=\"status-icon\">\n              <i className=\"icon-clock\"></i>\n            </div>\n            <div className=\"status-info\">\n              <h4>Last Update</h4>\n              <p>{lastUpdate}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Render device selector\n  const renderDeviceSelector = () => {\n    if (devices.length <= 1) return null;\n    \n    return (\n      <div className=\"device-selector\">\n        <label htmlFor=\"device-select\">Select Device:</label>\n        <select \n          id=\"device-select\"\n          value={selectedDevice?.device_id || ''}\n          onChange={(e) => handleDeviceChange(e.target.value)}\n        >\n          {devices.map((device) => (\n            <option key={device.device_id} value={device.device_id}>\n              {device.device_name}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  };\n\n  // Render feeding controls\n  const renderFeedingControls = () => {\n    if (!selectedDevice) return null;\n    \n    return (\n      <div className=\"feeding-controls-card\">\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'manual' ? 'active' : ''}`}\n            onClick={() => setActiveTab('manual')}\n          >\n            <i className=\"icon-hand\"></i> Manual Feeding\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'scheduled' ? 'active' : ''}`}\n            onClick={() => setActiveTab('scheduled')}\n          >\n            <i className=\"icon-calendar\"></i> Scheduled Feeding\n          </button>\n        </div>\n        \n        <div className=\"tab-content\">\n          {activeTab === 'manual' ? (\n            <div className=\"manual-feeding\">\n              <div className=\"amount-selector\">\n                <h4>Amount to dispense (grams):</h4>\n                <div className=\"amount-controls\">\n                  <button \n                    className=\"btn btn-circle\" \n                    onClick={() => setFeedingAmount(prev => Math.max(5, prev - 5))}\n                    disabled={isDispensing}\n                  >\n                    -\n                  </button>\n                  <input \n                    type=\"number\" \n                    value={feedingAmount} \n                    onChange={(e) => setFeedingAmount(Math.max(5, Math.min(100, parseInt(e.target.value) || 5)))}\n                    min=\"5\"\n                    max=\"100\"\n                    disabled={isDispensing}\n                  />\n                  <button \n                    className=\"btn btn-circle\" \n                    onClick={() => setFeedingAmount(prev => Math.min(100, prev + 5))}\n                    disabled={isDispensing}\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n              \n              <button \n                className=\"btn btn-primary btn-dispense\" \n                onClick={handleDispense}\n                disabled={isDispensing}\n              >\n                {isDispensing ? 'Dispensing...' : 'Dispense Now'}\n              </button>\n            </div>\n          ) : (\n            <div className=\"scheduled-feeding\">\n              <h4>Upcoming Feedings</h4>\n              {upcomingSchedules.length > 0 ? (\n                <ul className=\"schedule-list\">\n                  {upcomingSchedules.map((schedule) => (\n                    <li key={schedule.schedule_id} className=\"schedule-item\">\n                      <div className=\"schedule-time\">\n                        <i className=\"icon-clock\"></i>\n                        {formatDateTime(schedule.time)}\n                      </div>\n                      <div className=\"schedule-amount\">\n                        <i className=\"icon-food\"></i>\n                        {schedule.amount}g\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p className=\"no-schedules-message\">No upcoming feedings scheduled.</p>\n              )}\n              <Link to=\"/schedule\" className=\"btn btn-outline\">\n                Manage Schedules\n              </Link>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // Render feeding history\n  const renderFeedingHistory = () => {\n    if (!selectedDevice) return null;\n    \n    return (\n      <div className=\"feeding-history-card\">\n        <h3>Recent Feedings</h3>\n        \n        {feedingHistory.length > 0 ? (\n          <>\n            <div className=\"feeding-table\">\n              <div className=\"feeding-table-header\">\n                <div className=\"table-cell\">Time</div>\n                <div className=\"table-cell\">Amount</div>\n                <div className=\"table-cell\">Type</div>\n              </div>\n              \n              {feedingHistory.map((feeding) => (\n                <div key={feeding.feed_id} className=\"feeding-table-row\">\n                  <div className=\"table-cell\">{formatDateTime(feeding.time)}</div>\n                  <div className=\"table-cell\">{feeding.amount}g</div>\n                  <div className=\"table-cell\">{feeding.manual ? 'Manual' : 'Scheduled'}</div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"pagination\">\n              <button \n                className=\"btn btn-sm\" \n                disabled={currentPage === 1}\n                onClick={() => handlePageChange(currentPage - 1)}\n              >\n                Previous\n              </button>\n              <span className=\"page-info\">Page {currentPage} of {totalPages}</span>\n              <button \n                className=\"btn btn-sm\" \n                disabled={currentPage === totalPages}\n                onClick={() => handlePageChange(currentPage + 1)}\n              >\n                Next\n              </button>\n            </div>\n          </>\n        ) : (\n          <p className=\"no-history-message\">No feeding history available yet.</p>\n        )}\n        \n        <Link to=\"/history\" className=\"btn btn-text\">View Full History</Link>\n      </div>\n    );\n  };\n\n  // Render feeding chart\n  const renderFeedingChart = () => {\n    if (!selectedDevice || !chartData) return null;\n    \n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top' as const,\n        },\n        title: {\n          display: true,\n          text: '7-Day Feeding Trend',\n        },\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          title: {\n            display: true,\n            text: 'Food Amount (g)'\n          }\n        }\n      }\n    };\n    \n    return (\n      <div className=\"chart-card\">\n        <h3>Feeding Analysis</h3>\n        \n        <div className=\"chart-container\">\n          <Line data={chartData} options={chartOptions} />\n        </div>\n      </div>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading dashboard...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <i className=\"icon-warning\"></i>\n        <h2>Something went wrong</h2>\n        <p>{error}</p>\n        <button className=\"btn btn-primary\" onClick={() => window.location.reload()}>\n          Try Again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <h1>Dashboard</h1>\n        {renderDeviceSelector()}\n      </div>\n      \n      <div className=\"dashboard-grid\">\n        <div className=\"grid-item status\">{renderDeviceStatus()}</div>\n        <div className=\"grid-item controls\">{renderFeedingControls()}</div>\n        <div className=\"grid-item history\">{renderFeedingHistory()}</div>\n        <div className=\"grid-item chart\">{renderFeedingChart()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
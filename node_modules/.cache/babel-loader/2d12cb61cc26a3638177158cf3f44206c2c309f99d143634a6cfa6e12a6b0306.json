{"ast":null,"code":"import React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import{supabase}from'../supabaseClient';import{isValidEmail}from'../utils/validation.ts';import'../styles/Auth.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForgotPassword=()=>{const[email,setEmail]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(false);const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();// Validate email\nif(!email||!isValidEmail(email)){setError('Please enter a valid email address');return;}try{setLoading(true);setError(null);const{error}=await supabase.auth.resetPasswordForEmail(email,{redirectTo:`${window.location.origin}/auth/callback`});if(error)throw error;setSuccess(true);}catch(err){console.error('Password reset error:',err);setError(err.message||'An error occurred while sending the password reset email');}finally{setLoading(false);}};if(success){return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container fade-in\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-logo\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/logo.svg\",alt:\"Pet Feeder Logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Pet Feeder\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"success-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-check-circle\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Check your email\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"We've sent a password reset link to \",/*#__PURE__*/_jsx(\"strong\",{children:email}),\". Please check your inbox and follow the instructions to reset your password.\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-full\",onClick:()=>navigate('/login'),children:\"Back to Login\"})]})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container fade-in\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-logo\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/logo.svg\",alt:\"Pet Feeder Logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Pet Feeder\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Reset your password\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"auth-error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"your@email.com\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary btn-full\",disabled:loading,children:loading?'Sending...':'Send Reset Link'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-footer\",children:/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Back to Login\"})})]})});};export default ForgotPassword;","map":{"version":3,"names":["React","useState","Link","useNavigate","supabase","isValidEmail","jsx","_jsx","jsxs","_jsxs","ForgotPassword","email","setEmail","loading","setLoading","error","setError","success","setSuccess","navigate","handleSubmit","e","preventDefault","auth","resetPasswordForEmail","redirectTo","window","location","origin","err","console","message","className","children","src","alt","onClick","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","required","disabled","to"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/ForgotPassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { isValidEmail } from '../utils/validation.ts';\nimport '../styles/Auth.css';\n\nconst ForgotPassword: React.FC = () => {\n  const [email, setEmail] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validate email\n    if (!email || !isValidEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/auth/callback`,\n      });\n      \n      if (error) throw error;\n      \n      setSuccess(true);\n    } catch (err: any) {\n      console.error('Password reset error:', err);\n      setError(err.message || 'An error occurred while sending the password reset email');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <div className=\"auth-container fade-in\">\n        <div className=\"auth-card\">\n          <div className=\"auth-logo\">\n            <img src=\"/logo.svg\" alt=\"Pet Feeder Logo\" />\n            <h1>Pet Feeder</h1>\n          </div>\n          \n          <div className=\"success-message\">\n            <i className=\"icon-check-circle\"></i>\n            <h2>Check your email</h2>\n            <p>\n              We've sent a password reset link to <strong>{email}</strong>.\n              Please check your inbox and follow the instructions to reset your password.\n            </p>\n            <button\n              className=\"btn btn-primary btn-full\"\n              onClick={() => navigate('/login')}\n            >\n              Back to Login\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-container fade-in\">\n      <div className=\"auth-card\">\n        <div className=\"auth-logo\">\n          <img src=\"/logo.svg\" alt=\"Pet Feeder Logo\" />\n          <h1>Pet Feeder</h1>\n        </div>\n        \n        <h2>Reset your password</h2>\n        \n        {error && <div className=\"auth-error\">{error}</div>}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"your@email.com\"\n              required\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn btn-primary btn-full\" \n            disabled={loading}\n          >\n            {loading ? 'Sending...' : 'Send Reset Link'}\n          </button>\n        </form>\n        \n        <div className=\"auth-footer\">\n          <Link to=\"/login\">Back to Login</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'../subabaseClient';import{useNavigate}from'react-router-dom';import'../styles/Settings.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=()=>{const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[userProfile,setUserProfile]=useState(null);const[notificationPrefs,setNotificationPrefs]=useState({});const[activeTab,setActiveTab]=useState('notifications');const[currentPassword,setCurrentPassword]=useState('');const[newPassword,setNewPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[twoFactorEnabled,setTwoFactorEnabled]=useState(false);const[showTwoFactorSetup,setShowTwoFactorSetup]=useState(false);const[twoFactorQRCode,setTwoFactorQRCode]=useState(null);const[twoFactorSecret,setTwoFactorSecret]=useState(null);const[twoFactorCode,setTwoFactorCode]=useState('');const[sessions,setSessions]=useState([]);const[showDeleteConfirm,setShowDeleteConfirm]=useState(false);const navigate=useNavigate();useEffect(()=>{fetchUserProfile();fetchNotificationPreferences();fetchSessions();},[]);const fetchUserProfile=async()=>{try{setLoading(true);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{data,error}=await supabase.from('profiles').select('*').eq('id',user.id).single();if(error)throw error;setUserProfile(data);setTwoFactorEnabled(data.two_factor_enabled);}catch(err){console.error('Error fetching user profile:',err);setError(err.message||'Failed to load user profile');}finally{setLoading(false);}};const fetchNotificationPreferences=async()=>{try{setLoading(true);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{data,error}=await supabase.from('notification_preferences').select('*').eq('user_id',user.id).single();if(error)throw error;setNotificationPrefs(data);}catch(err){console.error('Error fetching notification preferences:',err);setError(err.message||'Failed to load notification preferences');}finally{setLoading(false);}};const fetchSessions=async()=>{try{setLoading(true);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{data,error}=await supabase.auth.getSessionList();if(error)throw error;setSessions(data);}catch(err){console.error('Error fetching sessions:',err);setError(err.message||'Failed to load sessions');}finally{setLoading(false);}};const updateNotificationPreference=async(key,value)=>{try{setLoading(true);setError(null);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{error}=await supabase.from('notification_preferences').update({[key]:value}).eq('user_id',user.id);if(error)throw error;setNotificationPrefs(prev=>({...prev,[key]:value}));setSuccess('Notification preferences updated successfully');}catch(err){console.error('Error updating notification preferences:',err);setError(err.message||'Failed to update notification preferences');}finally{setLoading(false);}};const handleChangePassword=async e=>{e.preventDefault();if(newPassword!==confirmPassword){setError('New password and confirm password do not match');return;}try{setLoading(true);setError(null);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{error}=await supabase.auth.updateUser({password:newPassword});if(error)throw error;setSuccess('Password updated successfully');setCurrentPassword('');setNewPassword('');setConfirmPassword('');}catch(err){console.error('Error changing password:',err);setError(err.message||'Failed to change password');}finally{setLoading(false);}};const handleSetup2FA=async()=>{try{setLoading(true);setError(null);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{data,error}=await supabase.auth.generate2FASecret();if(error)throw error;setTwoFactorQRCode(data.qr_code);setTwoFactorSecret(data.secret);setShowTwoFactorSetup(true);}catch(err){console.error('Error setting up 2FA:',err);setError(err.message||'Failed to set up 2FA');}finally{setLoading(false);}};const handleEnable2FA=async e=>{e.preventDefault();try{setLoading(true);setError(null);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{error}=await supabase.auth.verify2FA({code:twoFactorCode});if(error)throw error;setTwoFactorEnabled(true);setShowTwoFactorSetup(false);setSuccess('Two-factor authentication enabled successfully');}catch(err){console.error('Error enabling 2FA:',err);setError(err.message||'Failed to enable 2FA');}finally{setLoading(false);}};const handleDisable2FA=async()=>{try{setLoading(true);setError(null);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{error}=await supabase.auth.disable2FA();if(error)throw error;setTwoFactorEnabled(false);setSuccess('Two-factor authentication disabled successfully');}catch(err){console.error('Error disabling 2FA:',err);setError(err.message||'Failed to disable 2FA');}finally{setLoading(false);}};const handleLogoutOtherSessions=async()=>{try{setLoading(true);setError(null);const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{error}=await supabase.auth.logoutOtherSessions();if(error)throw error;// Update sessions list\nsetSessions([sessions.find(s=>s.current)||sessions[0]]);setSuccess('All other sessions have been logged out successfully');}catch(err){console.error('Error logging out other sessions:',err);setError(err.message||'Failed to log out other sessions');}finally{setLoading(false);}};// Delete account\nconst handleDeleteAccount=async()=>{try{setLoading(true);setError(null);if(!showDeleteConfirm){setShowDeleteConfirm(true);setLoading(false);return;}// Delete all user data\nif(!userProfile)return;// Delete from database\nconst{error:devicesError}=await supabase.from('devices').delete().eq('user_id',userProfile.id);if(devicesError)throw devicesError;const{error:petsError}=await supabase.from('pets').delete().eq('user_id',userProfile.id);if(petsError)throw petsError;const{error:schedulesError}=await supabase.from('schedules').delete().eq('user_id',userProfile.id);if(schedulesError)throw schedulesError;const{error:notifError}=await supabase.from('notification_preferences').delete().eq('user_id',userProfile.id);if(notifError)throw notifError;const{error:profileError}=await supabase.from('profiles').delete().eq('id',userProfile.id);if(profileError)throw profileError;// Finally, delete the user authentication\nconst{error}=await supabase.auth.admin.deleteUser(userProfile.id);if(error)throw error;// Sign out\nawait supabase.auth.signOut();// Navigate to home page\nnavigate('/',{replace:true});}catch(err){console.error('Error deleting account:',err);setError(err.message||'Failed to delete account');setShowDeleteConfirm(false);}finally{setLoading(false);}};// Format date\nconst formatDate=dateString=>{return new Date(dateString).toLocaleString();};if(loading&&!userProfile){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading settings...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"settings-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"settings-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Settings\"})}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-alert\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-warning\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"error-close\",onClick:()=>setError(null),children:\"\\xD7\"})]}),success&&/*#__PURE__*/_jsxs(\"div\",{className:\"success-alert\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-check-circle\"}),/*#__PURE__*/_jsx(\"p\",{children:success}),/*#__PURE__*/_jsx(\"button\",{className:\"success-close\",onClick:()=>setSuccess(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-sidebar\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`settings-tab ${activeTab==='notifications'?'active':''}`,onClick:()=>setActiveTab('notifications'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-bell\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Notifications\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:`settings-tab ${activeTab==='security'?'active':''}`,onClick:()=>setActiveTab('security'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-lock\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Security\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:`settings-tab ${activeTab==='account'?'active':''}`,onClick:()=>setActiveTab('account'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-user\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Account\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-main\",children:[activeTab==='notifications'&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Notification Preferences\"}),/*#__PURE__*/_jsx(\"p\",{className:\"section-description\",children:\"Choose how and when you receive notifications about your pet feeder.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-group\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Notification Channels\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"setting-name\",children:\"Email Notifications\"}),/*#__PURE__*/_jsx(\"div\",{className:\"setting-description\",children:\"Receive notifications about your pet feeder via email\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notificationPrefs.email_notifications,onChange:()=>updateNotificationPreference('email_notifications',!notificationPrefs.email_notifications)}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"setting-name\",children:\"Push Notifications\"}),/*#__PURE__*/_jsx(\"div\",{className:\"setting-description\",children:\"Receive in-browser push notifications\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notificationPrefs.push_notifications,onChange:()=>updateNotificationPreference('push_notifications',!notificationPrefs.push_notifications)}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-group\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Notification Types\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"setting-name\",children:\"Low Food Alert\"}),/*#__PURE__*/_jsx(\"div\",{className:\"setting-description\",children:\"Get notified when food level is running low\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notificationPrefs.low_food_alert,onChange:()=>updateNotificationPreference('low_food_alert',!notificationPrefs.low_food_alert)}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"setting-name\",children:\"Feeding Complete Alert\"}),/*#__PURE__*/_jsx(\"div\",{className:\"setting-description\",children:\"Get notified when a feeding is completed\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notificationPrefs.feeding_complete_alert,onChange:()=>updateNotificationPreference('feeding_complete_alert',!notificationPrefs.feeding_complete_alert)}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"setting-name\",children:\"Schedule Reminders\"}),/*#__PURE__*/_jsx(\"div\",{className:\"setting-description\",children:\"Get reminded shortly before scheduled feedings\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notificationPrefs.schedule_reminder,onChange:()=>updateNotificationPreference('schedule_reminder',!notificationPrefs.schedule_reminder)}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]})]})]})]}),activeTab==='security'&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Security Settings\"}),/*#__PURE__*/_jsx(\"p\",{className:\"section-description\",children:\"Manage your account security settings and authentication methods.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-group\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Change Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleChangePassword,className:\"security-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"current-password\",children:\"Current Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"current-password\",type:\"password\",value:currentPassword,onChange:e=>setCurrentPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"new-password\",children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"new-password\",type:\"password\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirm-password\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"confirm-password\",type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:\"Update Password\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-group\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Two-Factor Authentication\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"setting-name\",children:\"Two-Factor Authentication\"}),/*#__PURE__*/_jsx(\"div\",{className:\"setting-description\",children:\"Add an extra layer of security to your account\"})]}),twoFactorEnabled?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline\",onClick:handleDisable2FA,disabled:loading,children:\"Disable 2FA\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleSetup2FA,disabled:loading,children:\"Enable 2FA\"})]}),showTwoFactorSetup&&/*#__PURE__*/_jsxs(\"div\",{className:\"twofa-setup\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Set up Two-Factor Authentication\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Scan the QR code with an authenticator app like Google Authenticator or Authy, then enter the 6-digit code to enable 2FA.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"twofa-qr-container\",children:/*#__PURE__*/_jsx(\"img\",{src:twoFactorQRCode||'',alt:\"2FA QR Code\",className:\"twofa-qr\"})}),twoFactorSecret&&/*#__PURE__*/_jsxs(\"div\",{className:\"twofa-secret\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Or enter this code manually:\"}),/*#__PURE__*/_jsx(\"code\",{children:twoFactorSecret})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleEnable2FA,className:\"twofa-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"twofa-code\",children:\"Verification Code\"}),/*#__PURE__*/_jsx(\"input\",{id:\"twofa-code\",type:\"text\",value:twoFactorCode,onChange:e=>setTwoFactorCode(e.target.value),placeholder:\"Enter 6-digit code\",required:true,maxLength:6,pattern:\"[0-9]{6}\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"twofa-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline\",onClick:()=>setShowTwoFactorSetup(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading||twoFactorCode.length!==6,children:\"Verify & Enable\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-group\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Active Sessions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sessions-list\",children:sessions.map((session,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"session-item\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"session-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"session-name\",children:[session.browser,\" - \",session.os,session.current&&/*#__PURE__*/_jsx(\"span\",{className:\"current-badge\",children:\"Current\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"session-date\",children:[\"Active since: \",formatDate(session.created_at)]})]})},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline\",onClick:handleLogoutOtherSessions,disabled:loading||sessions.length<=1,children:\"Log Out Other Sessions\"})]})]}),activeTab==='account'&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Account Settings\"}),/*#__PURE__*/_jsx(\"p\",{className:\"section-description\",children:\"Manage your account preferences and data.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-group\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Data Export\"}),/*#__PURE__*/_jsx(\"p\",{className:\"setting-description\",children:\"Export all your data including device history, pet profiles, and account information.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline\",children:\"Export My Data\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-group danger-zone\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Danger Zone\"}),/*#__PURE__*/_jsx(\"p\",{className:\"setting-description danger-text\",children:\"Permanently delete your account and all associated data. This action cannot be undone.\"}),!showDeleteConfirm?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>setShowDeleteConfirm(true),children:\"Delete Account\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"delete-confirm\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"confirm-text\",children:\"Are you absolutely sure? This will permanently delete your account, all your devices, pets, and feeding history.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirm-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline\",onClick:()=>setShowDeleteConfirm(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:handleDeleteAccount,disabled:loading,children:\"Yes, Delete My Account\"})]})]})]})]})]})]})]});};export default Settings;","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsx","_jsx","jsxs","_jsxs","Settings","loading","setLoading","error","setError","success","setSuccess","userProfile","setUserProfile","notificationPrefs","setNotificationPrefs","activeTab","setActiveTab","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","twoFactorEnabled","setTwoFactorEnabled","showTwoFactorSetup","setShowTwoFactorSetup","twoFactorQRCode","setTwoFactorQRCode","twoFactorSecret","setTwoFactorSecret","twoFactorCode","setTwoFactorCode","sessions","setSessions","showDeleteConfirm","setShowDeleteConfirm","navigate","fetchUserProfile","fetchNotificationPreferences","fetchSessions","data","user","auth","getUser","Error","from","select","eq","id","single","two_factor_enabled","err","console","message","getSessionList","updateNotificationPreference","key","value","update","prev","handleChangePassword","e","preventDefault","updateUser","password","handleSetup2FA","generate2FASecret","qr_code","secret","handleEnable2FA","verify2FA","code","handleDisable2FA","disable2FA","handleLogoutOtherSessions","logoutOtherSessions","find","s","current","handleDeleteAccount","devicesError","delete","petsError","schedulesError","notifError","profileError","admin","deleteUser","signOut","replace","formatDate","dateString","Date","toLocaleString","className","children","onClick","type","checked","email_notifications","onChange","push_notifications","low_food_alert","feeding_complete_alert","schedule_reminder","onSubmit","htmlFor","target","required","disabled","src","alt","placeholder","maxLength","pattern","length","map","session","index","browser","os","created_at"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/Settings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../subabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Settings.css';\n\nconst Settings: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [userProfile, setUserProfile] = useState<any>(null);\n  const [notificationPrefs, setNotificationPrefs] = useState<any>({});\n  const [activeTab, setActiveTab] = useState<string>('notifications');\n  const [currentPassword, setCurrentPassword] = useState<string>('');\n  const [newPassword, setNewPassword] = useState<string>('');\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState<boolean>(false);\n  const [showTwoFactorSetup, setShowTwoFactorSetup] = useState<boolean>(false);\n  const [twoFactorQRCode, setTwoFactorQRCode] = useState<string | null>(null);\n  const [twoFactorSecret, setTwoFactorSecret] = useState<string | null>(null);\n  const [twoFactorCode, setTwoFactorCode] = useState<string>('');\n  const [sessions, setSessions] = useState<any[]>([]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchUserProfile();\n    fetchNotificationPreferences();\n    fetchSessions();\n  }, []);\n\n  const fetchUserProfile = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n        \n      if (error) throw error;\n      \n      setUserProfile(data);\n      setTwoFactorEnabled(data.two_factor_enabled);\n    } catch (err: any) {\n      console.error('Error fetching user profile:', err);\n      setError(err.message || 'Failed to load user profile');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchNotificationPreferences = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase\n        .from('notification_preferences')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n        \n      if (error) throw error;\n      \n      setNotificationPrefs(data);\n    } catch (err: any) {\n      console.error('Error fetching notification preferences:', err);\n      setError(err.message || 'Failed to load notification preferences');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchSessions = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase.auth.getSessionList();\n      if (error) throw error;\n      \n      setSessions(data);\n    } catch (err: any) {\n      console.error('Error fetching sessions:', err);\n      setError(err.message || 'Failed to load sessions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateNotificationPreference = async (key: string, value: boolean) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase\n        .from('notification_preferences')\n        .update({ [key]: value })\n        .eq('user_id', user.id);\n        \n      if (error) throw error;\n      \n      setNotificationPrefs((prev: any) => ({ ...prev, [key]: value }));\n      setSuccess('Notification preferences updated successfully');\n    } catch (err: any) {\n      console.error('Error updating notification preferences:', err);\n      setError(err.message || 'Failed to update notification preferences');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChangePassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (newPassword !== confirmPassword) {\n      setError('New password and confirm password do not match');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      \n      if (error) throw error;\n      \n      setSuccess('Password updated successfully');\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n    } catch (err: any) {\n      console.error('Error changing password:', err);\n      setError(err.message || 'Failed to change password');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSetup2FA = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase.auth.generate2FASecret();\n      if (error) throw error;\n      \n      setTwoFactorQRCode(data.qr_code);\n      setTwoFactorSecret(data.secret);\n      setShowTwoFactorSetup(true);\n    } catch (err: any) {\n      console.error('Error setting up 2FA:', err);\n      setError(err.message || 'Failed to set up 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEnable2FA = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase.auth.verify2FA({\n        code: twoFactorCode\n      });\n      \n      if (error) throw error;\n      \n      setTwoFactorEnabled(true);\n      setShowTwoFactorSetup(false);\n      setSuccess('Two-factor authentication enabled successfully');\n    } catch (err: any) {\n      console.error('Error enabling 2FA:', err);\n      setError(err.message || 'Failed to enable 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDisable2FA = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase.auth.disable2FA();\n      if (error) throw error;\n      \n      setTwoFactorEnabled(false);\n      setSuccess('Two-factor authentication disabled successfully');\n    } catch (err: any) {\n      console.error('Error disabling 2FA:', err);\n      setError(err.message || 'Failed to disable 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLogoutOtherSessions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { error } = await supabase.auth.logoutOtherSessions();\n      if (error) throw error;\n      \n      // Update sessions list\n      setSessions([sessions.find(s => s.current) || sessions[0]]);\n      \n      setSuccess('All other sessions have been logged out successfully');\n    } catch (err: any) {\n      console.error('Error logging out other sessions:', err);\n      setError(err.message || 'Failed to log out other sessions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete account\n  const handleDeleteAccount = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      if (!showDeleteConfirm) {\n        setShowDeleteConfirm(true);\n        setLoading(false);\n        return;\n      }\n      \n      // Delete all user data\n      if (!userProfile) return;\n      \n      // Delete from database\n      const { error: devicesError } = await supabase\n        .from('devices')\n        .delete()\n        .eq('user_id', userProfile.id);\n        \n      if (devicesError) throw devicesError;\n      \n      const { error: petsError } = await supabase\n        .from('pets')\n        .delete()\n        .eq('user_id', userProfile.id);\n        \n      if (petsError) throw petsError;\n      \n      const { error: schedulesError } = await supabase\n        .from('schedules')\n        .delete()\n        .eq('user_id', userProfile.id);\n        \n      if (schedulesError) throw schedulesError;\n      \n      const { error: notifError } = await supabase\n        .from('notification_preferences')\n        .delete()\n        .eq('user_id', userProfile.id);\n        \n      if (notifError) throw notifError;\n      \n      const { error: profileError } = await supabase\n        .from('profiles')\n        .delete()\n        .eq('id', userProfile.id);\n        \n      if (profileError) throw profileError;\n      \n      // Finally, delete the user authentication\n      const { error } = await supabase.auth.admin.deleteUser(userProfile.id);\n      if (error) throw error;\n      \n      // Sign out\n      await supabase.auth.signOut();\n      \n      // Navigate to home page\n      navigate('/', { replace: true });\n    } catch (err: any) {\n      console.error('Error deleting account:', err);\n      setError(err.message || 'Failed to delete account');\n      setShowDeleteConfirm(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading && !userProfile) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading settings...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-container\">\n      <div className=\"settings-header\">\n        <h1>Settings</h1>\n      </div>\n      \n      {error && (\n        <div className=\"error-alert\">\n          <i className=\"icon-warning\"></i>\n          <p>{error}</p>\n          <button \n            className=\"error-close\" \n            onClick={() => setError(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"success-alert\">\n          <i className=\"icon-check-circle\"></i>\n          <p>{success}</p>\n          <button \n            className=\"success-close\" \n            onClick={() => setSuccess(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      <div className=\"settings-content\">\n        <div className=\"settings-sidebar\">\n          <button \n            className={`settings-tab ${activeTab === 'notifications' ? 'active' : ''}`}\n            onClick={() => setActiveTab('notifications')}\n          >\n            <i className=\"icon-bell\"></i>\n            <span>Notifications</span>\n          </button>\n          <button \n            className={`settings-tab ${activeTab === 'security' ? 'active' : ''}`}\n            onClick={() => setActiveTab('security')}\n          >\n            <i className=\"icon-lock\"></i>\n            <span>Security</span>\n          </button>\n          <button \n            className={`settings-tab ${activeTab === 'account' ? 'active' : ''}`}\n            onClick={() => setActiveTab('account')}\n          >\n            <i className=\"icon-user\"></i>\n            <span>Account</span>\n          </button>\n        </div>\n        \n        <div className=\"settings-main\">\n          {activeTab === 'notifications' && (\n            <div className=\"settings-section\">\n              <h2>Notification Preferences</h2>\n              <p className=\"section-description\">\n                Choose how and when you receive notifications about your pet feeder.\n              </p>\n              \n              <div className=\"settings-group\">\n                <h3>Notification Channels</h3>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Email Notifications</div>\n                    <div className=\"setting-description\">Receive notifications about your pet feeder via email</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.email_notifications}\n                      onChange={() => updateNotificationPreference('email_notifications', !notificationPrefs.email_notifications)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Push Notifications</div>\n                    <div className=\"setting-description\">Receive in-browser push notifications</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.push_notifications}\n                      onChange={() => updateNotificationPreference('push_notifications', !notificationPrefs.push_notifications)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n              </div>\n              \n              <div className=\"settings-group\">\n                <h3>Notification Types</h3>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Low Food Alert</div>\n                    <div className=\"setting-description\">Get notified when food level is running low</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.low_food_alert}\n                      onChange={() => updateNotificationPreference('low_food_alert', !notificationPrefs.low_food_alert)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Feeding Complete Alert</div>\n                    <div className=\"setting-description\">Get notified when a feeding is completed</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.feeding_complete_alert}\n                      onChange={() => updateNotificationPreference('feeding_complete_alert', !notificationPrefs.feeding_complete_alert)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Schedule Reminders</div>\n                    <div className=\"setting-description\">Get reminded shortly before scheduled feedings</div>\n                  </div>\n                  <label className=\"switch\">\n                    <input \n                      type=\"checkbox\"\n                      checked={notificationPrefs.schedule_reminder}\n                      onChange={() => updateNotificationPreference('schedule_reminder', !notificationPrefs.schedule_reminder)}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {activeTab === 'security' && (\n            <div className=\"settings-section\">\n              <h2>Security Settings</h2>\n              <p className=\"section-description\">\n                Manage your account security settings and authentication methods.\n              </p>\n              \n              <div className=\"settings-group\">\n                <h3>Change Password</h3>\n                <form onSubmit={handleChangePassword} className=\"security-form\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"current-password\">Current Password</label>\n                    <input\n                      id=\"current-password\"\n                      type=\"password\"\n                      value={currentPassword}\n                      onChange={(e) => setCurrentPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"new-password\">New Password</label>\n                    <input\n                      id=\"new-password\"\n                      type=\"password\"\n                      value={newPassword}\n                      onChange={(e) => setNewPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"confirm-password\">Confirm Password</label>\n                    <input\n                      id=\"confirm-password\"\n                      type=\"password\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  \n                  <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    disabled={loading}\n                  >\n                    Update Password\n                  </button>\n                </form>\n              </div>\n              \n              <div className=\"settings-group\">\n                <h3>Two-Factor Authentication</h3>\n                \n                <div className=\"setting-item\">\n                  <div className=\"setting-info\">\n                    <div className=\"setting-name\">Two-Factor Authentication</div>\n                    <div className=\"setting-description\">Add an extra layer of security to your account</div>\n                  </div>\n                  \n                  {twoFactorEnabled ? (\n                    <button \n                      className=\"btn btn-outline\"\n                      onClick={handleDisable2FA}\n                      disabled={loading}\n                    >\n                      Disable 2FA\n                    </button>\n                  ) : (\n                    <button \n                      className=\"btn btn-primary\"\n                      onClick={handleSetup2FA}\n                      disabled={loading}\n                    >\n                      Enable 2FA\n                    </button>\n                  )}\n                </div>\n                \n                {showTwoFactorSetup && (\n                  <div className=\"twofa-setup\">\n                    <h4>Set up Two-Factor Authentication</h4>\n                    <p>\n                      Scan the QR code with an authenticator app like Google Authenticator or Authy, \n                      then enter the 6-digit code to enable 2FA.\n                    </p>\n                    \n                    <div className=\"twofa-qr-container\">\n                      <img \n                        src={twoFactorQRCode || ''}\n                        alt=\"2FA QR Code\"\n                        className=\"twofa-qr\"\n                      />\n                    </div>\n                    \n                    {twoFactorSecret && (\n                      <div className=\"twofa-secret\">\n                        <p>Or enter this code manually:</p>\n                        <code>{twoFactorSecret}</code>\n                      </div>\n                    )}\n                    \n                    <form onSubmit={handleEnable2FA} className=\"twofa-form\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"twofa-code\">Verification Code</label>\n                        <input\n                          id=\"twofa-code\"\n                          type=\"text\"\n                          value={twoFactorCode}\n                          onChange={(e) => setTwoFactorCode(e.target.value)}\n                          placeholder=\"Enter 6-digit code\"\n                          required\n                          maxLength={6}\n                          pattern=\"[0-9]{6}\"\n                        />\n                      </div>\n                      \n                      <div className=\"twofa-buttons\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-outline\"\n                          onClick={() => setShowTwoFactorSetup(false)}\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          disabled={loading || twoFactorCode.length !== 6}\n                        >\n                          Verify & Enable\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"settings-group\">\n                <h3>Active Sessions</h3>\n                \n                <div className=\"sessions-list\">\n                  {sessions.map((session, index) => (\n                    <div key={index} className=\"session-item\">\n                      <div className=\"session-info\">\n                        <div className=\"session-name\">\n                          {session.browser} - {session.os}\n                          {session.current && <span className=\"current-badge\">Current</span>}\n                        </div>\n                        <div className=\"session-date\">\n                          Active since: {formatDate(session.created_at)}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                \n                <button \n                  className=\"btn btn-outline\"\n                  onClick={handleLogoutOtherSessions}\n                  disabled={loading || sessions.length <= 1}\n                >\n                  Log Out Other Sessions\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {activeTab === 'account' && (\n            <div className=\"settings-section\">\n              <h2>Account Settings</h2>\n              <p className=\"section-description\">\n                Manage your account preferences and data.\n              </p>\n              \n              <div className=\"settings-group\">\n                <h3>Data Export</h3>\n                <p className=\"setting-description\">\n                  Export all your data including device history, pet profiles, and account information.\n                </p>\n                <button className=\"btn btn-outline\">\n                  Export My Data\n                </button>\n              </div>\n              \n              <div className=\"settings-group danger-zone\">\n                <h3>Danger Zone</h3>\n                <p className=\"setting-description danger-text\">\n                  Permanently delete your account and all associated data. This action cannot be undone.\n                </p>\n                \n                {!showDeleteConfirm ? (\n                  <button \n                    className=\"btn btn-danger\"\n                    onClick={() => setShowDeleteConfirm(true)}\n                  >\n                    Delete Account\n                  </button>\n                ) : (\n                  <div className=\"delete-confirm\">\n                    <p className=\"confirm-text\">\n                      Are you absolutely sure? This will permanently delete your account, \n                      all your devices, pets, and feeding history.\n                    </p>\n                    <div className=\"confirm-buttons\">\n                      <button \n                        className=\"btn btn-outline\"\n                        onClick={() => setShowDeleteConfirm(false)}\n                      >\n                        Cancel\n                      </button>\n                      <button \n                        className=\"btn btn-danger\"\n                        onClick={handleDeleteAccount}\n                        disabled={loading}\n                      >\n                        Yes, Delete My Account\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
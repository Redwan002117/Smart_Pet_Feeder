{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart_Pet_Feeder/src/pages/DeviceSetup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient.ts';\nimport { isValidSSID, isValidWiFiPassword } from '../utils/validation.ts';\nimport '../styles/DeviceSetup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceSetup = () => {\n  _s();\n  const [ssid, setSSID] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [deviceId, setDeviceId] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Check if already connected to the Pet Feeder setup network\n  useEffect(() => {\n    // This is a client-side check and may not be accurate\n    // Best we can do is check if the network SSID matches\n    const checkNetwork = async () => {\n      try {\n        // In a real app, we might use a service worker or native app capability\n        // to check the network. Here we just simulate checking.\n        console.log(\"Checking if connected to PetFeederSetup network...\");\n\n        // For demonstration, we'll assume we're not connected yet\n        setCurrentStep(1);\n      } catch (err) {\n        console.error(\"Error checking network:\", err);\n      }\n    };\n    checkNetwork();\n  }, []);\n  const validateForm = () => {\n    const newErrors = {};\n    let isValid = true;\n    if (!ssid || !isValidSSID(ssid)) {\n      newErrors.ssid = 'Please enter a valid WiFi name';\n      isValid = false;\n    }\n    if (!password || !isValidWiFiPassword(password)) {\n      newErrors.password = 'Password must be at least 8 characters';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    try {\n      setIsConnecting(true);\n      setError(null);\n\n      // Get the current user ID from Supabase\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Simulate sending the request to the device in setup mode\n      // In a real app, you would make a fetch request to the device's local IP\n      console.log(`Sending setup request to http://192.168.4.1/setup`);\n      try {\n        const response = await fetch('http://192.168.4.1/setup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Setup-Token': 'your-secret-token-1234'\n          },\n          body: JSON.stringify({\n            ssid,\n            password,\n            user_id: user.id\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Setup failed: ${response.statusText}`);\n        }\n        const data = await response.json();\n\n        // Store the device ID returned from the setup\n        setDeviceId(data.device_id);\n        setIsSuccess(true);\n\n        // Move to success step\n        setCurrentStep(3);\n      } catch (fetchError) {\n        console.error(\"Error communicating with device:\", fetchError);\n\n        // For demo purposes, let's simulate a successful response\n        // since the device doesn't actually exist in this environment\n        console.log(\"Simulating successful device setup for demo purposes\");\n\n        // Generate a mock device ID\n        const mockDeviceId = `pf-${Math.random().toString(16).slice(2, 10)}`;\n\n        // Register the device in Supabase\n        const {\n          data: device,\n          error: deviceError\n        } = await supabase.from('devices').insert([{\n          device_id: mockDeviceId,\n          user_id: user.id,\n          device_name: 'Pet Feeder',\n          last_status: {\n            food_level: 80,\n            wifi_strength: 75\n          }\n        }]).select();\n        if (deviceError) throw deviceError;\n        setDeviceId(mockDeviceId);\n        setIsSuccess(true);\n        setCurrentStep(3);\n      }\n    } catch (err) {\n      console.error(\"Setup error:\", err);\n      setError(`Setup failed: ${err.message}`);\n      setCurrentStep(4); // Error step\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const renderStep1 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setup-step\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 1: Connect to Pet Feeder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setup-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Power on your Pet Feeder device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Wait for the LED to blink blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Open your WiFi settings on your device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Connect to the network named \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\\"PetFeederSetup\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Use password: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\\"12345678\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/wifi-setup.svg\",\n          alt: \"WiFi Setup Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => setCurrentStep(2),\n      children: \"I'm Connected to PetFeederSetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n  const renderStep2 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setup-step\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 2: Configure WiFi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"setup-subtitle\",\n      children: \"Enter your home WiFi details to connect your Pet Feeder to the internet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"setup-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ssid\",\n          children: \"WiFi Name (SSID)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ssid\",\n          type: \"text\",\n          value: ssid,\n          onChange: e => setSSID(e.target.value),\n          placeholder: \"Enter your WiFi name\",\n          disabled: isConnecting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), errors.ssid && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.ssid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"WiFi Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter your WiFi password\",\n          disabled: isConnecting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline\",\n          onClick: () => setCurrentStep(1),\n          disabled: isConnecting,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isConnecting,\n          children: isConnecting ? 'Connecting...' : 'Connect Device'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n  const renderStep3 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setup-step setup-success\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon-check-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Setup Complete!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your Pet Feeder has been successfully connected to your WiFi network.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"device-id\",\n      children: [\"Device ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: deviceId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setup-buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => navigate('/devices'),\n        children: \"View My Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n  const renderStep4 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setup-step setup-error\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Setup Failed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error || 'There was a problem connecting your device. Please try again.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setup-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline\",\n        onClick: () => setCurrentStep(1),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => navigate('/devices'),\n        children: \"View My Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"device-setup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setup-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pet Feeder Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setup-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-step ${currentStep >= 1 ? 'active' : ''}`,\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-line ${currentStep >= 2 ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-step ${currentStep >= 2 ? 'active' : ''}`,\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-line ${currentStep >= 3 ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-step ${currentStep >= 3 ? 'active' : ''}`,\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-content\",\n        children: [currentStep === 1 && renderStep1(), currentStep === 2 && renderStep2(), currentStep === 3 && renderStep3(), currentStep === 4 && renderStep4()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceSetup, \"VOeq4JtdzunRXy0mPw/s9OIan+I=\", false, function () {\n  return [useNavigate];\n});\n_c = DeviceSetup;\nexport default DeviceSetup;\nvar _c;\n$RefreshReg$(_c, \"DeviceSetup\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","isValidSSID","isValidWiFiPassword","jsxDEV","_jsxDEV","DeviceSetup","_s","ssid","setSSID","password","setPassword","errors","setErrors","currentStep","setCurrentStep","isConnecting","setIsConnecting","isSuccess","setIsSuccess","deviceId","setDeviceId","error","setError","navigate","checkNetwork","console","log","err","validateForm","newErrors","isValid","handleSubmit","e","preventDefault","data","user","auth","getUser","Error","response","fetch","method","headers","body","JSON","stringify","user_id","id","ok","statusText","json","device_id","fetchError","mockDeviceId","Math","random","toString","slice","device","deviceError","from","insert","device_name","last_status","food_level","wifi_strength","select","message","renderStep1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","renderStep2","onSubmit","htmlFor","type","value","onChange","target","placeholder","disabled","renderStep3","renderStep4","_c","$RefreshReg$"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/DeviceSetup.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient.ts';\nimport { isValidSSID, isValidWiFiPassword } from '../utils/validation.ts';\nimport '../styles/DeviceSetup.css';\n\nconst DeviceSetup: React.FC = () => {\n  const [ssid, setSSID] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [errors, setErrors] = useState<{ssid?: string; password?: string}>({});\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const [isSuccess, setIsSuccess] = useState<boolean>(false);\n  const [deviceId, setDeviceId] = useState<string>('');\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  // Check if already connected to the Pet Feeder setup network\n  useEffect(() => {\n    // This is a client-side check and may not be accurate\n    // Best we can do is check if the network SSID matches\n    const checkNetwork = async () => {\n      try {\n        // In a real app, we might use a service worker or native app capability\n        // to check the network. Here we just simulate checking.\n        console.log(\"Checking if connected to PetFeederSetup network...\");\n        \n        // For demonstration, we'll assume we're not connected yet\n        setCurrentStep(1);\n      } catch (err) {\n        console.error(\"Error checking network:\", err);\n      }\n    };\n    \n    checkNetwork();\n  }, []);\n\n  const validateForm = () => {\n    const newErrors: {ssid?: string; password?: string} = {};\n    let isValid = true;\n    \n    if (!ssid || !isValidSSID(ssid)) {\n      newErrors.ssid = 'Please enter a valid WiFi name';\n      isValid = false;\n    }\n    \n    if (!password || !isValidWiFiPassword(password)) {\n      newErrors.password = 'Password must be at least 8 characters';\n      isValid = false;\n    }\n    \n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n    \n    try {\n      setIsConnecting(true);\n      setError(null);\n      \n      // Get the current user ID from Supabase\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      // Simulate sending the request to the device in setup mode\n      // In a real app, you would make a fetch request to the device's local IP\n      console.log(`Sending setup request to http://192.168.4.1/setup`);\n      \n      try {\n        const response = await fetch('http://192.168.4.1/setup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Setup-Token': 'your-secret-token-1234'\n          },\n          body: JSON.stringify({\n            ssid,\n            password,\n            user_id: user.id\n          })\n        });\n        \n        if (!response.ok) {\n          throw new Error(`Setup failed: ${response.statusText}`);\n        }\n        \n        const data = await response.json();\n        \n        // Store the device ID returned from the setup\n        setDeviceId(data.device_id);\n        setIsSuccess(true);\n        \n        // Move to success step\n        setCurrentStep(3);\n      } catch (fetchError) {\n        console.error(\"Error communicating with device:\", fetchError);\n        \n        // For demo purposes, let's simulate a successful response\n        // since the device doesn't actually exist in this environment\n        console.log(\"Simulating successful device setup for demo purposes\");\n        \n        // Generate a mock device ID\n        const mockDeviceId = `pf-${Math.random().toString(16).slice(2, 10)}`;\n        \n        // Register the device in Supabase\n        const { data: device, error: deviceError } = await supabase\n          .from('devices')\n          .insert([\n            {\n              device_id: mockDeviceId,\n              user_id: user.id,\n              device_name: 'Pet Feeder',\n              last_status: { food_level: 80, wifi_strength: 75 }\n            }\n          ])\n          .select();\n        \n        if (deviceError) throw deviceError;\n        \n        setDeviceId(mockDeviceId);\n        setIsSuccess(true);\n        setCurrentStep(3);\n      }\n    } catch (err: any) {\n      console.error(\"Setup error:\", err);\n      setError(`Setup failed: ${err.message}`);\n      setCurrentStep(4); // Error step\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const renderStep1 = () => (\n    <div className=\"setup-step\">\n      <h2>Step 1: Connect to Pet Feeder</h2>\n      <div className=\"setup-instructions\">\n        <ol>\n          <li>Power on your Pet Feeder device</li>\n          <li>Wait for the LED to blink blue</li>\n          <li>Open your WiFi settings on your device</li>\n          <li>Connect to the network named <strong>\"PetFeederSetup\"</strong></li>\n          <li>Use password: <strong>\"12345678\"</strong></li>\n        </ol>\n        <div className=\"setup-image\">\n          <img src=\"/images/wifi-setup.svg\" alt=\"WiFi Setup Instructions\" />\n        </div>\n      </div>\n      <button \n        className=\"btn btn-primary\" \n        onClick={() => setCurrentStep(2)}\n      >\n        I'm Connected to PetFeederSetup\n      </button>\n    </div>\n  );\n\n  const renderStep2 = () => (\n    <div className=\"setup-step\">\n      <h2>Step 2: Configure WiFi</h2>\n      <p className=\"setup-subtitle\">\n        Enter your home WiFi details to connect your Pet Feeder to the internet.\n      </p>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <form className=\"setup-form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"ssid\">WiFi Name (SSID)</label>\n          <input\n            id=\"ssid\"\n            type=\"text\"\n            value={ssid}\n            onChange={(e) => setSSID(e.target.value)}\n            placeholder=\"Enter your WiFi name\"\n            disabled={isConnecting}\n          />\n          {errors.ssid && <span className=\"error-text\">{errors.ssid}</span>}\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"password\">WiFi Password</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Enter your WiFi password\"\n            disabled={isConnecting}\n          />\n          {errors.password && <span className=\"error-text\">{errors.password}</span>}\n        </div>\n        \n        <div className=\"setup-buttons\">\n          <button \n            type=\"button\" \n            className=\"btn btn-outline\" \n            onClick={() => setCurrentStep(1)}\n            disabled={isConnecting}\n          >\n            Back\n          </button>\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\" \n            disabled={isConnecting}\n          >\n            {isConnecting ? 'Connecting...' : 'Connect Device'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n  const renderStep3 = () => (\n    <div className=\"setup-step setup-success\">\n      <div className=\"success-icon\">\n        <i className=\"icon-check-circle\"></i>\n      </div>\n      <h2>Setup Complete!</h2>\n      <p>Your Pet Feeder has been successfully connected to your WiFi network.</p>\n      <p className=\"device-id\">Device ID: <span>{deviceId}</span></p>\n      <div className=\"setup-buttons\">\n        <button \n          className=\"btn btn-primary\" \n          onClick={() => navigate('/devices')}\n        >\n          View My Devices\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderStep4 = () => (\n    <div className=\"setup-step setup-error\">\n      <div className=\"error-icon\">\n        <i className=\"icon-error\"></i>\n      </div>\n      <h2>Setup Failed</h2>\n      <p>{error || 'There was a problem connecting your device. Please try again.'}</p>\n      <div className=\"setup-buttons\">\n        <button \n          className=\"btn btn-outline\" \n          onClick={() => setCurrentStep(1)}\n        >\n          Try Again\n        </button>\n        <button \n          className=\"btn btn-primary\" \n          onClick={() => navigate('/devices')}\n        >\n          View My Devices\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"device-setup-container\">\n      <div className=\"setup-card\">\n        <div className=\"setup-header\">\n          <h1>Pet Feeder Setup</h1>\n          <div className=\"setup-progress\">\n            <div className={`progress-step ${currentStep >= 1 ? 'active' : ''}`}>1</div>\n            <div className={`progress-line ${currentStep >= 2 ? 'active' : ''}`}></div>\n            <div className={`progress-step ${currentStep >= 2 ? 'active' : ''}`}>2</div>\n            <div className={`progress-line ${currentStep >= 3 ? 'active' : ''}`}></div>\n            <div className={`progress-step ${currentStep >= 3 ? 'active' : ''}`}>3</div>\n          </div>\n        </div>\n        \n        <div className=\"setup-content\">\n          {currentStep === 1 && renderStep1()}\n          {currentStep === 2 && renderStep2()}\n          {currentStep === 3 && renderStep3()}\n          {currentStep === 4 && renderStep4()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeviceSetup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
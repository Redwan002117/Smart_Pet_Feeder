{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'../supabaseClient.ts';import'../styles/Profile.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Profile=()=>{var _userProfile$username,_userProfile$username2;const[loading,setLoading]=useState(true);const[userProfile,setUserProfile]=useState(null);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);// Edit profile form state\nconst[isEditing,setIsEditing]=useState(false);const[fullName,setFullName]=useState('');const[username,setUsername]=useState('');// Avatar upload state\nconst[avatarUrl,setAvatarUrl]=useState(null);const[avatarFile,setAvatarFile]=useState(null);const[uploadProgress,setUploadProgress]=useState(0);const[uploading,setUploading]=useState(false);// Admin request state\nconst[showAdminRequest,setShowAdminRequest]=useState(false);const[adminRequestReason,setAdminRequestReason]=useState('');useEffect(()=>{fetchProfile();},[]);// Fetch user profile\nconst fetchProfile=async()=>{try{setLoading(true);// Get current user\nconst{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');// Fetch profile data\nconst{data,error}=await supabase.from('profiles').select('*').eq('id',user.id).single();if(error)throw error;if(data){setUserProfile(data);setFullName(data.full_name||'');setUsername(data.username||'');setAvatarUrl(data.avatar_url||null);}}catch(err){console.error('Error fetching profile:',err);setError('Failed to load profile. Please try again.');}finally{setLoading(false);}};// Update profile\nconst handleUpdateProfile=async e=>{e.preventDefault();if(!userProfile)return;try{setLoading(true);setError(null);// Validate username\nif(!username.trim()){setError('Username cannot be empty');setLoading(false);return;}// Check if username already exists (excluding current user)\nconst{data:usernameCheck,error:usernameError}=await supabase.from('profiles').select('id').eq('username',username).neq('id',userProfile.id);if(usernameError)throw usernameError;if(usernameCheck&&usernameCheck.length>0){setError('This username is already taken');setLoading(false);return;}// Update profile\nconst updates={username,full_name:fullName,updated_at:new Date().toISOString()};const{error}=await supabase.from('profiles').update(updates).eq('id',userProfile.id);if(error)throw error;// Upload avatar if changed\nif(avatarFile){await uploadAvatar();}setSuccess('Profile updated successfully');// Refresh profile data\nawait fetchProfile();setIsEditing(false);}catch(err){console.error('Error updating profile:',err);setError(err.message||'Failed to update profile');}finally{setLoading(false);}};// Handle avatar selection\nconst handleAvatarChange=e=>{if(!e.target.files||e.target.files.length===0){return;}const file=e.target.files[0];if(file.size>2*1024*1024){// 2MB max\nsetError('Image is too large. Please select an image under 2MB.');return;}// Preview image\nconst reader=new FileReader();reader.onload=e=>{var _e$target;if((_e$target=e.target)!==null&&_e$target!==void 0&&_e$target.result){setAvatarUrl(e.target.result);}};reader.readAsDataURL(file);setAvatarFile(file);};// Upload avatar to storage\nconst uploadAvatar=async()=>{if(!avatarFile||!userProfile)return;try{setUploading(true);// Generate a unique file name\nconst fileExt=avatarFile.name.split('.').pop();const fileName=`${userProfile.id}-${Math.random().toString(36).substring(2)}.${fileExt}`;const filePath=`avatars/${fileName}`;// Upload file\nconst{error:uploadError}=await supabase.storage.from('user-avatars').upload(filePath,avatarFile,{cacheControl:'3600',upsert:true});if(uploadError)throw uploadError;// Get public URL\nconst{data}=supabase.storage.from('user-avatars').getPublicUrl(filePath);// Update profile with new avatar URL\nconst{error:updateError}=await supabase.from('profiles').update({avatar_url:data.publicUrl}).eq('id',userProfile.id);if(updateError)throw updateError;setAvatarUrl(data.publicUrl);}catch(err){console.error('Error uploading avatar:',err);setError('Failed to upload avatar. Please try again.');}finally{setUploading(false);setAvatarFile(null);}};// Send request for admin role\nconst handleAdminRequest=async e=>{e.preventDefault();if(!userProfile)return;try{setLoading(true);setError(null);if(!adminRequestReason.trim()){setError('Please provide a reason for your request');return;}// In a real app, this would send an email or create a support ticket\n// Here we'll simulate it with a console log and a success message\nconsole.log('Admin request submitted:',{userId:userProfile.id,username:userProfile.username,email:userProfile.email,reason:adminRequestReason});setSuccess('Admin role request submitted successfully. You will be contacted soon.');setShowAdminRequest(false);setAdminRequestReason('');}catch(err){console.error('Error submitting admin request:',err);setError(err.message||'Failed to submit admin request');}finally{setLoading(false);}};// Format date for display\nconst formatDate=dateString=>{if(!dateString)return'Unknown';return new Date(dateString).toLocaleDateString();};if(loading&&!userProfile){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading profile...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"My Profile\"})}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-alert\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-warning\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"error-close\",onClick:()=>setError(null),children:\"\\xD7\"})]}),success&&/*#__PURE__*/_jsxs(\"div\",{className:\"success-alert\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-check-circle\"}),/*#__PURE__*/_jsx(\"p\",{children:success}),/*#__PURE__*/_jsx(\"button\",{className:\"success-close\",onClick:()=>setSuccess(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"avatar-container\",children:[avatarUrl?/*#__PURE__*/_jsx(\"img\",{src:avatarUrl,alt:(userProfile===null||userProfile===void 0?void 0:userProfile.username)||'User',className:\"avatar-image\"}):/*#__PURE__*/_jsx(\"div\",{className:\"avatar-placeholder\",children:(userProfile===null||userProfile===void 0?void 0:(_userProfile$username=userProfile.username)===null||_userProfile$username===void 0?void 0:(_userProfile$username2=_userProfile$username[0])===null||_userProfile$username2===void 0?void 0:_userProfile$username2.toUpperCase())||'U'}),isEditing&&/*#__PURE__*/_jsxs(\"div\",{className:\"avatar-upload\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"avatar-input\",className:\"upload-label\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-camera\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Change\"})]}),/*#__PURE__*/_jsx(\"input\",{id:\"avatar-input\",type:\"file\",accept:\"image/*\",onChange:handleAvatarChange,className:\"upload-input\"})]})]}),!isEditing&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"profile-name\",children:(userProfile===null||userProfile===void 0?void 0:userProfile.full_name)||(userProfile===null||userProfile===void 0?void 0:userProfile.username)||'User'}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"meta-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-calendar\"}),\"Joined \",formatDate(userProfile===null||userProfile===void 0?void 0:userProfile.created_at)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"meta-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-user\"}),\"@\",userProfile===null||userProfile===void 0?void 0:userProfile.username]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-edit-profile\",onClick:()=>setIsEditing(true),children:\"Edit Profile\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-details\",children:isEditing?/*#__PURE__*/_jsxs(\"form\",{className:\"edit-profile-form\",onSubmit:handleUpdateProfile,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Profile\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{id:\"username\",type:\"text\",value:username,onChange:e=>setUsername(e.target.value),maxLength:20,required:true}),/*#__PURE__*/_jsx(\"small\",{className:\"form-hint\",children:\"This will be your public @username\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"full-name\",children:\"Full Name (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"full-name\",type:\"text\",value:fullName,onChange:e=>setFullName(e.target.value),maxLength:50})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"email\",value:(userProfile===null||userProfile===void 0?void 0:userProfile.email)||'',disabled:true,className:\"readonly-input\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-hint\",children:\"Email cannot be changed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline\",onClick:()=>{setIsEditing(false);setFullName((userProfile===null||userProfile===void 0?void 0:userProfile.full_name)||'');setUsername((userProfile===null||userProfile===void 0?void 0:userProfile.username)||'');setAvatarUrl((userProfile===null||userProfile===void 0?void 0:userProfile.avatar_url)||null);setAvatarFile(null);setError(null);},disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:loading?'Saving...':'Save Changes'})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Account Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"div\",{className:\"info-value\",children:userProfile===null||userProfile===void 0?void 0:userProfile.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Username\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-value\",children:[\"@\",userProfile===null||userProfile===void 0?void 0:userProfile.username]})]}),(userProfile===null||userProfile===void 0?void 0:userProfile.full_name)&&/*#__PURE__*/_jsxs(\"div\",{className:\"info-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Full Name\"}),/*#__PURE__*/_jsx(\"div\",{className:\"info-value\",children:userProfile.full_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Account Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-value account-type\",children:[/*#__PURE__*/_jsx(\"span\",{className:`role-badge ${userProfile===null||userProfile===void 0?void 0:userProfile.role}`,children:(userProfile===null||userProfile===void 0?void 0:userProfile.role)==='admin'?'Administrator':'Standard User'}),(userProfile===null||userProfile===void 0?void 0:userProfile.role)!=='admin'&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-text\",onClick:()=>setShowAdminRequest(true),children:\"Request Admin Access\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Joined\"}),/*#__PURE__*/_jsx(\"div\",{className:\"info-value\",children:formatDate(userProfile===null||userProfile===void 0?void 0:userProfile.created_at)})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Account Security\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"security-links\",children:[/*#__PURE__*/_jsxs(\"a\",{href:\"/settings\",className:\"security-link\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-lock\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"link-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"link-title\",children:\"Security Settings\"}),/*#__PURE__*/_jsx(\"span\",{className:\"link-description\",children:\"Change password, enable 2FA, manage sessions\"})]}),/*#__PURE__*/_jsx(\"i\",{className:\"icon-arrow-right\"})]}),/*#__PURE__*/_jsxs(\"a\",{href:\"/settings#notifications\",className:\"security-link\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-bell\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"link-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"link-title\",children:\"Notification Preferences\"}),/*#__PURE__*/_jsx(\"span\",{className:\"link-description\",children:\"Manage your notification settings\"})]}),/*#__PURE__*/_jsx(\"i\",{className:\"icon-arrow-right\"})]})]})]})})]})}),showAdminRequest&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Request Admin Access\"}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowAdminRequest(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAdminRequest,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"admin-request-info\",children:\"Admin access provides additional privileges to manage users, system settings, and access to advanced features. Please explain why you need admin access:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"admin-reason\",children:\"Reason for Request\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"admin-reason\",value:adminRequestReason,onChange:e=>setAdminRequestReason(e.target.value),rows:5,placeholder:\"Please explain why you need admin access...\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline\",onClick:()=>setShowAdminRequest(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:\"Submit Request\"})]})]})]})})]});};export default Profile;","map":{"version":3,"names":["React","useState","useEffect","supabase","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Profile","_userProfile$username","_userProfile$username2","loading","setLoading","userProfile","setUserProfile","error","setError","success","setSuccess","isEditing","setIsEditing","fullName","setFullName","username","setUsername","avatarUrl","setAvatarUrl","avatarFile","setAvatarFile","uploadProgress","setUploadProgress","uploading","setUploading","showAdminRequest","setShowAdminRequest","adminRequestReason","setAdminRequestReason","fetchProfile","data","user","auth","getUser","Error","from","select","eq","id","single","full_name","avatar_url","err","console","handleUpdateProfile","e","preventDefault","trim","usernameCheck","usernameError","neq","length","updates","updated_at","Date","toISOString","update","uploadAvatar","message","handleAvatarChange","target","files","file","size","reader","FileReader","onload","_e$target","result","readAsDataURL","fileExt","name","split","pop","fileName","Math","random","toString","substring","filePath","uploadError","storage","upload","cacheControl","upsert","getPublicUrl","updateError","publicUrl","handleAdminRequest","log","userId","email","reason","formatDate","dateString","toLocaleDateString","className","children","onClick","src","alt","toUpperCase","htmlFor","type","accept","onChange","created_at","onSubmit","value","maxLength","required","disabled","role","href","rows","placeholder"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/Profile.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient.ts';\nimport { UserProfile } from '../types';\nimport '../styles/Profile.css';\n\nconst Profile: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  // Edit profile form state\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [fullName, setFullName] = useState<string>('');\n  const [username, setUsername] = useState<string>('');\n  \n  // Avatar upload state\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(null);\n  const [avatarFile, setAvatarFile] = useState<File | null>(null);\n  const [uploadProgress, setUploadProgress] = useState<number>(0);\n  const [uploading, setUploading] = useState<boolean>(false);\n  \n  // Admin request state\n  const [showAdminRequest, setShowAdminRequest] = useState<boolean>(false);\n  const [adminRequestReason, setAdminRequestReason] = useState<string>('');\n\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n\n  // Fetch user profile\n  const fetchProfile = async () => {\n    try {\n      setLoading(true);\n      \n      // Get current user\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      // Fetch profile data\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n        \n      if (error) throw error;\n      \n      if (data) {\n        setUserProfile(data);\n        setFullName(data.full_name || '');\n        setUsername(data.username || '');\n        setAvatarUrl(data.avatar_url || null);\n      }\n    } catch (err: any) {\n      console.error('Error fetching profile:', err);\n      setError('Failed to load profile. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update profile\n  const handleUpdateProfile = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!userProfile) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Validate username\n      if (!username.trim()) {\n        setError('Username cannot be empty');\n        setLoading(false);\n        return;\n      }\n      \n      // Check if username already exists (excluding current user)\n      const { data: usernameCheck, error: usernameError } = await supabase\n        .from('profiles')\n        .select('id')\n        .eq('username', username)\n        .neq('id', userProfile.id);\n        \n      if (usernameError) throw usernameError;\n      \n      if (usernameCheck && usernameCheck.length > 0) {\n        setError('This username is already taken');\n        setLoading(false);\n        return;\n      }\n      \n      // Update profile\n      const updates = {\n        username,\n        full_name: fullName,\n        updated_at: new Date().toISOString()\n      };\n      \n      const { error } = await supabase\n        .from('profiles')\n        .update(updates)\n        .eq('id', userProfile.id);\n        \n      if (error) throw error;\n      \n      // Upload avatar if changed\n      if (avatarFile) {\n        await uploadAvatar();\n      }\n      \n      setSuccess('Profile updated successfully');\n      \n      // Refresh profile data\n      await fetchProfile();\n      setIsEditing(false);\n    } catch (err: any) {\n      console.error('Error updating profile:', err);\n      setError(err.message || 'Failed to update profile');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle avatar selection\n  const handleAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files || e.target.files.length === 0) {\n      return;\n    }\n    \n    const file = e.target.files[0];\n    if (file.size > 2 * 1024 * 1024) { // 2MB max\n      setError('Image is too large. Please select an image under 2MB.');\n      return;\n    }\n    \n    // Preview image\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      if (e.target?.result) {\n        setAvatarUrl(e.target.result as string);\n      }\n    };\n    reader.readAsDataURL(file);\n    \n    setAvatarFile(file);\n  };\n\n  // Upload avatar to storage\n  const uploadAvatar = async () => {\n    if (!avatarFile || !userProfile) return;\n    \n    try {\n      setUploading(true);\n      \n      // Generate a unique file name\n      const fileExt = avatarFile.name.split('.').pop();\n      const fileName = `${userProfile.id}-${Math.random().toString(36).substring(2)}.${fileExt}`;\n      const filePath = `avatars/${fileName}`;\n      \n      // Upload file\n      const { error: uploadError } = await supabase.storage\n        .from('user-avatars')\n        .upload(filePath, avatarFile, {\n          cacheControl: '3600',\n          upsert: true\n        });\n        \n      if (uploadError) throw uploadError;\n      \n      // Get public URL\n      const { data } = supabase.storage\n        .from('user-avatars')\n        .getPublicUrl(filePath);\n        \n      // Update profile with new avatar URL\n      const { error: updateError } = await supabase\n        .from('profiles')\n        .update({\n          avatar_url: data.publicUrl\n        })\n        .eq('id', userProfile.id);\n        \n      if (updateError) throw updateError;\n      \n      setAvatarUrl(data.publicUrl);\n    } catch (err: any) {\n      console.error('Error uploading avatar:', err);\n      setError('Failed to upload avatar. Please try again.');\n    } finally {\n      setUploading(false);\n      setAvatarFile(null);\n    }\n  };\n\n  // Send request for admin role\n  const handleAdminRequest = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!userProfile) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      if (!adminRequestReason.trim()) {\n        setError('Please provide a reason for your request');\n        return;\n      }\n      \n      // In a real app, this would send an email or create a support ticket\n      // Here we'll simulate it with a console log and a success message\n      console.log('Admin request submitted:', {\n        userId: userProfile.id,\n        username: userProfile.username,\n        email: userProfile.email,\n        reason: adminRequestReason\n      });\n      \n      setSuccess('Admin role request submitted successfully. You will be contacted soon.');\n      setShowAdminRequest(false);\n      setAdminRequestReason('');\n    } catch (err: any) {\n      console.error('Error submitting admin request:', err);\n      setError(err.message || 'Failed to submit admin request');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date for display\n  const formatDate = (dateString: string | undefined) => {\n    if (!dateString) return 'Unknown';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  if (loading && !userProfile) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading profile...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <h1>My Profile</h1>\n      </div>\n      \n      {error && (\n        <div className=\"error-alert\">\n          <i className=\"icon-warning\"></i>\n          <p>{error}</p>\n          <button \n            className=\"error-close\" \n            onClick={() => setError(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"success-alert\">\n          <i className=\"icon-check-circle\"></i>\n          <p>{success}</p>\n          <button \n            className=\"success-close\" \n            onClick={() => setSuccess(null)}\n          >\n            &times;\n          </button>\n        </div>\n      )}\n      \n      <div className=\"profile-content\">\n        <div className=\"profile-card\">\n          <div className=\"profile-sidebar\">\n            <div className=\"avatar-container\">\n              {avatarUrl ? (\n                <img \n                  src={avatarUrl} \n                  alt={userProfile?.username || 'User'}\n                  className=\"avatar-image\" \n                />\n              ) : (\n                <div className=\"avatar-placeholder\">\n                  {userProfile?.username?.[0]?.toUpperCase() || 'U'}\n                </div>\n              )}\n              \n              {isEditing && (\n                <div className=\"avatar-upload\">\n                  <label htmlFor=\"avatar-input\" className=\"upload-label\">\n                    <i className=\"icon-camera\"></i>\n                    <span>Change</span>\n                  </label>\n                  <input \n                    id=\"avatar-input\" \n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleAvatarChange}\n                    className=\"upload-input\" \n                  />\n                </div>\n              )}\n            </div>\n            \n            {!isEditing && (\n              <>\n                <h2 className=\"profile-name\">\n                  {userProfile?.full_name || userProfile?.username || 'User'}\n                </h2>\n                \n                <div className=\"profile-meta\">\n                  <div className=\"meta-item\">\n                    <i className=\"icon-calendar\"></i>\n                    Joined {formatDate(userProfile?.created_at)}\n                  </div>\n                  \n                  <div className=\"meta-item\">\n                    <i className=\"icon-user\"></i>\n                    @{userProfile?.username}\n                  </div>\n                </div>\n                \n                <button \n                  className=\"btn btn-primary btn-edit-profile\"\n                  onClick={() => setIsEditing(true)}\n                >\n                  Edit Profile\n                </button>\n              </>\n            )}\n          </div>\n          \n          <div className=\"profile-details\">\n            {isEditing ? (\n              <form className=\"edit-profile-form\" onSubmit={handleUpdateProfile}>\n                <h2>Edit Profile</h2>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    id=\"username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    maxLength={20}\n                    required\n                  />\n                  <small className=\"form-hint\">This will be your public @username</small>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"full-name\">Full Name (Optional)</label>\n                  <input\n                    id=\"full-name\"\n                    type=\"text\"\n                    value={fullName}\n                    onChange={(e) => setFullName(e.target.value)}\n                    maxLength={50}\n                  />\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    id=\"email\"\n                    type=\"email\"\n                    value={userProfile?.email || ''}\n                    disabled\n                    className=\"readonly-input\"\n                  />\n                  <small className=\"form-hint\">Email cannot be changed</small>\n                </div>\n                \n                <div className=\"form-actions\">\n                  <button \n                    type=\"button\"\n                    className=\"btn btn-outline\" \n                    onClick={() => {\n                      setIsEditing(false);\n                      setFullName(userProfile?.full_name || '');\n                      setUsername(userProfile?.username || '');\n                      setAvatarUrl(userProfile?.avatar_url || null);\n                      setAvatarFile(null);\n                      setError(null);\n                    }}\n                    disabled={loading}\n                  >\n                    Cancel\n                  </button>\n                  <button \n                    type=\"submit\"\n                    className=\"btn btn-primary\" \n                    disabled={loading}\n                  >\n                    {loading ? 'Saving...' : 'Save Changes'}\n                  </button>\n                </div>\n              </form>\n            ) : (\n              <>\n                <h2>Account Information</h2>\n                \n                <div className=\"info-group\">\n                  <div className=\"info-label\">Email</div>\n                  <div className=\"info-value\">{userProfile?.email}</div>\n                </div>\n                \n                <div className=\"info-group\">\n                  <div className=\"info-label\">Username</div>\n                  <div className=\"info-value\">@{userProfile?.username}</div>\n                </div>\n                \n                {userProfile?.full_name && (\n                  <div className=\"info-group\">\n                    <div className=\"info-label\">Full Name</div>\n                    <div className=\"info-value\">{userProfile.full_name}</div>\n                  </div>\n                )}\n                \n                <div className=\"info-group\">\n                  <div className=\"info-label\">Account Type</div>\n                  <div className=\"info-value account-type\">\n                    <span className={`role-badge ${userProfile?.role}`}>\n                      {userProfile?.role === 'admin' ? 'Administrator' : 'Standard User'}\n                    </span>\n                    \n                    {userProfile?.role !== 'admin' && (\n                      <button \n                        className=\"btn btn-text\"\n                        onClick={() => setShowAdminRequest(true)}\n                      >\n                        Request Admin Access\n                      </button>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"info-group\">\n                  <div className=\"info-label\">Joined</div>\n                  <div className=\"info-value\">{formatDate(userProfile?.created_at)}</div>\n                </div>\n                \n                <h3>Account Security</h3>\n                <div className=\"security-links\">\n                  <a href=\"/settings\" className=\"security-link\">\n                    <i className=\"icon-lock\"></i>\n                    <div className=\"link-content\">\n                      <span className=\"link-title\">Security Settings</span>\n                      <span className=\"link-description\">Change password, enable 2FA, manage sessions</span>\n                    </div>\n                    <i className=\"icon-arrow-right\"></i>\n                  </a>\n                  \n                  <a href=\"/settings#notifications\" className=\"security-link\">\n                    <i className=\"icon-bell\"></i>\n                    <div className=\"link-content\">\n                      <span className=\"link-title\">Notification Preferences</span>\n                      <span className=\"link-description\">Manage your notification settings</span>\n                    </div>\n                    <i className=\"icon-arrow-right\"></i>\n                  </a>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* Admin Request Modal */}\n      {showAdminRequest && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Request Admin Access</h2>\n              <button \n                className=\"modal-close\" \n                onClick={() => setShowAdminRequest(false)}\n              >\n                &times;\n              </button>\n            </div>\n            \n            <form onSubmit={handleAdminRequest}>\n              <div className=\"modal-body\">\n                <p className=\"admin-request-info\">\n                  Admin access provides additional privileges to manage users, \n                  system settings, and access to advanced features. Please explain \n                  why you need admin access:\n                </p>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"admin-reason\">Reason for Request</label>\n                  <textarea\n                    id=\"admin-reason\"\n                    value={adminRequestReason}\n                    onChange={(e) => setAdminRequestReason(e.target.value)}\n                    rows={5}\n                    placeholder=\"Please explain why you need admin access...\"\n                    required\n                  ></textarea>\n                </div>\n              </div>\n              \n              <div className=\"modal-footer\">\n                <button \n                  type=\"button\" \n                  className=\"btn btn-outline\" \n                  onClick={() => setShowAdminRequest(false)}\n                >\n                  Cancel\n                </button>\n                <button \n                  type=\"submit\" \n                  className=\"btn btn-primary\"\n                  disabled={loading}\n                >\n                  Submit Request\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
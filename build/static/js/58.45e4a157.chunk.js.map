{"version":3,"file":"static/js/58.45e4a157.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Doughnut","DoughnutController","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel"],"sourceRoot":""}
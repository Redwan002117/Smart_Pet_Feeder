{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'../subabaseClient';import{Line,Doughnut,Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,ArcElement,BarElement,Title,Tooltip,Legend}from'chart.js';import'../styles/AdminDashboard.css';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,ArcElement,BarElement,Title,Tooltip,Legend);const AdminDashboard=()=>{const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Statistics\nconst[userCount,setUserCount]=useState(0);const[verifiedUserCount,setVerifiedUserCount]=useState(0);const[deviceCount,setDeviceCount]=useState(0);const[petCount,setPetCount]=useState(0);const[feedingCount,setFeedingCount]=useState(0);// Charts data\nconst[userGrowthData,setUserGrowthData]=useState(null);const[deviceStatusData,setDeviceStatusData]=useState(null);const[feedingHistoryData,setFeedingHistoryData]=useState(null);const[deviceDistributionData,setDeviceDistributionData]=useState(null);useEffect(()=>{fetchAdminData();},[]);const fetchAdminData=async()=>{try{setLoading(true);// Check admin access\nconst{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{data:profile}=await supabase.from('profiles').select('role').eq('id',user.id).single();if(!profile||profile.role!=='admin'){throw new Error('You do not have admin access');}// Fetch statistics\nconst{count:usersCount,error:usersError}=await supabase.from('profiles').select('*',{count:'exact',head:true});if(usersError)throw usersError;// Simplified verification count (in a real app, you would check email verification status)\nconst{count:verifiedCount,error:verifiedError}=await supabase.from('profiles').select('*',{count:'exact',head:true}).not('email','eq','');if(verifiedError)throw verifiedError;const{count:devicesCount,error:devicesError}=await supabase.from('devices').select('*',{count:'exact',head:true});if(devicesError)throw devicesError;const{count:petsCount,error:petsError}=await supabase.from('pets').select('*',{count:'exact',head:true});if(petsError)throw petsError;const{count:feedingsCount,error:feedingsError}=await supabase.from('feeding_history').select('*',{count:'exact',head:true});if(feedingsError)throw feedingsError;// Set statistics\nsetUserCount(usersCount||0);setVerifiedUserCount(verifiedCount||0);setDeviceCount(devicesCount||0);setPetCount(petsCount||0);setFeedingCount(feedingsCount||0);// Generate chart data\ngenerateUserGrowthChart();generateDeviceStatusChart();generateFeedingHistoryChart();generateDeviceDistributionChart();}catch(err){console.error('Error fetching admin data:',err);setError(err.message||'Failed to load admin dashboard');}finally{setLoading(false);}};// Generate user growth chart data (simulated)\nconst generateUserGrowthChart=()=>{// In a real app, you'd fetch actual data by date from the database\nconst labels=['Jan','Feb','Mar','Apr','May','Jun','Jul'];const data={labels,datasets:[{label:'New Users',data:[5,8,12,15,20,25,30],borderColor:'rgba(54, 162, 235, 1)',backgroundColor:'rgba(54, 162, 235, 0.2)',tension:0.3}]};setUserGrowthData(data);};// Generate device status chart data (simulated)\nconst generateDeviceStatusChart=()=>{const data={labels:['Online','Offline','Low Food'],datasets:[{data:[deviceCount*0.7,deviceCount*0.2,deviceCount*0.1],backgroundColor:['rgba(75, 192, 192, 0.7)','rgba(255, 99, 132, 0.7)','rgba(255, 205, 86, 0.7)'],borderColor:['rgba(75, 192, 192, 1)','rgba(255, 99, 132, 1)','rgba(255, 205, 86, 1)'],borderWidth:1}]};setDeviceStatusData(data);};// Generate feeding history chart (simulated)\nconst generateFeedingHistoryChart=()=>{const labels=['Mon','Tue','Wed','Thu','Fri','Sat','Sun'];const data={labels,datasets:[{label:'Scheduled Feedings',data:[15,18,14,20,16,12,10],backgroundColor:'rgba(54, 162, 235, 0.7)'},{label:'Manual Feedings',data:[8,5,9,6,10,12,7],backgroundColor:'rgba(255, 99, 132, 0.7)'}]};setFeedingHistoryData(data);};// Generate device distribution chart (simulated)\nconst generateDeviceDistributionChart=()=>{const data={labels:['1 Device','2 Devices','3+ Devices'],datasets:[{label:'Users',data:[Math.floor(userCount*0.6),Math.floor(userCount*0.3),Math.floor(userCount*0.1)],backgroundColor:['rgba(255, 99, 132, 0.7)','rgba(54, 162, 235, 0.7)','rgba(75, 192, 192, 0.7)'],borderColor:['rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(75, 192, 192, 1)'],borderWidth:1}]};setDeviceDistributionData(data);};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading admin dashboard...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-error\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-dashboard-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"admin-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsx(\"div\",{className:\"admin-actions\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-outline\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon-download\"}),\" Export Data\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon user-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-users\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Users\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:userCount}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-secondary\",children:[verifiedUserCount,\" verified (\",Math.round(verifiedUserCount/userCount*100),\"%)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon device-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-device\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Devices\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:deviceCount}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-secondary\",children:[(deviceCount/userCount).toFixed(1),\" avg per user\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon pet-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-paw\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Pets\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:petCount}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-secondary\",children:[(petCount/userCount).toFixed(1),\" avg per user\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon food-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"icon-food\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Feedings\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:feedingCount}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-secondary\",children:[Math.round(feedingCount/7),\" avg per day (week)\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-card wide\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"User Growth\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:userGrowthData&&/*#__PURE__*/_jsx(Line,{data:userGrowthData,options:{responsive:true,maintainAspectRatio:false}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Device Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:deviceStatusData&&/*#__PURE__*/_jsx(Doughnut,{data:deviceStatusData,options:{responsive:true,maintainAspectRatio:false}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Device Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:deviceDistributionData&&/*#__PURE__*/_jsx(Doughnut,{data:deviceDistributionData,options:{responsive:true,maintainAspectRatio:false}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-card wide\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Feeding History (Last Week)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:feedingHistoryData&&/*#__PURE__*/_jsx(Bar,{data:feedingHistoryData,options:{responsive:true,maintainAspectRatio:false}})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"system-status\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"System Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Database\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-indicator healthy\",children:\"Healthy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-metric\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Query Performance:\"}),/*#__PURE__*/_jsx(\"span\",{children:\"27ms avg\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-metric\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Storage Used:\"}),/*#__PURE__*/_jsx(\"span\",{children:\"12%\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Authentication\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-indicator healthy\",children:\"Healthy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-metric\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Active Sessions:\"}),/*#__PURE__*/_jsx(\"span\",{children:Math.round(userCount*0.4)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-metric\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Auth Success Rate:\"}),/*#__PURE__*/_jsx(\"span\",{children:\"99.7%\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"API\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-indicator healthy\",children:\"Healthy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-metric\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Response Time:\"}),/*#__PURE__*/_jsx(\"span\",{children:\"65ms avg\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-metric\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Requests (24h):\"}),/*#__PURE__*/_jsx(\"span\",{children:Math.round(userCount*50)})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Storage\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-indicator healthy\",children:\"Healthy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-metric\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Files:\"}),/*#__PURE__*/_jsx(\"span\",{children:userCount*2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-metric\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Storage Used:\"}),/*#__PURE__*/_jsx(\"span\",{children:\"126 MB\"})]})]})]})]})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","supabase","Line","Doughnut","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","ArcElement","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","AdminDashboard","loading","setLoading","error","setError","userCount","setUserCount","verifiedUserCount","setVerifiedUserCount","deviceCount","setDeviceCount","petCount","setPetCount","feedingCount","setFeedingCount","userGrowthData","setUserGrowthData","deviceStatusData","setDeviceStatusData","feedingHistoryData","setFeedingHistoryData","deviceDistributionData","setDeviceDistributionData","fetchAdminData","data","user","auth","getUser","Error","profile","from","select","eq","id","single","role","count","usersCount","usersError","head","verifiedCount","verifiedError","not","devicesCount","devicesError","petsCount","petsError","feedingsCount","feedingsError","generateUserGrowthChart","generateDeviceStatusChart","generateFeedingHistoryChart","generateDeviceDistributionChart","err","console","message","labels","datasets","label","borderColor","backgroundColor","tension","borderWidth","Math","floor","className","children","round","toFixed","options","responsive","maintainAspectRatio"],"sources":["/workspaces/Smart_Pet_Feeder/src/pages/AdminDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../subabaseClient';\nimport { Line, Doughnut, Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  ArcElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport '../styles/AdminDashboard.css';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  ArcElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst AdminDashboard: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Statistics\n  const [userCount, setUserCount] = useState<number>(0);\n  const [verifiedUserCount, setVerifiedUserCount] = useState<number>(0);\n  const [deviceCount, setDeviceCount] = useState<number>(0);\n  const [petCount, setPetCount] = useState<number>(0);\n  const [feedingCount, setFeedingCount] = useState<number>(0);\n  \n  // Charts data\n  const [userGrowthData, setUserGrowthData] = useState<any>(null);\n  const [deviceStatusData, setDeviceStatusData] = useState<any>(null);\n  const [feedingHistoryData, setFeedingHistoryData] = useState<any>(null);\n  const [deviceDistributionData, setDeviceDistributionData] = useState<any>(null);\n\n  useEffect(() => {\n    fetchAdminData();\n  }, []);\n\n  const fetchAdminData = async () => {\n    try {\n      setLoading(true);\n      \n      // Check admin access\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data: profile } = await supabase\n        .from('profiles')\n        .select('role')\n        .eq('id', user.id)\n        .single();\n        \n      if (!profile || profile.role !== 'admin') {\n        throw new Error('You do not have admin access');\n      }\n      \n      // Fetch statistics\n      const { count: usersCount, error: usersError } = await supabase\n        .from('profiles')\n        .select('*', { count: 'exact', head: true });\n        \n      if (usersError) throw usersError;\n      \n      // Simplified verification count (in a real app, you would check email verification status)\n      const { count: verifiedCount, error: verifiedError } = await supabase\n        .from('profiles')\n        .select('*', { count: 'exact', head: true })\n        .not('email', 'eq', '');\n        \n      if (verifiedError) throw verifiedError;\n      \n      const { count: devicesCount, error: devicesError } = await supabase\n        .from('devices')\n        .select('*', { count: 'exact', head: true });\n        \n      if (devicesError) throw devicesError;\n      \n      const { count: petsCount, error: petsError } = await supabase\n        .from('pets')\n        .select('*', { count: 'exact', head: true });\n        \n      if (petsError) throw petsError;\n      \n      const { count: feedingsCount, error: feedingsError } = await supabase\n        .from('feeding_history')\n        .select('*', { count: 'exact', head: true });\n        \n      if (feedingsError) throw feedingsError;\n      \n      // Set statistics\n      setUserCount(usersCount || 0);\n      setVerifiedUserCount(verifiedCount || 0);\n      setDeviceCount(devicesCount || 0);\n      setPetCount(petsCount || 0);\n      setFeedingCount(feedingsCount || 0);\n      \n      // Generate chart data\n      generateUserGrowthChart();\n      generateDeviceStatusChart();\n      generateFeedingHistoryChart();\n      generateDeviceDistributionChart();\n    } catch (err: any) {\n      console.error('Error fetching admin data:', err);\n      setError(err.message || 'Failed to load admin dashboard');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Generate user growth chart data (simulated)\n  const generateUserGrowthChart = () => {\n    // In a real app, you'd fetch actual data by date from the database\n    const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'];\n    const data = {\n      labels,\n      datasets: [\n        {\n          label: 'New Users',\n          data: [5, 8, 12, 15, 20, 25, 30],\n          borderColor: 'rgba(54, 162, 235, 1)',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          tension: 0.3\n        }\n      ]\n    };\n    \n    setUserGrowthData(data);\n  };\n\n  // Generate device status chart data (simulated)\n  const generateDeviceStatusChart = () => {\n    const data = {\n      labels: ['Online', 'Offline', 'Low Food'],\n      datasets: [\n        {\n          data: [deviceCount * 0.7, deviceCount * 0.2, deviceCount * 0.1],\n          backgroundColor: [\n            'rgba(75, 192, 192, 0.7)',\n            'rgba(255, 99, 132, 0.7)',\n            'rgba(255, 205, 86, 0.7)'\n          ],\n          borderColor: [\n            'rgba(75, 192, 192, 1)',\n            'rgba(255, 99, 132, 1)',\n            'rgba(255, 205, 86, 1)'\n          ],\n          borderWidth: 1\n        }\n      ]\n    };\n    \n    setDeviceStatusData(data);\n  };\n\n  // Generate feeding history chart (simulated)\n  const generateFeedingHistoryChart = () => {\n    const labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const data = {\n      labels,\n      datasets: [\n        {\n          label: 'Scheduled Feedings',\n          data: [15, 18, 14, 20, 16, 12, 10],\n          backgroundColor: 'rgba(54, 162, 235, 0.7)',\n        },\n        {\n          label: 'Manual Feedings',\n          data: [8, 5, 9, 6, 10, 12, 7],\n          backgroundColor: 'rgba(255, 99, 132, 0.7)',\n        }\n      ]\n    };\n    \n    setFeedingHistoryData(data);\n  };\n\n  // Generate device distribution chart (simulated)\n  const generateDeviceDistributionChart = () => {\n    const data = {\n      labels: ['1 Device', '2 Devices', '3+ Devices'],\n      datasets: [\n        {\n          label: 'Users',\n          data: [Math.floor(userCount * 0.6), Math.floor(userCount * 0.3), Math.floor(userCount * 0.1)],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.7)',\n            'rgba(54, 162, 235, 0.7)',\n            'rgba(75, 192, 192, 0.7)'\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(75, 192, 192, 1)'\n          ],\n          borderWidth: 1\n        }\n      ]\n    };\n    \n    setDeviceDistributionData(data);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading admin dashboard...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <i className=\"icon-error\"></i>\n        <h2>Error</h2>\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"admin-dashboard-container\">\n      <div className=\"admin-header\">\n        <h1>Admin Dashboard</h1>\n        <div className=\"admin-actions\">\n          <button className=\"btn btn-outline\">\n            <i className=\"icon-download\"></i> Export Data\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"stats-grid\">\n        <div className=\"stat-card\">\n          <div className=\"stat-icon user-icon\">\n            <i className=\"icon-users\"></i>\n          </div>\n          <div className=\"stat-content\">\n            <h3>Total Users</h3>\n            <div className=\"stat-value\">{userCount}</div>\n            <div className=\"stat-secondary\">\n              {verifiedUserCount} verified ({Math.round((verifiedUserCount / userCount) * 100)}%)\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon device-icon\">\n            <i className=\"icon-device\"></i>\n          </div>\n          <div className=\"stat-content\">\n            <h3>Total Devices</h3>\n            <div className=\"stat-value\">{deviceCount}</div>\n            <div className=\"stat-secondary\">\n              {(deviceCount / userCount).toFixed(1)} avg per user\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon pet-icon\">\n            <i className=\"icon-paw\"></i>\n          </div>\n          <div className=\"stat-content\">\n            <h3>Total Pets</h3>\n            <div className=\"stat-value\">{petCount}</div>\n            <div className=\"stat-secondary\">\n              {(petCount / userCount).toFixed(1)} avg per user\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon food-icon\">\n            <i className=\"icon-food\"></i>\n          </div>\n          <div className=\"stat-content\">\n            <h3>Total Feedings</h3>\n            <div className=\"stat-value\">{feedingCount}</div>\n            <div className=\"stat-secondary\">\n              {Math.round(feedingCount / 7)} avg per day (week)\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"charts-grid\">\n        <div className=\"chart-card wide\">\n          <h3>User Growth</h3>\n          <div className=\"chart-container\">\n            {userGrowthData && <Line data={userGrowthData} options={{ responsive: true, maintainAspectRatio: false }} />}\n          </div>\n        </div>\n        \n        <div className=\"chart-card\">\n          <h3>Device Status</h3>\n          <div className=\"chart-container\">\n            {deviceStatusData && <Doughnut data={deviceStatusData} options={{ responsive: true, maintainAspectRatio: false }} />}\n          </div>\n        </div>\n        \n        <div className=\"chart-card\">\n          <h3>Device Distribution</h3>\n          <div className=\"chart-container\">\n            {deviceDistributionData && <Doughnut data={deviceDistributionData} options={{ responsive: true, maintainAspectRatio: false }} />}\n          </div>\n        </div>\n        \n        <div className=\"chart-card wide\">\n          <h3>Feeding History (Last Week)</h3>\n          <div className=\"chart-container\">\n            {feedingHistoryData && <Bar data={feedingHistoryData} options={{ responsive: true, maintainAspectRatio: false }} />}\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"system-status\">\n        <h2>System Status</h2>\n        \n        <div className=\"status-grid\">\n          <div className=\"status-card\">\n            <div className=\"status-header\">\n              <h3>Database</h3>\n              <span className=\"status-indicator healthy\">Healthy</span>\n            </div>\n            <div className=\"status-details\">\n              <div className=\"status-metric\">\n                <span>Query Performance:</span>\n                <span>27ms avg</span>\n              </div>\n              <div className=\"status-metric\">\n                <span>Storage Used:</span>\n                <span>12%</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"status-card\">\n            <div className=\"status-header\">\n              <h3>Authentication</h3>\n              <span className=\"status-indicator healthy\">Healthy</span>\n            </div>\n            <div className=\"status-details\">\n              <div className=\"status-metric\">\n                <span>Active Sessions:</span>\n                <span>{Math.round(userCount * 0.4)}</span>\n              </div>\n              <div className=\"status-metric\">\n                <span>Auth Success Rate:</span>\n                <span>99.7%</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"status-card\">\n            <div className=\"status-header\">\n              <h3>API</h3>\n              <span className=\"status-indicator healthy\">Healthy</span>\n            </div>\n            <div className=\"status-details\">\n              <div className=\"status-metric\">\n                <span>Response Time:</span>\n                <span>65ms avg</span>\n              </div>\n              <div className=\"status-metric\">\n                <span>Requests (24h):</span>\n                <span>{Math.round(userCount * 50)}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"status-card\">\n            <div className=\"status-header\">\n              <h3>Storage</h3>\n              <span className=\"status-indicator healthy\">Healthy</span>\n            </div>\n            <div className=\"status-details\">\n              <div className=\"status-metric\">\n                <span>Total Files:</span>\n                <span>{userCount * 2}</span>\n              </div>\n              <div className=\"status-metric\">\n                <span>Storage Used:</span>\n                <span>126 MB</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
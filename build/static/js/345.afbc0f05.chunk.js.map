{"version":3,"file":"static/js/345.afbc0f05.chunk.js","mappings":"yMAMA,MAyGA,EAzGiCA,KAC/B,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAkB,IACzCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAwB,OAC3CK,EAASC,IAAcN,EAAAA,EAAAA,WAAkB,GAC1CO,GAAWC,EAAAA,EAAAA,MA8BjB,OAAIH,GAEAI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKI,IAAI,YAAYC,IAAI,qBACzBL,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAGNC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBACbD,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,wCACmCF,EAAAA,EAAAA,KAAA,UAAAE,SAASb,IAAe,oFAG9DW,EAAAA,EAAAA,KAAA,UACEC,UAAU,2BACVK,QAASA,IAAMR,EAAS,UAAUI,SACnC,2BAUTF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKI,IAAI,YAAYC,IAAI,qBACzBL,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAGNF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAEHR,IAASM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SAAER,KAEvCS,EAAAA,EAAAA,MAAA,QAAMI,SApESC,UAInB,GAHAC,EAAEC,iBAGGrB,IAAUsB,EAAAA,EAAAA,IAAatB,GAK5B,IACEI,GAAW,GACXE,EAAS,MAET,MAAM,MAAED,SAAgBkB,EAAAA,EAASC,KAAKC,sBAAsBzB,EAAO,CACjE0B,WAAY,GAAGC,OAAOC,SAASC,yBAGjC,GAAIxB,EAAO,MAAMA,EAEjBG,GAAW,EACb,CAAE,MAAOsB,GACPC,QAAQ1B,MAAM,wBAAyByB,GACvCxB,EAASwB,EAAIE,SAAW,2DAC1B,CAAC,QACC5B,GAAW,EACb,MApBEE,EAAS,qCAoBX,EA2CiCO,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,QAAOpB,SAAC,WACvBF,EAAAA,EAAAA,KAAA,SACEuB,GAAG,QACHC,KAAK,QACLC,MAAOpC,EACPqC,SAAWjB,GAAMnB,EAASmB,EAAEkB,OAAOF,OACnCG,YAAY,iBACZC,UAAQ,QAIZ7B,EAAAA,EAAAA,KAAA,UACEwB,KAAK,SACLvB,UAAU,2BACV6B,SAAUtC,EAAQU,SAEjBV,EAAU,aAAe,wBAI9BQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CAACC,GAAG,SAAQ9B,SAAC,wBAGlB,C","sources":["pages/ForgotPassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient.ts';\nimport { isValidEmail } from '../utils/validation.ts';\nimport '../styles/Auth.css';\n\nconst ForgotPassword: React.FC = () => {\n  const [email, setEmail] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validate email\n    if (!email || !isValidEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/auth/callback`,\n      });\n      \n      if (error) throw error;\n      \n      setSuccess(true);\n    } catch (err: any) {\n      console.error('Password reset error:', err);\n      setError(err.message || 'An error occurred while sending the password reset email');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <div className=\"auth-container fade-in\">\n        <div className=\"auth-card\">\n          <div className=\"auth-logo\">\n            <img src=\"/logo.svg\" alt=\"Pet Feeder Logo\" />\n            <h1>Pet Feeder</h1>\n          </div>\n          \n          <div className=\"success-message\">\n            <i className=\"icon-check-circle\"></i>\n            <h2>Check your email</h2>\n            <p>\n              We've sent a password reset link to <strong>{email}</strong>.\n              Please check your inbox and follow the instructions to reset your password.\n            </p>\n            <button\n              className=\"btn btn-primary btn-full\"\n              onClick={() => navigate('/login')}\n            >\n              Back to Login\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-container fade-in\">\n      <div className=\"auth-card\">\n        <div className=\"auth-logo\">\n          <img src=\"/logo.svg\" alt=\"Pet Feeder Logo\" />\n          <h1>Pet Feeder</h1>\n        </div>\n        \n        <h2>Reset your password</h2>\n        \n        {error && <div className=\"auth-error\">{error}</div>}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"your@email.com\"\n              required\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn btn-primary btn-full\" \n            disabled={loading}\n          >\n            {loading ? 'Sending...' : 'Send Reset Link'}\n          </button>\n        </form>\n        \n        <div className=\"auth-footer\">\n          <Link to=\"/login\">Back to Login</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"names":["ForgotPassword","email","setEmail","useState","loading","setLoading","error","setError","success","setSuccess","navigate","useNavigate","_jsx","className","children","_jsxs","src","alt","onClick","onSubmit","async","e","preventDefault","isValidEmail","supabase","auth","resetPasswordForEmail","redirectTo","window","location","origin","err","console","message","htmlFor","id","type","value","onChange","target","placeholder","required","disabled","Link","to"],"sourceRoot":""}
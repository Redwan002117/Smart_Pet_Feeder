"use strict";(self.webpackChunksmart_pet_feeder=self.webpackChunksmart_pet_feeder||[]).push([[308],{308:(e,s,i)=>{i.r(s),i.d(s,{default:()=>r});var a=i(43),t=i(662),n=i(584),c=i(58),d=i(461),l=i(579);d.t1.register(d.PP,d.kc,d.FN,d.No,d.E8,d.hE,d.m_,d.s$);const r=()=>{const[e,s]=(0,a.useState)([]),[i,d]=(0,a.useState)(null),[r,o]=(0,a.useState)([]),[h,m]=(0,a.useState)([]),[u,v]=(0,a.useState)(10),[g,x]=(0,a.useState)("manual"),[N,j]=(0,a.useState)(!0),[b,f]=(0,a.useState)(!1),[p,_]=(0,a.useState)(null),[w,y]=(0,a.useState)(1),[D,S]=(0,a.useState)(1),[E,T]=(0,a.useState)(null);(0,a.useEffect)((()=>{(async()=>{j(!0);try{const{data:{user:e}}=await n.N.auth.getUser();if(!e)throw new Error("User not found");const{data:i,error:a}=await n.N.from("devices").select("*").eq("user_id",e.id);if(a)throw a;i&&i.length>0?(s(i),d(i[0]),await A(i[0].device_id),await M(i[0].device_id,e.id)):(s([]),d(null))}catch(p){console.error("Error fetching data:",p),_(p.message)}finally{j(!1)}})();const e=n.N.channel("devices-changes").on("postgres_changes",{event:"*",schema:"public",table:"devices"},k).subscribe(),i=n.N.channel("history-changes").on("postgres_changes",{event:"INSERT",schema:"public",table:"feeding_history"},F).subscribe(),a=n.N.channel("schedules-changes").on("postgres_changes",{event:"*",schema:"public",table:"schedules"},C).subscribe();return()=>{e.unsubscribe(),i.unsubscribe(),a.unsubscribe()}}),[]);const k=async e=>{const{eventType:a,new:t,old:c}=e;if("INSERT"===a)s((e=>[...e,t]));else if("UPDATE"===a)s((e=>e.map((e=>e.device_id===t.device_id?t:e)))),i&&i.device_id===t.device_id&&d(t);else if("DELETE"===a&&(s((e=>e.filter((e=>e.device_id!==c.device_id)))),i&&i.device_id===c.device_id)){const{data:{user:e}}=await n.N.auth.getUser(),{data:s}=await n.N.from("devices").select("*").eq("user_id",null===e||void 0===e?void 0:e.id).limit(1);d(s&&s.length>0?s[0]:null)}},F=e=>{const{new:s}=e;i&&s.device_id===i.device_id&&(o((e=>[s,...e.slice(0,4)])),U([s,...r]))},C=e=>{const{eventType:s,new:a,old:t}=e;i&&("INSERT"===s&&a.device_id===i.device_id?m((e=>[...e,a].sort(((e,s)=>new Date(e.time).getTime()-new Date(s.time).getTime())).filter((e=>new Date(e.time)>new Date)).slice(0,2))):"UPDATE"===s&&a.device_id===i.device_id?m((e=>e.map((e=>e.schedule_id===a.schedule_id?a:e)).sort(((e,s)=>new Date(e.time).getTime()-new Date(s.time).getTime())).filter((e=>new Date(e.time)>new Date)).slice(0,2))):"DELETE"===s&&m((e=>e.filter((e=>e.schedule_id!==t.schedule_id)))))},A=async function(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;try{const i=5*(s-1),a=i+5-1,{count:t,error:c}=await n.N.from("feeding_history").select("*",{count:"exact",head:!0}).eq("device_id",e);if(c)throw c;S(Math.ceil((t||0)/5));const{data:d,error:l}=await n.N.from("feeding_history").select("*").eq("device_id",e).order("time",{ascending:!1}).range(i,a);if(l)throw l;o(d||[]),y(s),U(d||[])}catch(p){console.error("Error fetching feeding history:",p),_("Failed to load feeding history")}},M=async(e,s)=>{try{const i=(new Date).toISOString(),{data:a,error:t}=await n.N.from("schedules").select("*").eq("device_id",e).eq("user_id",s).gt("time",i).order("time").limit(2);if(t)throw t;m(a||[])}catch(p){console.error("Error fetching upcoming schedules:",p),_("Failed to load upcoming schedules")}},U=e=>{const s=e.reduce(((e,s)=>{const i=new Date(s.time).toLocaleDateString();return e[i]=(e[i]||0)+s.amount,e}),{}),i=Object.keys(s).sort(((e,s)=>new Date(e).getTime()-new Date(s).getTime())).slice(-7),a=i.map((e=>s[e]||0));T({labels:i,datasets:[{label:"Food Dispensed (g)",data:a,fill:!1,backgroundColor:"rgba(255, 206, 86, 0.2)",borderColor:"rgba(255, 206, 86, 1)",tension:.1}]})},L=async()=>{if(i)try{f(!0);const{error:e}=await n.N.from("devices").update({last_status:{...i.last_status,command:"dispense",command_amount:u}}).eq("device_id",i.device_id);if(e)throw e;const{error:s}=await n.N.from("feeding_history").insert([{device_id:i.device_id,time:(new Date).toISOString(),amount:u,manual:!0}]);if(s)throw s;alert(`Dispensing ${u}g of food!`)}catch(p){console.error("Error dispensing food:",p),_("Failed to dispense food")}finally{f(!1)}},q=e=>new Date(e).toLocaleString(),I=e=>{i&&A(i.device_id,e)};return N?(0,l.jsxs)("div",{className:"loading-container",children:[(0,l.jsx)("div",{className:"loading-spinner"}),(0,l.jsx)("p",{children:"Loading dashboard..."})]}):p?(0,l.jsxs)("div",{className:"error-container",children:[(0,l.jsx)("i",{className:"icon-warning"}),(0,l.jsx)("h2",{children:"Something went wrong"}),(0,l.jsx)("p",{children:p}),(0,l.jsx)("button",{className:"btn btn-primary",onClick:()=>window.location.reload(),children:"Try Again"})]}):(0,l.jsxs)("div",{className:"dashboard-container",children:[(0,l.jsxs)("div",{className:"dashboard-header",children:[(0,l.jsx)("h1",{children:"Dashboard"}),e.length<=1?null:(0,l.jsxs)("div",{className:"device-selector",children:[(0,l.jsx)("label",{htmlFor:"device-select",children:"Select Device:"}),(0,l.jsx)("select",{id:"device-select",value:(null===i||void 0===i?void 0:i.device_id)||"",onChange:s=>(async s=>{const i=e.find((e=>e.device_id===s));if(i){d(i),y(1);const{data:{user:e}}=await n.N.auth.getUser();e&&(await A(s),await M(s,e.id))}})(s.target.value),children:e.map((e=>(0,l.jsx)("option",{value:e.device_id,children:e.device_name},e.device_id)))})]})]}),(0,l.jsxs)("div",{className:"dashboard-grid",children:[(0,l.jsx)("div",{className:"grid-item status",children:(()=>{if(!i)return(0,l.jsxs)("div",{className:"no-devices-message",children:[(0,l.jsx)("i",{className:"icon-device-off"}),(0,l.jsx)("h3",{children:"No devices found"}),(0,l.jsx)("p",{children:"Connect your first Pet Feeder device to get started!"}),(0,l.jsx)(t.N_,{to:"/device-setup",className:"btn btn-primary",children:"Add Device"})]});const{last_status:e}=i,s=(null===e||void 0===e?void 0:e.food_level)||0,a=(null===e||void 0===e?void 0:e.wifi_strength)||0,n=null!==e&&void 0!==e&&e.last_update?new Date(1e3*parseInt(e.last_update)).toLocaleString():"Unknown";return(0,l.jsxs)("div",{className:"device-status-card",children:[(0,l.jsxs)("div",{className:"device-status-header",children:[(0,l.jsx)("h3",{children:i.device_name}),(0,l.jsx)("span",{className:"device-status "+(s>0?"online":"offline"),children:s>0?"Online":"Offline"})]}),(0,l.jsxs)("div",{className:"device-status-grid",children:[(0,l.jsxs)("div",{className:"status-item",children:[(0,l.jsx)("div",{className:"status-icon",children:(0,l.jsx)("i",{className:"icon-food"})}),(0,l.jsxs)("div",{className:"status-info",children:[(0,l.jsx)("h4",{children:"Food Level"}),(0,l.jsx)("div",{className:"progress-bar",children:(0,l.jsx)("div",{className:"progress-fill",style:{width:`${s}%`},"data-level":`${s}%`})})]})]}),(0,l.jsxs)("div",{className:"status-item",children:[(0,l.jsx)("div",{className:"status-icon",children:(0,l.jsx)("i",{className:"icon-wifi"})}),(0,l.jsxs)("div",{className:"status-info",children:[(0,l.jsx)("h4",{children:"WiFi Signal"}),(0,l.jsx)("div",{className:"wifi-strength",children:Array.from({length:4}).map(((e,s)=>(0,l.jsx)("div",{className:"wifi-bar "+(s<Math.ceil(a/25)?"active":"")},s)))})]})]}),(0,l.jsxs)("div",{className:"status-item",children:[(0,l.jsx)("div",{className:"status-icon",children:(0,l.jsx)("i",{className:"icon-clock"})}),(0,l.jsxs)("div",{className:"status-info",children:[(0,l.jsx)("h4",{children:"Last Update"}),(0,l.jsx)("p",{children:n})]})]})]})]})})()}),(0,l.jsx)("div",{className:"grid-item controls",children:i?(0,l.jsxs)("div",{className:"feeding-controls-card",children:[(0,l.jsxs)("div",{className:"tab-navigation",children:[(0,l.jsxs)("button",{className:"tab-button "+("manual"===g?"active":""),onClick:()=>x("manual"),children:[(0,l.jsx)("i",{className:"icon-hand"})," Manual Feeding"]}),(0,l.jsxs)("button",{className:"tab-button "+("scheduled"===g?"active":""),onClick:()=>x("scheduled"),children:[(0,l.jsx)("i",{className:"icon-calendar"})," Scheduled Feeding"]})]}),(0,l.jsx)("div",{className:"tab-content",children:"manual"===g?(0,l.jsxs)("div",{className:"manual-feeding",children:[(0,l.jsxs)("div",{className:"amount-selector",children:[(0,l.jsx)("h4",{children:"Amount to dispense (grams):"}),(0,l.jsxs)("div",{className:"amount-controls",children:[(0,l.jsx)("button",{className:"btn btn-circle",onClick:()=>v((e=>Math.max(5,e-5))),disabled:b,children:"-"}),(0,l.jsx)("input",{type:"number",value:u,onChange:e=>v(Math.max(5,Math.min(100,parseInt(e.target.value)||5))),min:"5",max:"100",disabled:b}),(0,l.jsx)("button",{className:"btn btn-circle",onClick:()=>v((e=>Math.min(100,e+5))),disabled:b,children:"+"})]})]}),(0,l.jsx)("button",{className:"btn btn-primary btn-dispense",onClick:L,disabled:b,children:b?"Dispensing...":"Dispense Now"})]}):(0,l.jsxs)("div",{className:"scheduled-feeding",children:[(0,l.jsx)("h4",{children:"Upcoming Feedings"}),h.length>0?(0,l.jsx)("ul",{className:"schedule-list",children:h.map((e=>(0,l.jsxs)("li",{className:"schedule-item",children:[(0,l.jsxs)("div",{className:"schedule-time",children:[(0,l.jsx)("i",{className:"icon-clock"}),q(e.time)]}),(0,l.jsxs)("div",{className:"schedule-amount",children:[(0,l.jsx)("i",{className:"icon-food"}),e.amount,"g"]})]},e.schedule_id)))}):(0,l.jsx)("p",{className:"no-schedules-message",children:"No upcoming feedings scheduled."}),(0,l.jsx)(t.N_,{to:"/schedule",className:"btn btn-outline",children:"Manage Schedules"})]})})]}):null}),(0,l.jsx)("div",{className:"grid-item history",children:i?(0,l.jsxs)("div",{className:"feeding-history-card",children:[(0,l.jsx)("h3",{children:"Recent Feedings"}),r.length>0?(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{className:"feeding-table",children:[(0,l.jsxs)("div",{className:"feeding-table-header",children:[(0,l.jsx)("div",{className:"table-cell",children:"Time"}),(0,l.jsx)("div",{className:"table-cell",children:"Amount"}),(0,l.jsx)("div",{className:"table-cell",children:"Type"})]}),r.map((e=>(0,l.jsxs)("div",{className:"feeding-table-row",children:[(0,l.jsx)("div",{className:"table-cell",children:q(e.time)}),(0,l.jsxs)("div",{className:"table-cell",children:[e.amount,"g"]}),(0,l.jsx)("div",{className:"table-cell",children:e.manual?"Manual":"Scheduled"})]},e.feed_id)))]}),(0,l.jsxs)("div",{className:"pagination",children:[(0,l.jsx)("button",{className:"btn btn-sm",disabled:1===w,onClick:()=>I(w-1),children:"Previous"}),(0,l.jsxs)("span",{className:"page-info",children:["Page ",w," of ",D]}),(0,l.jsx)("button",{className:"btn btn-sm",disabled:w===D,onClick:()=>I(w+1),children:"Next"})]})]}):(0,l.jsx)("p",{className:"no-history-message",children:"No feeding history available yet."}),(0,l.jsx)(t.N_,{to:"/history",className:"btn btn-text",children:"View Full History"})]}):null}),(0,l.jsx)("div",{className:"grid-item chart",children:(()=>{if(!i||!E)return null;return(0,l.jsxs)("div",{className:"chart-card",children:[(0,l.jsx)("h3",{children:"Feeding Analysis"}),(0,l.jsx)("div",{className:"chart-container",children:(0,l.jsx)(c.N1,{data:E,options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{position:"top"},title:{display:!0,text:"7-Day Feeding Trend"}},scales:{y:{beginAtZero:!0,title:{display:!0,text:"Food Amount (g)"}}}}})})]})})()})]})]})}}}]);
//# sourceMappingURL=308.75df87e0.chunk.js.map